{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.4", "generated_at": "2024-08-01T01:20:28.100706Z", "invocation_id": "f64311e4-7ff8-4f75-b0d7-4ff2dc110601", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:22.179636Z", "completed_at": "2024-08-01T01:20:22.695052Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:22.695461Z", "completed_at": "2024-08-01T01:20:22.695476Z"}], "thread_id": "Thread-1", "execution_time": 0.6915879249572754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:22.872690Z", "completed_at": "2024-08-01T01:20:22.877478Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:22.877902Z", "completed_at": "2024-08-01T01:20:22.877908Z"}], "thread_id": "Thread-1", "execution_time": 0.006233930587768555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:22.879954Z", "completed_at": "2024-08-01T01:20:22.884359Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:22.884752Z", "completed_at": "2024-08-01T01:20:22.884758Z"}], "thread_id": "Thread-1", "execution_time": 0.005844831466674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_set_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:22.886802Z", "completed_at": "2024-08-01T01:20:22.890974Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:22.891359Z", "completed_at": "2024-08-01T01:20:22.891365Z"}], "thread_id": "Thread-1", "execution_time": 0.005526304244995117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:22.893382Z", "completed_at": "2024-08-01T01:20:22.898534Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:22.898921Z", "completed_at": "2024-08-01T01:20:22.898926Z"}], "thread_id": "Thread-1", "execution_time": 0.006514310836791992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:22.900915Z", "completed_at": "2024-08-01T01:20:22.905114Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:22.905489Z", "completed_at": "2024-08-01T01:20:22.905495Z"}], "thread_id": "Thread-1", "execution_time": 0.0055463314056396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__creative_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:22.907520Z", "completed_at": "2024-08-01T01:20:23.506701Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:23.507106Z", "completed_at": "2024-08-01T01:20:23.507118Z"}], "thread_id": "Thread-1", "execution_time": 0.7761940956115723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    account_status\n    \n , \n    cast(null as TEXT) as \n    \n    business_country_code\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as TEXT) as \n    \n    timezone_name\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as bigint) as account_id,\n        _fivetran_synced,\n        name as account_name,\n        account_status,\n        business_country_code,\n        created_time as created_at,\n        currency,\n        timezone_name,\n        case when id is null and _fivetran_synced is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by _fivetran_synced desc) end = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:23.685573Z", "completed_at": "2024-08-01T01:20:24.308153Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:24.308555Z", "completed_at": "2024-08-01T01:20:24.308566Z"}], "thread_id": "Thread-1", "execution_time": 0.8008673191070557, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    updated_time\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    ad_set_id\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    creative_id\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        cast(id as bigint) as ad_id,\n        name as ad_name,\n        cast(account_id as bigint) as account_id,\n        cast(ad_set_id as bigint) as ad_set_id,   \n        cast(campaign_id as bigint) as campaign_id,\n        cast(creative_id as bigint) as creative_id,\n        case when id is null and updated_time is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by updated_time desc) end = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:24.487523Z", "completed_at": "2024-08-01T01:20:24.979449Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:24.979857Z", "completed_at": "2024-08-01T01:20:24.979867Z"}], "thread_id": "Thread-1", "execution_time": 0.6612117290496826, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_set_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    updated_time\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as timestamp) as \n    \n    end_time\n    \n , \n    cast(null as TEXT) as \n    \n    bid_strategy\n    \n , \n    cast(null as integer) as \n    \n    daily_budget\n    \n , \n    cast(null as integer) as \n    \n    budget_remaining\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        cast(id as bigint) as ad_set_id,\n        name as ad_set_name,\n        cast(account_id as bigint) as account_id,\n        cast(campaign_id as bigint) as campaign_id,\n        start_time as start_at,\n        end_time as end_at,\n        bid_strategy,\n        daily_budget,\n        budget_remaining,\n        status,\n        case when id is null and updated_time is null\n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by updated_time desc) end = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:25.150080Z", "completed_at": "2024-08-01T01:20:25.684535Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:25.684963Z", "completed_at": "2024-08-01T01:20:25.684973Z"}], "thread_id": "Thread-1", "execution_time": 0.7148759365081787, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    ad_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_name\n    \n , \n    cast(null as TEXT) as \n    \n    adset_name\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as integer) as \n    \n    inline_link_clicks\n    \n , \n    cast(null as float) as \n    \n    spend\n    \n , \n    cast(null as integer) as \n    \n    reach\n    \n , \n    cast(null as float) as \n    \n    frequency\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(ad_id as bigint) as ad_id,\n        ad_name,\n        adset_name as ad_set_name,\n        date as date_day,\n        cast(account_id as bigint) as account_id,\n        impressions,\n        coalesce(inline_link_clicks,0) as clicks,\n        spend\n\n        \n                , reach\n            \n                , frequency\n            \n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:25.866273Z", "completed_at": "2024-08-01T01:20:26.370027Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:26.370435Z", "completed_at": "2024-08-01T01:20:26.370446Z"}], "thread_id": "Thread-1", "execution_time": 1.271301507949829, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    updated_time\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as timestamp) as \n    \n    stop_time\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as integer) as \n    \n    daily_budget\n    \n , \n    cast(null as integer) as \n    \n    lifetime_budget\n    \n , \n    cast(null as float) as \n    \n    budget_remaining\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        created_time as created_at,\n        cast(account_id as bigint) as account_id,\n        cast(id as bigint) as campaign_id,\n        name as campaign_name,\n        start_time as start_at,\n        stop_time as end_at,\n        status,\n        daily_budget,\n        lifetime_budget,\n        budget_remaining,\n        case when id is null and updated_time is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by updated_time desc) end = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.139225Z", "completed_at": "2024-08-01T01:20:27.655996Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.656391Z", "completed_at": "2024-08-01T01:20:27.656401Z"}], "thread_id": "Thread-1", "execution_time": 0.687265157699585, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__creative_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    page_link\n    \n , \n    cast(null as TEXT) as \n    \n    template_page_link\n    \n , \n    cast(null as TEXT) as \n    \n    url_tags\n    \n , \n    cast(null as TEXT) as \n    \n    asset_feed_spec_link_urls\n    \n , \n    cast(null as TEXT) as \n    \n    object_story_link_data_child_attachments\n    \n , \n    cast(null as TEXT) as \n    \n    object_story_link_data_caption\n    \n , \n    cast(null as TEXT) as \n    \n    object_story_link_data_description\n    \n , \n    cast(null as TEXT) as \n    \n    object_story_link_data_link\n    \n , \n    cast(null as TEXT) as \n    \n    object_story_link_data_message\n    \n , \n    cast(null as TEXT) as \n    \n    template_app_link_spec_android\n    \n , \n    cast(null as TEXT) as \n    \n    template_app_link_spec_ios\n    \n , \n    cast(null as TEXT) as \n    \n    template_app_link_spec_ipad\n    \n , \n    cast(null as TEXT) as \n    \n    template_app_link_spec_iphone\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        _fivetran_id,\n        _fivetran_synced,\n        cast(id as bigint) as creative_id,\n        cast(account_id as bigint) as account_id,\n        name as creative_name,\n        page_link,\n        template_page_link,\n        url_tags,\n        asset_feed_spec_link_urls,\n        object_story_link_data_child_attachments,\n        object_story_link_data_caption, \n        object_story_link_data_description, \n        object_story_link_data_link, \n        object_story_link_data_message,\n        template_app_link_spec_ios,\n        template_app_link_spec_ipad,\n        template_app_link_spec_android,\n        template_app_link_spec_iphone,\n        case when id is null and _fivetran_synced is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by _fivetran_synced desc) end = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.827877Z", "completed_at": "2024-08-01T01:20:27.858234Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.858654Z", "completed_at": "2024-08-01T01:20:27.858661Z"}], "thread_id": "Thread-1", "execution_time": 0.03186488151550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_source_relation__account_id___fivetran_synced.f81aca1247", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, _fivetran_synced\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    group by source_relation, account_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.860532Z", "completed_at": "2024-08-01T01:20:27.868638Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.869030Z", "completed_at": "2024-08-01T01:20:27.869036Z"}], "thread_id": "Thread-1", "execution_time": 0.009346246719360352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__account_history__fivetran_synced.0570e35e1f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.870902Z", "completed_at": "2024-08-01T01:20:27.874417Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.874822Z", "completed_at": "2024-08-01T01:20:27.874828Z"}], "thread_id": "Thread-1", "execution_time": 0.004767179489135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__account_history_account_id.f1cf38c40f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.876678Z", "completed_at": "2024-08-01T01:20:27.880392Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.880785Z", "completed_at": "2024-08-01T01:20:27.880796Z"}], "thread_id": "Thread-1", "execution_time": 0.004960060119628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_source_relation__ad_id__updated_at.664b870e6c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, updated_at\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\n    group by source_relation, ad_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.882674Z", "completed_at": "2024-08-01T01:20:27.886268Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.886649Z", "completed_at": "2024-08-01T01:20:27.886655Z"}], "thread_id": "Thread-1", "execution_time": 0.004826784133911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_ad_id.11429d3064", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.888470Z", "completed_at": "2024-08-01T01:20:27.891999Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.892431Z", "completed_at": "2024-08-01T01:20:27.892437Z"}], "thread_id": "Thread-1", "execution_time": 0.0047931671142578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_updated_at.250a5a84e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.894303Z", "completed_at": "2024-08-01T01:20:27.898955Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.899339Z", "completed_at": "2024-08-01T01:20:27.899345Z"}], "thread_id": "Thread-1", "execution_time": 0.005908489227294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_source_relation__ad_set_id__updated_at.ff1d43114a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_set_id, updated_at\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\n    group by source_relation, ad_set_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.901180Z", "completed_at": "2024-08-01T01:20:27.904651Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.905036Z", "completed_at": "2024-08-01T01:20:27.905042Z"}], "thread_id": "Thread-1", "execution_time": 0.004700899124145508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_ad_set_id.e19a1df1bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_set_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\nwhere ad_set_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.906880Z", "completed_at": "2024-08-01T01:20:27.910432Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.910826Z", "completed_at": "2024-08-01T01:20:27.910832Z"}], "thread_id": "Thread-1", "execution_time": 0.004786968231201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_updated_at.ef7fafe0fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.912659Z", "completed_at": "2024-08-01T01:20:27.917333Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.917721Z", "completed_at": "2024-08-01T01:20:27.917727Z"}], "thread_id": "Thread-1", "execution_time": 0.00592041015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__account_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        accounts.account_status,\n        accounts.business_country_code,\n        accounts.created_at,\n        accounts.currency,\n        accounts.timezone_name,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__account_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.919771Z", "completed_at": "2024-08-01T01:20:27.923609Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.923998Z", "completed_at": "2024-08-01T01:20:27.924004Z"}], "thread_id": "Thread-1", "execution_time": 0.005221843719482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_source_relation__date_day__ad_id__account_id.9c647961f0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, ad_id, account_id\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n    group by source_relation, date_day, ad_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.925859Z", "completed_at": "2024-08-01T01:20:27.930257Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.930645Z", "completed_at": "2024-08-01T01:20:27.930651Z"}], "thread_id": "Thread-1", "execution_time": 0.005647420883178711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_account_id.d06f6d861b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.932465Z", "completed_at": "2024-08-01T01:20:27.935933Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.936310Z", "completed_at": "2024-08-01T01:20:27.936315Z"}], "thread_id": "Thread-1", "execution_time": 0.004674673080444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_ad_id.2611b250fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.938155Z", "completed_at": "2024-08-01T01:20:27.944709Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.945101Z", "completed_at": "2024-08-01T01:20:27.945107Z"}], "thread_id": "Thread-1", "execution_time": 0.007803201675415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\n    where is_most_recent_record = true\n\n),\n\nad_sets as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ads.ad_id,\n        ads.ad_name,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.947137Z", "completed_at": "2024-08-01T01:20:27.953720Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.954126Z", "completed_at": "2024-08-01T01:20:27.954132Z"}], "thread_id": "Thread-1", "execution_time": 0.007991313934326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__ad_set_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\n    where is_most_recent_record = true\n\n),\n\nad_sets as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ad_sets.start_at,\n        ad_sets.end_at,\n        ad_sets.bid_strategy,\n        ad_sets.daily_budget,\n        ad_sets.budget_remaining,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__ad_set_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.956102Z", "completed_at": "2024-08-01T01:20:27.962017Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.962396Z", "completed_at": "2024-08-01T01:20:27.962402Z"}], "thread_id": "Thread-1", "execution_time": 0.007266998291015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        campaigns.start_at,\n        campaigns.end_at,\n        campaigns.status,\n        campaigns.daily_budget,\n        campaigns.lifetime_budget,\n        campaigns.budget_remaining,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.964527Z", "completed_at": "2024-08-01T01:20:27.969127Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.969513Z", "completed_at": "2024-08-01T01:20:27.969518Z"}], "thread_id": "Thread-1", "execution_time": 0.00611424446105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_source_relation__campaign_id__updated_at.82c4f9a2a1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, updated_at\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\n    group by source_relation, campaign_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.971380Z", "completed_at": "2024-08-01T01:20:27.974875Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.975259Z", "completed_at": "2024-08-01T01:20:27.975265Z"}], "thread_id": "Thread-1", "execution_time": 0.004719257354736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_campaign_id.1ca7a83852", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.977121Z", "completed_at": "2024-08-01T01:20:27.980669Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.981058Z", "completed_at": "2024-08-01T01:20:27.981064Z"}], "thread_id": "Thread-1", "execution_time": 0.004785060882568359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_updated_at.9e59f99270", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.982924Z", "completed_at": "2024-08-01T01:20:27.986481Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.986863Z", "completed_at": "2024-08-01T01:20:27.986869Z"}], "thread_id": "Thread-1", "execution_time": 0.004777193069458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__url_tags", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history\n    where is_most_recent_record = true\n), \n\nrequired_fields as (\n\n    select\n        source_relation,\n        _fivetran_id,\n        creative_id,\n        url_tags\n    from base\n    where url_tags is not null\n), \n\n\n\n  cleaned_fields as (\n\n      select\n          source_relation,\n          _fivetran_id,\n          creative_id,\n          parse_json(url_tags) as url_tags\n      from required_fields\n      where url_tags is not null\n  ), \n\n  fields as (\n\n      select\n          source_relation,\n          _fivetran_id,\n          creative_id,\n          url_tags.value:key::string as key,\n          url_tags.value:value::string as value,\n          url_tags.value:type::string as type\n      from cleaned_fields,\n      lateral flatten( input => url_tags ) as url_tags\n  )\n\n \n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__url_tags"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.988869Z", "completed_at": "2024-08-01T01:20:27.992705Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.993096Z", "completed_at": "2024-08-01T01:20:27.993102Z"}], "thread_id": "Thread-1", "execution_time": 0.005231142044067383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_source_relation___fivetran_id.2466dae947", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, _fivetran_id\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history\n    group by source_relation, _fivetran_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:27.994959Z", "completed_at": "2024-08-01T01:20:27.999394Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:27.999786Z", "completed_at": "2024-08-01T01:20:27.999798Z"}], "thread_id": "Thread-1", "execution_time": 0.005678415298461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__creative_history__fivetran_synced.3b0593cb4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.001618Z", "completed_at": "2024-08-01T01:20:28.005195Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.005581Z", "completed_at": "2024-08-01T01:20:28.005587Z"}], "thread_id": "Thread-1", "execution_time": 0.004803895950317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__creative_history_creative_id.eb4d804261", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.007472Z", "completed_at": "2024-08-01T01:20:28.011180Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.011580Z", "completed_at": "2024-08-01T01:20:28.011586Z"}], "thread_id": "Thread-1", "execution_time": 0.00496220588684082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__account_report_source_relation__date_day__account_id.bf8a017de1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id\n    from TEST.PUBLIC_facebook_ads.facebook_ads__account_report\n    group by source_relation, date_day, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.013411Z", "completed_at": "2024-08-01T01:20:28.016865Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.017239Z", "completed_at": "2024-08-01T01:20:28.017244Z"}], "thread_id": "Thread-1", "execution_time": 0.004660129547119141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__account_report_account_id.9be02b4024", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__account_report\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.019118Z", "completed_at": "2024-08-01T01:20:28.022942Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.023326Z", "completed_at": "2024-08-01T01:20:28.023332Z"}], "thread_id": "Thread-1", "execution_time": 0.005064487457275391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_source_relation__date_day__account_id__campaign_id__ad_set_id__ad_id.c866a344f6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    from TEST.PUBLIC_facebook_ads.facebook_ads__ad_report\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.025172Z", "completed_at": "2024-08-01T01:20:28.029564Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.029973Z", "completed_at": "2024-08-01T01:20:28.029978Z"}], "thread_id": "Thread-1", "execution_time": 0.005641937255859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__ad_report_ad_id.3811d9c238", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.031832Z", "completed_at": "2024-08-01T01:20:28.035583Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.035980Z", "completed_at": "2024-08-01T01:20:28.035986Z"}], "thread_id": "Thread-1", "execution_time": 0.005007743835449219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_source_relation__date_day__account_id__campaign_id__ad_set_id.8707f6bd30", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id\n    from TEST.PUBLIC_facebook_ads.facebook_ads__ad_set_report\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.037855Z", "completed_at": "2024-08-01T01:20:28.041271Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.041656Z", "completed_at": "2024-08-01T01:20:28.041662Z"}], "thread_id": "Thread-1", "execution_time": 0.004693031311035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__ad_set_report_ad_set_id.1ac870f5e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_set_id\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__ad_set_report\nwhere ad_set_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.043503Z", "completed_at": "2024-08-01T01:20:28.047291Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.047680Z", "completed_at": "2024-08-01T01:20:28.047686Z"}], "thread_id": "Thread-1", "execution_time": 0.005006313323974609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_source_relation__date_day__account_id__campaign_id.f97e1afff3", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id\n    from TEST.PUBLIC_facebook_ads.facebook_ads__campaign_report\n    group by source_relation, date_day, account_id, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.049508Z", "completed_at": "2024-08-01T01:20:28.053043Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.053416Z", "completed_at": "2024-08-01T01:20:28.053422Z"}], "thread_id": "Thread-1", "execution_time": 0.004741191864013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__campaign_report_campaign_id.d4f96d8d21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.055267Z", "completed_at": "2024-08-01T01:20:28.064098Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.064490Z", "completed_at": "2024-08-01T01:20:28.064496Z"}], "thread_id": "Thread-1", "execution_time": 0.010063886642456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.int_facebook_ads__creative_history", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history\n    where is_most_recent_record = true\n\n), \n\nurl_tags as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads.facebook_ads__url_tags\n), \n\nurl_tags_pivoted as (\n\n    select \n        source_relation,\n        _fivetran_id,\n        creative_id,\n        min(case when key = 'utm_source' then value end) as utm_source,\n        min(case when key = 'utm_medium' then value end) as utm_medium,\n        min(case when key = 'utm_campaign' then value end) as utm_campaign,\n        min(case when key = 'utm_content' then value end) as utm_content,\n        min(case when key = 'utm_term' then value end) as utm_term\n    from url_tags\n    group by 1,2,3\n\n), \n\nfields as (\n\n    select\n        base.source_relation,\n        base._fivetran_id,\n        base.creative_id,\n        base.account_id,\n        base.creative_name,\n        coalesce(page_link,template_page_link) as url,\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        '?',\n        1\n        )\n\n as base_url,\n        \n    \n        try_cast(\n\n    split_part(\n        \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_host,\n        '/' || \n    \n        try_cast(\n\n    split_part(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        right(\n            \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n        )\n    end,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_path,\n        coalesce(url_tags_pivoted.utm_source, nullif(\n\n    split_part(\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_source=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_source,\n        coalesce(url_tags_pivoted.utm_medium, nullif(\n\n    split_part(\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_medium=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_medium,\n        coalesce(url_tags_pivoted.utm_campaign, nullif(\n\n    split_part(\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_campaign=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_campaign,\n        coalesce(url_tags_pivoted.utm_content, nullif(\n\n    split_part(\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_content=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_content,\n        coalesce(url_tags_pivoted.utm_term, nullif(\n\n    split_part(\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_term=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_term\n    from base\n    left join url_tags_pivoted\n        on base._fivetran_id = url_tags_pivoted._fivetran_id\n        and base.source_relation = url_tags_pivoted.source_relation\n        and base.creative_id = url_tags_pivoted.creative_id\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_facebook_ads.int_facebook_ads__creative_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.066515Z", "completed_at": "2024-08-01T01:20:28.070306Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.070699Z", "completed_at": "2024-08-01T01:20:28.070705Z"}], "thread_id": "Thread-1", "execution_time": 0.0051136016845703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_tags_source_relation___fivetran_id__key__type.c65de59dec", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, _fivetran_id, key, type\n    from TEST.PUBLIC_facebook_ads.facebook_ads__url_tags\n    group by source_relation, _fivetran_id, key, type\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.072538Z", "completed_at": "2024-08-01T01:20:28.075985Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.076365Z", "completed_at": "2024-08-01T01:20:28.076371Z"}], "thread_id": "Thread-1", "execution_time": 0.004661083221435547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__url_tags__fivetran_id.151d9515f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__url_tags\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.078246Z", "completed_at": "2024-08-01T01:20:28.085348Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.085730Z", "completed_at": "2024-08-01T01:20:28.085736Z"}], "thread_id": "Thread-1", "execution_time": 0.008386373519897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__url_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n\n), \n\ncreatives as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads.int_facebook_ads__creative_history\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    where is_most_recent_record = true\n\n), \n\nads as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\n    where is_most_recent_record = true\n\n), \n\nad_sets as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\n    where is_most_recent_record = true\n\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\n    where is_most_recent_record = true\n\n), \n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ads.ad_id,\n        ads.ad_name,\n        creatives.creative_id,\n        creatives.creative_name,\n        creatives.base_url,\n        creatives.url_host,\n        creatives.url_path,\n        creatives.utm_source,\n        creatives.utm_medium,\n        creatives.utm_campaign,\n        creatives.utm_content,\n        creatives.utm_term,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join creatives\n        on ads.creative_id = creatives.creative_id\n        and ads.source_relation = creatives.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation  \n\n    \n        where creatives.url is not null\n    \n    \n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__url_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.087922Z", "completed_at": "2024-08-01T01:20:28.092477Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.092879Z", "completed_at": "2024-08-01T01:20:28.092885Z"}], "thread_id": "Thread-1", "execution_time": 0.005814075469970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_report_source_relation__date_day__account_id__campaign_id__ad_set_id__ad_id.ef8d3469d4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    from TEST.PUBLIC_facebook_ads.facebook_ads__url_report\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-01T01:20:28.094770Z", "completed_at": "2024-08-01T01:20:28.098478Z"}, {"name": "execute", "started_at": "2024-08-01T01:20:28.098875Z", "completed_at": "2024-08-01T01:20:28.098880Z"}], "thread_id": "Thread-1", "execution_time": 0.004951953887939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__url_report_base_url.b7757e50be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__url_report\nwhere base_url is null\n\n\n", "relation_name": null}], "elapsed_time": 7.779569387435913, "args": {"indirect_selection": "eager", "log_level": "info", "enable_legacy_logger": false, "project_dir": "/home/zh2408/dbt_projects/dbt_facebook_ads", "require_explicit_package_overrides_for_builtin_materializations": true, "partial_parse_file_diff": true, "macro_debugging": false, "require_resource_names_without_spaces": false, "send_anonymous_usage_stats": true, "defer": false, "printer_width": 80, "favor_state": false, "log_file_max_bytes": 10485760, "empty": false, "output": "text", "profiles_dir": "/home/zh2408/.dbt", "use_colors_file": true, "select": [], "which": "compile", "inject_ephemeral_ctes": true, "introspect": true, "invocation_command": "dbt compile", "version_check": true, "log_path": "/home/zh2408/dbt_projects/dbt_facebook_ads/logs", "cache_selected_only": false, "warn_error_options": {"include": [], "exclude": []}, "print": true, "populate_cache": true, "log_format_file": "debug", "exclude": [], "log_format": "default", "show_resource_report": false, "static_parser": true, "strict_mode": false, "write_json": true, "quiet": false, "use_colors": true, "partial_parse": true, "vars": {}, "log_level_file": "debug", "source_freshness_run_project_hooks": false}}