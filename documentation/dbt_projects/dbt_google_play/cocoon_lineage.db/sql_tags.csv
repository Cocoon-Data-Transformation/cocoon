model_name,summary,tags
model.google_play.google_play__app_version_report,"This SQL query combines and processes data from multiple Google Play app statistics tables (installs, ratings, and crashes) to create a comprehensive app version report. It performs several operations including joining the tables, calculating rolling metrics, filling in missing values, and creating derived metrics such as net device installs. The query handles different granularities of data and ensures consistency across various app versions and dates.","[""Integration"",""Featurization"",""Cleaning"",""Aggregation"",""Other""]"
model.google_play.google_play__country_report,"This SQL query combines and processes data from multiple Google Play Store sources to create a comprehensive country-level report. It integrates install metrics, ratings, and store performance data, calculates rolling totals and averages, fills in missing values, and adds geographical information. The query also computes various metrics such as total installs, uninstalls, store conversions, and net device installs.","[""Integration"",""Cleaning"",""Featurization"",""Aggregation"",""Other""]"
model.google_play.google_play__overview_report,"This SQL query creates a comprehensive overview report for Google Play app performance. It integrates data from various sources including store performance, installs, ratings, and crashes. The query performs multiple tasks such as rolling up country-level data, calculating cumulative metrics over time, joining different data sets, filling in missing values, and computing derived metrics like conversion rates and net installs. The final output provides a daily snapshot of each app's performance across various dimensions.","[""Integration"",""Aggregation"",""Featurization"",""Cleaning"",""Other""]"
model.google_play.google_play__os_version_report,"This SQL query combines and processes data from three different sources (installs, ratings, and crashes) related to Google Play app statistics. It joins these sources, calculates rolling metrics for installs, uninstalls, and ratings, and fills in missing values for certain metrics. The query also computes additional metrics such as net device installs and active devices. The final output provides a comprehensive daily report of various app performance metrics segmented by Android OS version and package name.","[""Integration"",""Featurization"",""Aggregation"",""Cleaning""]"
model.google_play.google_play__device_report,"This SQL query integrates data from Google Play stats for installs and ratings by device. It performs several operations: 1. Combines install and rating data using a full outer join. 2. Calculates rolling metrics for total installs, uninstalls, and average ratings. 3. Handles null values by creating partitions and propagating non-null values across rows within each partition. 4. Computes additional metrics such as net device installs. The result is a comprehensive daily report of app performance metrics by device and package name.","[""Integration"",""Featurization"",""Cleaning"",""Aggregation""]"
model.google_play.int_google_play__store_performance,"This SQL query processes Google Play store performance data. It starts by selecting all data from a staging table, then aggregates store listing acquisitions and visitors by date and package name. Finally, it calculates additional metrics such as conversion rate and cumulative totals for acquisitions and visitors. The result is a comprehensive view of store performance metrics over time for each package.","[""Aggregation"",""Featurization"",""Integration""]"
model.google_play_source.stg_google_play__stats_ratings_os_version,"This SQL query performs data cleaning and transformation on the Google Play Store ratings data. It casts columns to appropriate data types, handles null values, and renames some columns. The query also performs some data cleaning by converting 'NA' values to NULL in the daily_average_rating column and conditionally setting values to NULL based on the android_os_version column.","[""Cleaning"",""Featurization""]"
model.google_play_source.stg_google_play__store_performance_source,"This SQL query performs several operations on data from the Google Play Store performance source. It starts by selecting all columns from a temporary table, then casts them to specific data types. The query then renames some columns, creates a surrogate key using MD5 hash of multiple columns, and selects the final set of columns. The purpose seems to be standardizing the data structure and creating a unique identifier for each record.","[""Cleaning"",""Featurization"",""Other""]"
model.google_play_source.stg_google_play__stats_ratings_app_version,"This SQL query performs data cleaning and transformation on the Google Play app ratings data. It casts columns to specific data types, handles null values, and renames some columns. The query also converts the 'daily_average_rating' from text to float, excluding 'NA' values, and applies conditional logic to filter out null app_version_code entries for certain columns.","[""Cleaning"",""Featurization""]"
model.google_play_source.stg_google_play__stats_crashes_app_version,"This SQL query processes data from a staging table for Google Play app crash statistics. It casts columns to specific data types, renames the 'date' column to 'date_day', and aggregates daily ANRs (Application Not Responding) and crashes by date, app version code, and package name.","[""Cleaning"",""Aggregation""]"
model.google_play_source.stg_google_play__stats_installs_app_version,"This SQL query performs data transformation and aggregation on Google Play Store app installation statistics. It starts by casting columns to specific data types, then aggregates various installation metrics (such as active devices, installs, uninstalls, and upgrades) by date, app version code, and package name. The query cleans and standardizes the data structure while providing summarized installation statistics for analysis.","[""Cleaning"",""Aggregation"",""Featurization""]"
model.google_play_source.stg_google_play__store_performance_country,"This SQL query processes data from a Google Play store performance table. It starts by casting columns to specific data types, then aggregates the data by date, country region, and package name. The query calculates the sum of store listing acquisitions and visitors, and the average conversion rate for each group.","[""Cleaning"",""Aggregation""]"
model.google_play_source.stg_google_play__stats_installs_os_version,"This SQL query processes data from a Google Play stats table. It starts by casting columns to specific data types, then aggregates various install and uninstall metrics by date, package name, and Android OS version. The query performs summations on multiple metrics such as active devices, installs, uninstalls, and upgrades.","[""Cleaning"",""Aggregation""]"
model.google_play_source.stg_google_play__stats_ratings_country,"This SQL query processes data from a Google Play stats ratings source. It casts various fields to specific data types, handles null values, and performs some data cleaning. The query specifically focuses on date, country, package name, daily average rating, and total average rating. It converts the daily average rating from text to float, excluding 'NA' values, and only includes ratings when a country is specified. The final output includes a date_day, country, package_name, average_rating, and rolling_total_average_rating.","[""Cleaning"",""Featurization""]"
model.google_play_source.stg_google_play__stats_crashes_overview,"This SQL query performs data type casting and column renaming on the 'stg_google_play__stats_crashes_overview_tmp' table. It casts the 'date' column to DATE type, renames 'daily_anrs' to 'anrs' and 'daily_crashes' to 'crashes', and selects specific columns for the final output. The query doesn't filter, deduplicate, or aggregate data, but focuses on cleaning and standardizing the data format.","[""Cleaning""]"
model.google_play_source.stg_google_play__stats_installs_overview,"This SQL query stages data from a temporary table, casts various fields to specific data types, renames some columns, and selects a subset of columns for the final output. It primarily focuses on Google Play app install statistics, including device installs, uninstalls, upgrades, and user-related metrics.","[""Cleaning"",""Featurization""]"
model.google_play_source.stg_google_play__stats_ratings_device,"This SQL query performs data cleaning and transformation on the Google Play stats ratings device data. It casts various fields to appropriate data types, handles null values, and reformats the average rating and total average rating fields. The query also renames some columns for clarity.","[""Cleaning"",""Featurization""]"
model.google_play_source.stg_google_play__stats_installs_device,"This SQL query processes data from a Google Play statistics table. It starts by casting columns to specific data types, then aggregates various installation and uninstallation metrics by date, device type, and package name. The query summarizes daily device and user installation activities, including installs, uninstalls, upgrades, and active devices over the last 30 days.","[""Cleaning"",""Aggregation"",""Featurization""]"
model.google_play_source.stg_google_play__stats_ratings_overview,"This SQL query performs data type casting and cleaning on the 'stg_google_play__stats_ratings_overview' table. It casts the 'date' column to DATE type, converts the 'daily_average_rating' from TEXT to FLOAT (replacing 'NA' values with NULL), and renames some columns. The query also selects specific columns for the final output.","[""Cleaning"",""Other""]"
model.google_play_source.stg_google_play__stats_installs_country,"This SQL query transforms and aggregates data from a Google Play stats table. It first casts all columns to specific data types, then aggregates various install and uninstall metrics by date, country, and package name. The query performs data type conversion, renames some columns, and calculates sums for several metrics.","[""Cleaning"",""Aggregation"",""Featurization""]"
model.google_play_source.stg_google_play__stats_crashes_os_version,"This SQL query processes data from a temporary staging table for Google Play stats on crashes by OS version. It casts columns to specific data types, renames the 'date' column to 'date_day', and aggregates the daily ANRs (Application Not Responding) and crashes by date, Android OS version, and package name.","[""Cleaning"",""Aggregation""]"
model.google_play_source.stg_google_play__stats_ratings_country_tmp,"This SQL query selects all columns and rows from the table 'stats_ratings_country' in the 'google_play' schema of the 'TEST' database. It's a straightforward SELECT * statement without any filtering, transformation, or aggregation.","[""Other""]"
model.google_play_source.stg_google_play__stats_installs_app_version_tmp,"This SQL query selects all columns and rows from the table 'stats_installs_app_version' in the 'google_play' schema of the 'TEST' database. It's a simple SELECT * statement without any filtering, transformation, or aggregation.","[""Other""]"
model.google_play_source.stg_google_play__stats_crashes_os_version_tmp,"This SQL query selects all columns and rows from the 'stats_crashes_os_version' table in the 'google_play' schema of the 'TEST' database. It appears to be a straightforward data extraction without any transformations, filters, or aggregations.","[""Other""]"
model.google_play_source.stg_google_play__store_performance_country_tmp,"This SQL query selects all columns from the 'stats_store_performance_country' table in the 'google_play' schema of the 'TEST' database. It appears to be a simple data extraction query without any transformation, filtering, or aggregation.","[""Other""]"
model.google_play_source.stg_google_play__stats_ratings_overview_tmp,"This SQL query selects all columns and rows from the 'stats_ratings_overview' table in the 'google_play' schema of the 'TEST' database. It's a simple SELECT * statement that retrieves all data from the specified table without any modification, filtering, or transformation.","[""Other""]"
model.google_play_source.stg_google_play__stats_ratings_app_version_tmp,"This SQL query selects all columns from the 'stats_ratings_app_version' table in the 'google_play' schema of the 'TEST' database. It's a straightforward SELECT * statement without any filtering, transformations, or joins.","[""Other""]"
model.google_play_source.stg_google_play__stats_installs_country_tmp,"This SQL query selects all columns from the 'stats_installs_country' table in the 'google_play' schema of the 'TEST' database. It's a simple SELECT * statement that retrieves all data from the specified table without any modifications, filters, or transformations.","[""Other""]"
model.google_play_source.stg_google_play__stats_installs_os_version_tmp,"This SQL query selects all columns from the 'stats_installs_os_version' table in the 'google_play' schema of the 'TEST' database. It appears to be a simple selection of the entire table without any filtering, transformation, or aggregation.","[""Other""]"
model.google_play_source.stg_google_play__stats_installs_device_tmp,"This SQL query selects all columns from the 'stats_installs_device' table in the 'google_play' schema of the 'TEST' database. It appears to be a simple data extraction query without any filtering, transformation, or aggregation.","[""Other""]"
model.google_play_source.stg_google_play__store_performance_source_tmp,"This SQL query selects all columns from the 'stats_store_performance_traffic_source' table in the 'google_play' schema of the 'TEST' database. It appears to be a simple SELECT * statement without any filtering, transformation, or aggregation.","[""Other""]"
model.google_play_source.stg_google_play__stats_installs_overview_tmp,"This SQL query selects all columns and rows from the 'stats_installs_overview' table in the 'google_play' schema of the 'TEST' database. It appears to be a simple data extraction query without any transformations, filters, or aggregations.","[""Other""]"
model.google_play_source.stg_google_play__stats_ratings_device_tmp,"This SQL query selects all columns and rows from the 'stats_ratings_device' table in the 'google_play' schema of the 'TEST' database. It appears to be a simple data extraction query without any transformations, filters, or aggregations.","[""Other""]"
model.google_play_source.stg_google_play__stats_crashes_overview_tmp,"This SQL query performs a simple SELECT * operation to retrieve all columns and rows from the 'stats_crashes_overview' table in the 'google_play' schema of the 'TEST' database. It's a straightforward data extraction query without any filtering, transformation, or aggregation.","[""Other""]"
model.google_play_source.stg_google_play__stats_ratings_os_version_tmp,"This SQL query selects all columns and rows from the table 'stats_ratings_os_version' in the 'google_play' schema of the 'TEST' database. It's a simple SELECT * statement that retrieves all data from the specified table without any transformation, filtering, or manipulation.","[""Other""]"
model.google_play_source.stg_google_play__stats_crashes_app_version_tmp,"This SQL query selects all columns and rows from the 'stats_crashes_app_version' table in the 'google_play' schema of the 'TEST' database. It appears to be a simple data extraction query without any transformations, filters, or aggregations.","[""Other""]"
