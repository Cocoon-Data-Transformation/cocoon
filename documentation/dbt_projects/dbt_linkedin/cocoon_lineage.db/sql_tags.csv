model_name,summary,tags
model.linkedin.linkedin_ads__campaign_group_report,"This SQL query generates a report for LinkedIn ad campaign groups. It joins data from campaign groups, campaigns, accounts, and ad analytics, filtering for the latest versions of historical data. The query then aggregates metrics like clicks, impressions, and cost at the campaign group level, while including various attributes such as account information, campaign group status, and date information.","[""Filtering"",""Integration"",""Aggregation""]"
model.linkedin.linkedin_ads__creative_report,"This SQL query integrates data from multiple LinkedIn Ads-related tables, including creative history, campaign history, campaign group history, account history, and ad analytics. It joins these tables based on various IDs and source relations, filtering for the latest versions of historical data. The query then aggregates metrics such as clicks, impressions, and cost, grouping by various dimensions like creative ID, campaign ID, account ID, and date. The result is a comprehensive report that combines creative performance data with associated campaign, campaign group, and account information.","[""Filtering"",""Integration"",""Aggregation""]"
model.linkedin.linkedin_ads__url_report,"This query integrates data from multiple LinkedIn Ads-related tables (creative, campaign, campaign group, account, and ad analytics) to create a comprehensive URL report. It joins these tables based on various ID fields and source relations, filters out records with null click URIs, and aggregates metrics such as clicks, impressions, and cost. The result is a detailed report that includes URL-related information, campaign details, and performance metrics grouped by various dimensions.","[""Integration"",""Filtering"",""Aggregation""]"
model.linkedin.linkedin_ads__campaign_report,"This SQL query integrates data from multiple LinkedIn Ads-related tables (campaign, campaign group, account, and ad analytics) to create a comprehensive campaign report. It joins these tables based on common identifiers and source relations, aggregates metrics like clicks, impressions, and cost, and includes various campaign and account details. The query filters for the latest versions of historical data and groups the results by multiple dimensions.","[""Filtering"",""Integration"",""Aggregation""]"
model.linkedin.linkedin_ads__account_report,"This SQL query integrates data from three LinkedIn Ads tables: account history, campaign history, and ad analytics by campaign. It filters for the latest versions of account and campaign data, joins these with the analytics data, and then aggregates metrics (clicks, impressions, cost) at the account level. The result is a comprehensive account-level report that includes account details and summarized ad performance metrics.","[""Filtering"",""Integration"",""Aggregation""]"
model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative,"This SQL query creates a staging table for LinkedIn ad analytics data. It starts with a base table, then defines a macro with null or empty values for each column to establish the structure. Finally, it selects and renames specific columns, truncating the day to remove time information. The query primarily focuses on data structure and basic cleaning.","[""Cleaning"",""Featurization""]"
model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign,"This SQL query appears to be a staging transformation for LinkedIn ads analytics data. It starts with a base CTE that selects all columns from a temporary table. Then, it defines a macro CTE that casts NULL values to specific data types for each column. Finally, it selects and renames specific columns from the macro CTE, including truncating the 'day' column to create a 'date_day' column. The query doesn't perform any filtering, deduplication, or aggregation.","[""Cleaning"",""Featurization""]"
model.linkedin_source.stg_linkedin_ads__account_history,"This SQL query performs several operations on LinkedIn ads account history data. It starts by creating a base CTE from a temporary staging table. Then, it defines a macro CTE with null or empty values for all columns. The fields CTE then selects and casts various columns from the macro CTE, renames some columns, and adds an is_latest_version column using a window function. Finally, it selects all columns from the fields CTE.","[""Cleaning"",""Deduplication"",""Other""]"
model.linkedin_source.stg_linkedin_ads__campaign_history,"This SQL query stages data from a LinkedIn Ads campaign history source. It begins by selecting all columns from a temporary staging table, then defines a set of columns with specific data types using a CTE named 'macro'. The 'fields' CTE then selects and renames columns, casts some to appropriate data types, and adds a flag to identify the latest version of each campaign. The final SELECT statement returns all columns from the 'fields' CTE.","[""Cleaning"",""Deduplication"",""Other""]"
model.linkedin_source.stg_linkedin_ads__creative_history,This SQL query processes data from a LinkedIn Ads creative history table. It performs several operations: 1. Casts and renames columns for consistency 2. Selects the latest version of each creative based on last modified time 3. Extracts various URL components and UTM parameters from the click_uri field 4. Cleans and standardizes data formats,"[""Cleaning"",""Deduplication"",""Featurization""]"
model.linkedin_source.stg_linkedin_ads__campaign_group_history,"This SQL query stages data from a LinkedIn Ads campaign group history source. It casts and renames columns, converts timestamp fields, adds a flag for the latest version of each campaign group, and prepares the data for further processing or analysis.","[""Cleaning"",""Deduplication"",""Featurization""]"
model.linkedin_source.stg_linkedin_ads__campaign_group_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type, set to NULL. The query is likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for LinkedIn ads campaign group history data.","[""Other""]"
model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This appears to be a template or placeholder query, possibly used for schema definition or testing purposes in a dbt (data build tool) project.","[""Other""]"
model.linkedin_source.stg_linkedin_ads__account_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type, set to NULL. The query is likely used as a placeholder or template for further development, or to initialize a temporary table structure without populating it with data.","[""Other""]"
model.linkedin_source.stg_linkedin_ads__campaign_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further development or testing purposes.,"[""Other""]"
model.linkedin_source.stg_linkedin_ads__creative_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further operations in dbt (data build tool).,"[""Other""]"
model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures that no rows are returned. This appears to be a template or placeholder query, possibly used for schema definition or testing purposes in a dbt (data build tool) project.","[""Other""]"
