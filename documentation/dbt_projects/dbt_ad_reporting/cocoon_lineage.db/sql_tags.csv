model_name,summary,tags
model.ad_reporting.ad_reporting__ad_report,"This SQL query integrates ad reporting data from multiple advertising platforms (such as Google Ads, Microsoft Ads, Apple Search Ads, Facebook Ads, etc.) into a single unified view. It standardizes the column names and data types across all platforms, performs type casting for consistency, and then aggregates the data by summing clicks, impressions, and spend for each unique combination of date, platform, account, campaign, ad group, and ad.","[""Integration"",""Cleaning"",""Aggregation""]"
model.ad_reporting.ad_reporting__account_report,"This SQL query integrates advertising data from multiple platforms (e.g., Twitter, Facebook, Google, Microsoft, Apple, LinkedIn, Pinterest, Snapchat, TikTok, Amazon, and Reddit) into a single unified report. It standardizes the data structure across platforms, casting data types and renaming columns for consistency. The query then aggregates the data by source, date, platform, account ID, and account name, summing up clicks, impressions, and spend.","[""Integration"",""Cleaning"",""Aggregation""]"
model.ad_reporting.ad_reporting__url_report,"This SQL query integrates ad reporting data from multiple advertising platforms (Facebook, Google, LinkedIn, Microsoft, Pinterest, Snapchat, TikTok, Twitter, and Reddit) into a single unified report. It standardizes the column names and data types across all platforms, combines the data using UNION ALL, and then aggregates the metrics (clicks, impressions, and spend) by various dimensions such as date, platform, account, campaign, ad group, and URL components.","[""Integration"",""Cleaning"",""Aggregation""]"
model.ad_reporting.ad_reporting__search_report,"This SQL query integrates search report data from three different advertising platforms (Microsoft Ads, Apple Search Ads, and Amazon Ads) into a unified format. It standardizes column names and data types across the platforms, combines the data using UNION ALL, and then aggregates the results by various dimensions such as date, platform, account, campaign, ad group, keyword, and search query. The final output includes summed metrics for clicks, impressions, and spend.","[""Integration"",""Cleaning"",""Aggregation""]"
model.ad_reporting.ad_reporting__campaign_report,"This SQL query integrates campaign report data from multiple advertising platforms (such as Twitter, Facebook, Google, Microsoft, Apple, LinkedIn, Pinterest, Snapchat, TikTok, Amazon, and Reddit) into a single unified dataset. It standardizes the column names and data types across all platforms, performs type casting for consistency, and then aggregates the data by source, date, platform, account, and campaign, summing up clicks, impressions, and spend.","[""Integration"",""Cleaning"",""Aggregation""]"
model.ad_reporting.ad_reporting__keyword_report,"This SQL query integrates keyword report data from multiple advertising platforms (Amazon Ads, Apple Search Ads, Google Ads, Microsoft Ads, Pinterest Ads, and Twitter Ads) into a single unified table. It standardizes column names and data types across platforms, performs type casting for consistency, and then aggregates the data by various dimensions such as date, platform, account, campaign, ad group, and keyword information. The query calculates total clicks, impressions, and spend for each unique combination of these dimensions.","[""Integration"",""Cleaning"",""Aggregation""]"
model.ad_reporting.ad_reporting__ad_group_report,"This SQL query integrates ad performance data from multiple advertising platforms (e.g., Google Ads, Facebook Ads, LinkedIn Ads) into a single unified report. It standardizes data formats across platforms, aligning column names and data types. The query then aggregates the data by date, platform, account, campaign, and ad group, calculating total clicks, impressions, and spend.","[""Integration"",""Cleaning"",""Aggregation""]"
model.ad_reporting.metricflow_time_spine,"This SQL query generates a time spine (a series of consecutive dates) starting from 10 years ago up to tomorrow in the America/Los_Angeles timezone. It uses a recursive CTE to generate numbers, converts them to dates, and then filters and formats the results. The final output is a table with a single column of dates.","[""Featurization"",""Filtering"",""Cleaning""]"
model.ad_reporting.int_ad_reporting__account_report,"This SQL query integrates advertising data from multiple platforms (such as Twitter, Facebook, Google, Microsoft, Apple, LinkedIn, Pinterest, Snapchat, TikTok, Amazon, and Reddit) into a single unified table. It standardizes the data structure across all platforms by selecting common fields, casting them to consistent data types, and renaming some platform-specific fields to match a common schema. The query uses Common Table Expressions (CTEs) for each platform and then unions all the data together.","[""Integration"",""Cleaning""]"
model.ad_reporting.int_ad_reporting__ad_group_report,"This SQL query combines ad reporting data from multiple advertising platforms (including Amazon, Apple Search, Facebook, Google, LinkedIn, Microsoft, Pinterest, Snapchat, TikTok, Twitter, and Reddit) into a unified format. It standardizes column names, data types, and structures across these diverse sources, creating a consolidated view of ad performance metrics such as clicks, impressions, and spend across different platforms, accounts, campaigns, and ad groups.","[""Cleaning"",""Integration""]"
model.ad_reporting.int_ad_reporting__search_report,"This SQL query combines search report data from three different advertising platforms (Microsoft Ads, Apple Search Ads, and Amazon Ads) into a unified format. It standardizes column names and data types across the platforms, ensuring consistency in the final output. The query uses CTEs to transform each platform's data separately before combining them using UNION ALL.","[""Integration"",""Cleaning""]"
model.ad_reporting.int_ad_reporting__ad_report,"This SQL query integrates ad reporting data from multiple advertising platforms (such as Google Ads, Microsoft Ads, Apple Search Ads, Facebook Ads, LinkedIn Ads, Pinterest Ads, Snapchat Ads, TikTok Ads, Twitter Ads, Amazon Ads, and Reddit Ads) into a unified format. It standardizes column names and data types across all platforms, ensuring consistency in the final output. The query uses CTEs to transform data from each platform separately before combining them all using UNION ALL operations.","[""Integration"",""Cleaning""]"
model.ad_reporting.int_ad_reporting__url_report,"This SQL query combines ad reporting data from multiple advertising platforms (Facebook, Google, LinkedIn, Microsoft, Pinterest, Snapchat, TikTok, Twitter, and Reddit) into a single unified table. It standardizes the column names and data types across all platforms, ensuring consistency in the output. The query uses Common Table Expressions (CTEs) to select and transform data from each platform's source table, and then unions all these CTEs together to create a comprehensive ad reporting dataset.","[""Integration"",""Cleaning""]"
model.ad_reporting.int_ad_reporting__campaign_report,"This SQL query integrates campaign report data from multiple advertising platforms (e.g., Twitter, Facebook, Google, Microsoft, Apple Search, LinkedIn, Pinterest, Snapchat, TikTok, Amazon, and Reddit) into a unified dataset. It standardizes the column names and data types across all platforms, ensuring consistency in the final output. The query uses CTEs to transform and union data from each platform, creating a comprehensive view of advertising campaign performance across various channels.","[""Integration"",""Cleaning""]"
model.ad_reporting.int_ad_reporting__keyword_report,"This SQL query integrates keyword report data from multiple advertising platforms (Amazon Ads, Apple Search Ads, Google Ads, Microsoft Ads, Pinterest Ads, and Twitter Ads) into a single unified table. It standardizes column names and data types across all platforms, ensuring consistency in the final output. The query uses Common Table Expressions (CTEs) to select and transform data from each platform separately before combining them using UNION ALL.","[""Integration"",""Cleaning""]"
model.facebook_ads.facebook_ads__ad_set_report,"This SQL query integrates data from multiple Facebook Ads related tables (basic ad reports, account history, campaign history, ad set history, and ad history) to create a comprehensive ad set report. It filters for the most recent records in the history tables, joins these tables based on various ID fields and source relations, and then aggregates metrics like clicks, impressions, and spend at the ad set level. The result is a detailed report that includes account, campaign, and ad set information along with performance metrics.","[""Filtering"",""Integration"",""Aggregation""]"
model.facebook_ads.facebook_ads__url_tags,"This SQL query processes Facebook ads creative history data, focusing on URL tags. It starts by selecting the most recent records, then filters for non-null URL tags. The query then parses the JSON-formatted URL tags, flattens the structure, and extracts key-value pairs along with their types from the URL tags.","[""Filtering"",""Cleaning"",""Featurization""]"
model.facebook_ads.facebook_ads__account_report,"This SQL query combines data from two staging tables: basic ad report and account history. It joins these tables on account ID and source relation, filtering for the most recent account records. The query then aggregates ad performance metrics (clicks, impressions, spend) at the account and date level, while including various account details. The result is a comprehensive daily account-level report of Facebook ad performance with associated account information.","[""Filtering"",""Integration"",""Aggregation""]"
model.facebook_ads.facebook_ads__campaign_report,"This SQL query combines data from multiple Facebook Ads-related tables to create a comprehensive campaign report. It joins account, campaign, and ad data with the basic ad report, filtering for the most recent records in history tables. The query then aggregates clicks, impressions, and spend data at the campaign level, providing a detailed view of campaign performance along with account and campaign details.","[""Filtering"",""Integration"",""Aggregation""]"
model.facebook_ads.facebook_ads__url_report,"This SQL query integrates data from various Facebook Ads-related tables to create a comprehensive URL report. It joins information from ad accounts, campaigns, ad sets, ads, and creatives, focusing on URLs associated with the ads. The query filters out records where the URL is null, aggregates metrics like clicks, impressions, and spend, and groups the results by various dimensions including date, account, campaign, ad set, ad, and URL-related fields.","[""Integration"",""Filtering"",""Aggregation""]"
model.facebook_ads.facebook_ads__ad_report,"This SQL query integrates data from multiple Facebook Ads-related tables (ad reports, accounts, campaigns, ad sets, and ads) to create a comprehensive ad performance report. It joins these tables based on various IDs and the source relation, filters for the most recent records in history tables, and aggregates metrics such as clicks, impressions, and spend. The result is a detailed view of ad performance across different levels of the ad hierarchy (account, campaign, ad set, and ad).","[""Filtering"",""Integration"",""Aggregation""]"
model.facebook_ads.int_facebook_ads__creative_history,"This SQL query processes Facebook ad creative data, focusing on URL-related information. It starts by selecting the most recent records from the creative history, then joins this with URL tag data. The query extensively cleans and extracts various components of URLs (such as base URL, host, and path) and UTM parameters. It also handles cases where UTM parameters might be directly in the URL or in a separate tags table. The result is a comprehensive view of each creative's URL structure and associated tracking parameters.","[""Filtering"",""Cleaning"",""Featurization"",""Integration"",""Other""]"
model.amazon_ads_source.stg_amazon_ads__keyword_history,"This SQL query stages data from a temporary table, casts various fields to specific data types, renames some columns, and adds a flag to identify the most recent record for each keyword. It also includes a 'source_relation' field, which appears to be empty in this case.","[""Cleaning"",""Deduplication""]"
model.amazon_ads_source.stg_amazon_ads__advertised_product_report,"This SQL query performs a series of data type conversions and column renamings on the 'stg_amazon_ads__advertised_product_report' table. It starts by selecting all columns from a temporary table, then creates a fields CTE with NULL or empty values for all columns. Finally, it casts several columns to different data types, renames the 'date' column to 'date_day', and selects all columns from the final CTE.","[""Cleaning""]"
model.amazon_ads_source.stg_amazon_ads__targeting_keyword_report,"This SQL query performs data type casting and column renaming on a staging table for Amazon Ads targeting keyword report data. It creates a CTE with null values for all fields, then casts some fields to different data types in the final select statement. The query also adds a source_relation column and renames the 'date' column to 'date_day'.","[""Cleaning"",""Other""]"
model.amazon_ads_source.stg_amazon_ads__ad_group_history,"This SQL query stages data from an Amazon Ads ad group history source table. It casts and renames several columns, adds a source_relation column, and creates an is_most_recent_record flag to identify the most recent record for each ad group. The query also performs type casting to ensure data consistency.","[""Cleaning"",""Deduplication"",""Other""]"
model.amazon_ads_source.stg_amazon_ads__product_ad_history,"This SQL query stages data from a temporary table, casts various fields to specific data types, and creates a final table with transformed columns. It also adds a boolean column to identify the most recent record for each unique combination of source_relation and id.","[""Cleaning"",""Deduplication"",""Other""]"
model.amazon_ads_source.stg_amazon_ads__campaign_level_report,"This SQL query creates a staging table for Amazon Ads campaign-level reports. It starts with a base table, then defines a fields CTE that casts all columns to specific data types, including several NULL values. The final CTE renames some columns and casts the campaign_id to TEXT. The query primarily focuses on data type standardization and column renaming.","[""Cleaning""]"
model.amazon_ads_source.stg_amazon_ads__search_term_ad_keyword_report,"This SQL query stages data from a temporary table, casts various fields to specific data types, and renames some columns. It primarily serves to clean and standardize the data structure for the Amazon Ads search term ad keyword report.","[""Cleaning"",""Other""]"
model.amazon_ads_source.stg_amazon_ads__ad_group_level_report,"This SQL query performs data type casting and column renaming on a staging table for Amazon Ads ad group level reports. It creates a base CTE from a temporary table, defines a fields CTE with explicit data types for each column (mostly set to NULL or empty values), and then casts and renames columns in the final CTE. The query doesn't filter, deduplicate, or aggregate data, but focuses on data type standardization and column naming.","[""Cleaning""]"
model.amazon_ads_source.stg_amazon_ads__profile,"This SQL query stages data from a temporary table for Amazon Ads profiles. It defines a set of fields with specific data types, casts some fields, and renames the 'id' field to 'profile_id'. The query also adds a 'source_relation' field and ensures all fields are properly typed for downstream use.","[""Cleaning"",""Other""]"
model.amazon_ads_source.stg_amazon_ads__campaign_history,"This SQL query stages data from an Amazon Ads campaign history source. It first creates a base CTE from a temporary table, then defines a fields CTE with nullable columns of specific data types. The final CTE casts some columns, renames others, and adds a flag for the most recent record per campaign. The query then selects all columns from this final CTE.","[""Cleaning"",""Deduplication""]"
model.amazon_ads_source.stg_amazon_ads__portfolio_history,"This SQL query stages data from a temporary table, casts various fields to specific data types, renames some columns, and adds a flag to identify the most recent record for each portfolio. It also includes data type conversions for certain fields.","[""Cleaning"",""Deduplication"",""Other""]"
model.amazon_ads_source.stg_amazon_ads__campaign_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further development or testing purposes.,"[""Other""]"
model.amazon_ads_source.stg_amazon_ads__keyword_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This query appears to be a placeholder or template for defining the structure of a staging table in a dbt (data build tool) project.","[""Other""]"
model.amazon_ads_source.stg_amazon_ads__profile_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further development or to establish a schema structure without actually populating data.,"[""Other""]"
model.amazon_ads_source.stg_amazon_ads__ad_group_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further development or testing purposes.,"[""Other""]"
model.amazon_ads_source.stg_amazon_ads__advertised_product_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Amazon Ads data.","[""Other""]"
model.amazon_ads_source.stg_amazon_ads__search_term_ad_keyword_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Amazon Ads search term and keyword report data.","[""Other""]"
model.amazon_ads_source.stg_amazon_ads__portfolio_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT type. It's likely used as a placeholder or template for further development or testing purposes.,"[""Other""]"
model.amazon_ads_source.stg_amazon_ads__ad_group_level_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type. It's likely used as a template or placeholder query, possibly for testing or initializing a structure without actually populating it with data.","[""Other""]"
model.amazon_ads_source.stg_amazon_ads__product_ad_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further operations in a dbt (data build tool) model.,"[""Other""]"
model.amazon_ads_source.stg_amazon_ads__targeting_keyword_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type, initialized to NULL. The query is limited to 0 rows, effectively creating a schema-only representation of the table without any data.","[""Other""]"
model.amazon_ads_source.stg_amazon_ads__campaign_level_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively creating a schema-only representation of the table without any data.","[""Other""]"
model.microsoft_ads.microsoft_ads__ad_group_report,"This SQL query combines data from multiple staging tables to create a comprehensive ad group report. It joins ad group daily report data with the most recent records from ad groups, campaigns, and accounts. The query then aggregates metrics like clicks, impressions, and spend, grouping them by various dimensions such as date, account, campaign, ad group, device, and network information.","[""Integration"",""Aggregation"",""Filtering""]"
model.microsoft_ads.microsoft_ads__url_report,"This SQL query integrates data from multiple Microsoft Ads related tables (ad daily report, ad history, ad group history, campaign history, and account history) to create a comprehensive URL report. It cleans and extracts various URL components (base URL, host, path) and UTM parameters from the final URL. The query also performs aggregations on metrics like clicks, impressions, and spend. Finally, it filters out records where the base URL is null.","[""Integration"",""Cleaning"",""Featurization"",""Aggregation"",""Filtering""]"
model.microsoft_ads.microsoft_ads__keyword_report,"This SQL query combines data from multiple Microsoft Ads-related tables to create a comprehensive keyword report. It joins daily keyword report data with the most recent records from keyword, ad, ad group, campaign, and account history tables. The query then aggregates the data, summarizing clicks, impressions, and spend while grouping by various dimensions such as date, account, campaign, ad group, ad, keyword, and device information.","[""Filtering"",""Integration"",""Aggregation""]"
model.microsoft_ads.microsoft_ads__campaign_report,"This SQL query integrates data from three sources: campaign daily reports, campaign history, and account history. It joins these tables based on account and campaign IDs, filtering for the most recent records in the history tables. The query then aggregates data, calculating sums for clicks, impressions, and spend, while grouping by various dimensions such as date, account, campaign, device, and network information. The result is a comprehensive report that combines campaign performance metrics with the latest account and campaign details.","[""Filtering"",""Integration"",""Aggregation""]"
model.microsoft_ads.microsoft_ads__ad_report,"This SQL query integrates data from multiple Microsoft Ads related tables (ad daily report, ad history, ad group history, campaign history, and account history) to create a comprehensive ad performance report. It filters for the most recent records in the history tables, joins these tables with the daily report data, and aggregates metrics such as clicks, impressions, and spend. The result is a detailed view of ad performance across various dimensions including account, campaign, ad group, ad, device, and network.","[""Filtering"",""Integration"",""Aggregation""]"
model.microsoft_ads.microsoft_ads__account_report,"This SQL query combines daily account report data with the most recent account history information. It joins these two datasets, groups the results by various dimensions (including date, account details, device information, and network), and calculates aggregate metrics such as clicks, impressions, and spend. The query provides a comprehensive view of account performance with relevant account details.","[""Integration"",""Aggregation"",""Filtering""]"
model.microsoft_ads.microsoft_ads__search_report,"This SQL query integrates data from multiple Microsoft Ads-related tables to create a comprehensive search report. It joins historical data from accounts, campaigns, ad groups, ads, and keywords with daily search report data. The query filters for the most recent records in the historical tables, combines this information with the daily report, and aggregates metrics such as clicks, impressions, and spend. The result is a detailed view of search performance across various dimensions like account, campaign, ad group, keyword, and device.","[""Filtering"",""Integration"",""Aggregation""]"
model.apple_search_ads.apple_search_ads__ad_group_report,"This SQL query integrates data from multiple tables related to Apple Search Ads, including ad group reports, ad group history, campaign history, and organization information. It joins these tables based on common identifiers and source relations, filters for the most recent records in history tables, and aggregates metrics such as taps, downloads, impressions, and spend. The result is a comprehensive view of ad performance data grouped by various dimensions like organization, campaign, ad group, and date.","[""Filtering"",""Integration"",""Aggregation""]"
model.apple_search_ads.apple_search_ads__organization_report,"This query integrates data from three sources: campaign reports, campaign history, and organization information. It joins these tables, filters for the most recent campaign records, and then aggregates various metrics (taps, downloads, impressions, and spend) at the organization level, grouped by date and organization details.","[""Integration"",""Filtering"",""Aggregation""]"
model.apple_search_ads.apple_search_ads__ad_report,"This SQL query integrates data from multiple Apple Search Ads related tables (ad report, ad history, ad group history, campaign history, and organization) to create a comprehensive ad performance report. It joins these tables based on various ID fields and the source relation, filters for the most recent records in history tables, and aggregates metrics such as taps, downloads, impressions, and spend. The result is a detailed view of ad performance across different organizational levels (organization, campaign, ad group, and individual ad) for each date and currency.","[""Filtering"",""Integration"",""Aggregation""]"
model.apple_search_ads.apple_search_ads__search_term_report,"This SQL query integrates data from three tables: search term report, campaign history, and organization. It joins these tables based on specific conditions, filters out null search terms, and aggregates various metrics (taps, downloads, impressions, spend) grouped by several dimensions including date, organization, campaign, ad group, keyword, and search term. The query provides a comprehensive view of search term performance across different organizational and campaign structures.","[""Integration"",""Filtering"",""Aggregation""]"
model.apple_search_ads.apple_search_ads__keyword_report,"This SQL query joins multiple staging tables (keyword report, keyword history, ad group history, campaign history, and organization) to create a comprehensive report on Apple Search Ads performance. It filters for the most recent records in history tables, integrates data across different levels (organization, campaign, ad group, keyword), and aggregates metrics such as taps, downloads, impressions, and spend. The result is a detailed view of keyword performance within the context of ad groups, campaigns, and organizations.","[""Filtering"",""Integration"",""Aggregation""]"
model.apple_search_ads.apple_search_ads__campaign_report,"This SQL query integrates data from three tables: campaign report, campaign history, and organization. It joins these tables based on campaign_id and organization_id, filtering for the most recent campaign records. The query then aggregates data at the campaign level, calculating metrics such as taps, downloads, impressions, and spend. The result is a comprehensive campaign report with organizational details and key performance indicators.","[""Integration"",""Filtering"",""Aggregation""]"
model.snapchat_ads_source.stg_snapchat_ads__ad_account_history,"This SQL query stages data from a Snapchat Ads source table, casting and renaming columns to create a standardized structure for ad account history. It includes type casting, column renaming, and adds a flag to identify the most recent record for each ad account. The query doesn't perform any filtering or aggregation but focuses on data cleaning and structuring.","[""Cleaning"",""Deduplication""]"
model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history,"This SQL query stages data from a temporary table, casts specific fields to desired data types, renames some columns, and adds a flag to identify the most recent record for each unique combination of source_relation, creative_id, and key. It prepares the data for further processing or analysis in the Snapchat ads context.","[""Cleaning"",""Deduplication"",""Other""]"
model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report,"This SQL query performs data transformation and type casting on a Snapchat ads campaign hourly report. It starts with a base table, then defines a set of fields with specific data types. The final select statement applies further transformations, including converting milliseconds to seconds for time-based fields and adjusting the spend value. The query also renames some fields and ensures consistent data types for the output.","[""Cleaning"",""Featurization""]"
model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report,"This SQL query performs data cleaning and featurization on the snapchat_ads source table. It casts various fields to specific data types, converts time-based fields from milliseconds to seconds, and renames some columns. The query also adds a source_relation column and restructures the data into a final format.","[""Cleaning"",""Featurization""]"
model.snapchat_ads_source.stg_snapchat_ads__creative_history,"This SQL query stages data from a Snapchat Ads creative history source. It performs type casting on various fields, renames some columns, and adds a flag to identify the most recent record for each creative ID. The query also includes a source relation field and filters for the most recent record per creative ID.","[""Cleaning"",""Deduplication"",""Other""]"
model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history,"This SQL query stages data from a temporary table for Snapchat ad squad history. It casts several fields to appropriate data types, renames some columns, and adds a flag to identify the most recent record for each ad squad. The query also includes a source relation field, though it's currently set to an empty string.","[""Cleaning"",""Deduplication""]"
model.snapchat_ads_source.stg_snapchat_ads__ad_history,"This SQL query performs several operations on the snapchat_ads_source.stg_snapchat_ads__ad_history data. It starts by selecting all columns from a temporary table, then defines a set of fields with specific data types. The query then selects and renames certain columns, casts timestamps, and adds a column to identify the most recent record for each ad. The final result includes all columns from this transformation.","[""Cleaning"",""Deduplication""]"
model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report,"This SQL query performs data transformation and cleaning on the Snapchat ads hourly report data. It casts various fields to appropriate data types, renames some columns, and performs unit conversions (e.g., milliseconds to seconds) for time-related fields. The query also adds a source_relation column to track the data source.","[""Cleaning"",""Featurization""]"
model.snapchat_ads_source.stg_snapchat_ads__campaign_history,"This SQL query stages data from a temporary Snapchat ads campaign history table. It casts specific fields to appropriate data types, renames some columns, and adds a flag to identify the most recent record for each campaign. The query also includes a 'source_relation' field, though it's set to an empty string in this case.","[""Cleaning"",""Deduplication""]"
model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, initialized to NULL. The LIMIT 0 clause ensures no rows are returned. This appears to be a template or placeholder query, possibly used to define the structure of a temporary table or view without populating it with data.","[""Other""]"
model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This is likely used as a template or placeholder for further development or testing purposes.","[""Other""]"
model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 ensures no rows are returned. This appears to be a template or placeholder query, possibly used for schema definition or testing purposes in a dbt (data build tool) project.","[""Other""]"
model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query limits the output to 0 rows, effectively creating a schema-only representation of the table without any data.","[""Other""]"
model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively creating a schema-only representation of the table without any data.","[""Other""]"
model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Snapchat ads campaign history data.","[""Other""]"
model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further data processing or as part of a larger data modeling process in dbt (data build tool).,"[""Other""]"
model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further development, or to create a temporary table structure without populating it with data.","[""Other""]"
model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. The query limits the result to 0 rows, effectively creating a template or skeleton for the table structure without any actual data.","[""Other""]"
model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative,"This SQL query stages data from a LinkedIn Ads source table. It performs type casting, date truncation, and column renaming. The query also applies COALESCE functions to handle potential NULL values in certain columns, converting them to default values (0 for numeric columns). The final SELECT statement retrieves all columns from the 'fields' CTE.","[""Cleaning"",""Featurization""]"
model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign,"This SQL query performs data cleaning and featurization on LinkedIn ads analytics data. It casts various fields to specific data types, truncates the 'day' field to represent only the date, and calculates or transforms several metrics such as cost, conversion value, and lead counts. The query also adds a source_relation field and renames some columns for clarity.","[""Cleaning"",""Featurization""]"
model.linkedin_source.stg_linkedin_ads__account_history,"This SQL query performs several operations on LinkedIn ads account history data. It starts by creating a base CTE from a temporary staging table. Then, it defines a macro CTE with null or empty values for all columns. The fields CTE then selects and casts various columns from the macro CTE, renames some columns, and adds an is_latest_version column using a window function. Finally, it selects all columns from the fields CTE.","[""Cleaning"",""Deduplication"",""Other""]"
model.linkedin_source.stg_linkedin_ads__campaign_history,"This SQL query stages data from a LinkedIn Ads campaign history source. It begins by selecting all columns from a temporary staging table, then defines a set of columns with specific data types using a CTE named 'macro'. The 'fields' CTE then selects and renames columns, casts some to appropriate data types, and adds a flag to identify the latest version of each campaign. The final SELECT statement returns all columns from the 'fields' CTE.","[""Cleaning"",""Deduplication"",""Other""]"
model.linkedin_source.stg_linkedin_ads__creative_history,This SQL query processes data from a LinkedIn Ads creative history table. It performs several operations: 1. Casts and renames columns for consistency 2. Selects the latest version of each creative based on last modified time 3. Extracts various URL components and UTM parameters from the click_uri field 4. Cleans and standardizes data formats,"[""Cleaning"",""Deduplication"",""Featurization""]"
model.linkedin_source.stg_linkedin_ads__campaign_group_history,"This SQL query stages data from a LinkedIn Ads campaign group history source. It casts and renames columns, converts timestamp fields, adds a flag for the latest version of each campaign group, and prepares the data for further processing or analysis.","[""Cleaning"",""Deduplication"",""Featurization""]"
model.linkedin_source.stg_linkedin_ads__campaign_group_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type, set to NULL. The query is likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for LinkedIn ads campaign group history data.","[""Other""]"
model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This appears to be a template or placeholder query, possibly used for schema definition or testing purposes in a dbt (data build tool) project.","[""Other""]"
model.linkedin_source.stg_linkedin_ads__account_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type, set to NULL. The query is likely used as a placeholder or template for further development, or to initialize a temporary table structure without populating it with data.","[""Other""]"
model.linkedin_source.stg_linkedin_ads__campaign_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further development or testing purposes.,"[""Other""]"
model.linkedin_source.stg_linkedin_ads__creative_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further operations in dbt (data build tool).,"[""Other""]"
model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures that no rows are returned. This appears to be a template or placeholder query, possibly used for schema definition or testing purposes in a dbt (data build tool) project.","[""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__keyword_history,"This SQL query processes data from the 'apple_search_ads_source.stg_apple_search_ads__keyword_history' model. It starts by selecting all columns from a temporary table, then defines a set of fields with specific data types. The final select statement renames some columns, calculates a 'is_most_recent_record' flag using a window function, and selects all fields from this final transformation.","[""Cleaning"",""Deduplication"",""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__ad_report,"This SQL query creates a staging table for Apple Search Ads ad report data. It starts by selecting all columns from a temporary table, then defines a set of fields with specific data types (mostly casting to NULL or empty values). Finally, it selects and renames some of these fields, structuring the data for further use in the data pipeline.","[""Cleaning"",""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__ad_group_report,"This SQL query creates a staging table for Apple Search Ads ad group reports. It starts with a base table, then defines a set of fields with specific data types (mostly set to NULL or empty values). Finally, it selects and renames some of these fields, preparing the data for further processing or analysis.","[""Cleaning"",""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__campaign_history,"This SQL query stages data from a temporary table, casts several fields to specific data types, renames some columns, and adds a flag to identify the most recent record for each campaign. It prepares the data for further processing or analysis by structuring and cleaning the raw data from the source.","[""Cleaning"",""Deduplication"",""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__search_term_report,"This SQL query stages data from an Apple Search Ads source table. It casts various fields to specific data types, renames some columns, and selects a subset of columns for the final output. The query doesn't perform any filtering, deduplication, or aggregation, but focuses on cleaning and restructuring the data for further use.","[""Cleaning"",""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__campaign_report,"This SQL query creates a staging table for Apple Search Ads campaign reports. It starts by selecting all columns from a temporary table, then defines a set of fields with specific data types and null values. Finally, it renames and reorganizes these fields into a final structure. The query doesn't perform any data transformation or filtering; it's primarily setting up a structure for the data.","[""Cleaning"",""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__ad_group_history,"This SQL query stages data from an Apple Search Ads source table. It casts columns to specific data types, renames some columns, and adds a flag to identify the most recent record for each ad group. The query doesn't perform any filtering or aggregation but focuses on structuring and preparing the data for further use.","[""Cleaning"",""Deduplication"",""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__organization,"This SQL query creates a staging table for Apple Search Ads organization data. It starts with a base table, then creates a fields CTE with null or empty values for specific columns. The final CTE renames and reorganizes these columns. The query doesn't perform any data manipulation or transformation on actual values; it's setting up a structure for the staging table with placeholder values.","[""Cleaning"",""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__ad_history,"This SQL query performs a series of transformations on data from the 'stg_apple_search_ads__ad_history_tmp' table. It casts several columns to specific data types, renames some columns, and adds a flag to identify the most recent record for each ad. The query also includes a 'source_relation' column, though it's set to an empty string in this case.","[""Cleaning"",""Deduplication"",""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__keyword_report,"This SQL query performs a data transformation on the 'stg_apple_search_ads__keyword_report' model. It starts by selecting all columns from a temporary table, then creates a fields CTE with null or empty values for specific columns. Finally, it renames and reorganizes these columns in the final CTE. The query doesn't perform any actual data manipulation or filtering, but rather sets up a structure for the data.","[""Cleaning"",""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively creating a schema-only representation of the table without any actual data.","[""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type. It's likely used as a placeholder or template for further development or testing purposes.,"[""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further operations in a dbt (data build tool) model.,"[""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Apple Search Ads campaign history data.","[""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively creating a template or schema for the '_dbt_source_relation' column without actually returning any data.","[""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__organization_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further operations in a dbt (data build tool) model.,"[""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This appears to be a template or placeholder query, possibly used for initializing a temporary table structure in a data modeling process.","[""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This query appears to be a placeholder or template for further development.","[""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query doesn't retrieve any actual data as it has a LIMIT 0 clause.","[""Other""]"
model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type. The query doesn't select any actual data and limits the result to 0 rows. This type of query is often used as a placeholder or to define a schema without populating it with data.,"[""Other""]"
model.google_ads_source.stg_google_ads__campaign_stats,"This SQL query stages and transforms data from a Google Ads campaign stats source table. It casts columns to specific data types, renames some columns, and performs basic data cleaning by replacing NULL values with defaults for numeric columns. The query also calculates the spend by dividing cost_micros by 1,000,000. Finally, it selects and restructures the data into a final output format.","[""Cleaning"",""Featurization""]"
model.google_ads_source.stg_google_ads__account_history,"This SQL query processes Google Ads account history data. It starts by selecting all columns from a temporary staging table, then defines a set of fields with specific data types. The final selection includes various account details, adds a source relation field, and determines the most recent record for each account. The query also filters out inactive records.","[""Cleaning"",""Deduplication"",""Filtering""]"
model.google_ads_source.stg_google_ads__ad_stats,"This SQL query stages data from a Google Ads source table. It casts fields to specific data types, applies some data transformations (like converting cost_micros to dollars), and renames some columns. The query also includes logic to handle potentially null values and extracts ad_group_id from a string when necessary.","[""Cleaning"",""Featurization""]"
model.google_ads_source.stg_google_ads__campaign_history,"This SQL query stages data for a Google Ads campaign history model. It starts by selecting all columns from a temporary table, then defines a set of fields with specific data types. The query then selects and renames certain columns, adds a source relation column, and creates an 'is_most_recent_record' flag using a window function. Finally, it filters for active records.","[""Cleaning"",""Deduplication"",""Filtering""]"
model.google_ads_source.stg_google_ads__account_stats,"This SQL query stages and transforms data from a Google Ads account statistics source table. It casts columns to specific data types, renames some columns, and performs basic data cleaning operations such as coalescing null values to zeros or default values. The query also converts the cost from micros to a decimal value. The final output includes selected and transformed columns from the source data.","[""Cleaning"",""Featurization""]"
model.google_ads_source.stg_google_ads__ad_group_stats,"This SQL query stages and transforms data from a Google Ads source table. It casts columns to specific data types, renames some columns, and performs simple calculations. The query also applies COALESCE to replace NULL values with zeros for numeric columns and divides the cost_micros by 1,000,000 to convert it to a standard currency unit.","[""Cleaning"",""Featurization""]"
model.google_ads_source.stg_google_ads__keyword_stats,"This SQL query performs data transformation and cleaning on the Google Ads keyword stats data. It casts various fields to specific data types, renames some columns, and performs basic calculations such as converting cost from micros to regular units. The query also applies COALESCE to replace NULL values with zeros for numeric fields.","[""Cleaning"",""Featurization""]"
model.google_ads_source.stg_google_ads__ad_group_criterion_history,"This SQL query stages data from a Google Ads source table, casting various fields to specific data types, and then selects and transforms these fields. It adds a 'source_relation' field, renames 'id' to 'criterion_id', and adds an 'is_most_recent_record' flag based on the most recent 'updated_at' timestamp for each unique combination of 'source_relation' and 'id'. The query also filters out records where '_fivetran_active' is false.","[""Cleaning"",""Deduplication"",""Filtering""]"
model.google_ads_source.stg_google_ads__ad_group_history,"This SQL query processes data from a Google Ads ad group history table. It casts fields to specific data types, renames some columns, and adds a flag to identify the most recent record for each ad group. The query also filters out inactive records and selects specific columns for the final output.","[""Cleaning"",""Deduplication"",""Filtering""]"
model.google_ads_source.stg_google_ads__ad_history,"This SQL query processes and transforms data from a Google Ads source table. It casts columns to specific data types, filters for active records, deduplicates to keep the most recent record for each ad, and extracts various URL components and UTM parameters from the final_urls field. The query also cleans and standardizes the final_urls data by removing brackets and splitting it into individual URLs.","[""Cleaning"",""Deduplication"",""Featurization""]"
model.google_ads_source.stg_google_ads__ad_stats_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further operations in a dbt (data build tool) project, specifically for the 'model.google_ads_source.stg_google_ads__ad_stats_tmp' model.","[""Other""]"
model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively returning no data. This type of query is often used as a placeholder or template in data modeling tools like dbt.","[""Other""]"
model.google_ads_source.stg_google_ads__ad_group_stats_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 ensures no rows are returned. This query appears to be a placeholder or template for generating a schema without actual data.","[""Other""]"
model.google_ads_source.stg_google_ads__ad_group_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further operations in a dbt (data build tool) model.,"[""Other""]"
model.google_ads_source.stg_google_ads__account_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type, initialized as NULL. The query is likely used as a placeholder or template for further development, or to establish a schema structure without populating data.","[""Other""]"
model.google_ads_source.stg_google_ads__campaign_stats_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively creating a schema-only output without any actual data.","[""Other""]"
model.google_ads_source.stg_google_ads__ad_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively creating a schema-only representation of the table without any data.","[""Other""]"
model.google_ads_source.stg_google_ads__campaign_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, initialized to NULL. The LIMIT 0 clause ensures no rows are returned. This query appears to be a placeholder or template, possibly used to define the structure of a temporary staging table in a dbt (data build tool) project for Google Ads data.","[""Other""]"
model.google_ads_source.stg_google_ads__account_stats_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type, initialized to NULL. The LIMIT 0 clause ensures no rows are returned. This query is likely used as a placeholder or template for generating a schema without data.","[""Other""]"
model.google_ads_source.stg_google_ads__keyword_stats_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This query is likely used as a template or placeholder in a dbt model.","[""Other""]"
model.facebook_ads_source.stg_facebook_ads__basic_ad,"This SQL query performs data type casting and column renaming on a Facebook ads dataset. It starts by selecting all columns from a temporary staging table, then defines a set of fields with specific data types. Finally, it casts some columns to different data types, renames a few columns, and applies a COALESCE function to handle potential NULL values in the 'clicks' column.","[""Cleaning"",""Other""]"
model.facebook_ads_source.stg_facebook_ads__account_history,"This SQL query stages data from a Facebook Ads account history source table. It casts fields to specific data types, renames some columns, and adds a flag to identify the most recent record for each account. The query also includes a mechanism to generate a surrogate key when the natural key (id) is missing.","[""Cleaning"",""Deduplication"",""Featurization""]"
model.facebook_ads_source.stg_facebook_ads__creative_history,"This SQL query performs several data transformations on the Facebook Ads creative history data. It starts by selecting all columns from a temporary table, then casts various fields to specific data types. The query renames some columns, such as changing 'id' to 'creative_id'. It also adds a 'source_relation' column and creates an 'is_most_recent_record' flag using window functions to identify the most recent record for each creative ID. Finally, it selects all columns from the transformed data.","[""Cleaning"",""Deduplication"",""Other""]"
model.facebook_ads_source.stg_facebook_ads__campaign_history,"This SQL query stages data from a temporary Facebook Ads campaign history table. It casts columns to specific data types, renames some columns, and adds a flag to identify the most recent record for each campaign. The query also includes a source relation column, though it's set to an empty string in this example.","[""Cleaning"",""Deduplication"",""Other""]"
model.facebook_ads_source.stg_facebook_ads__ad_history,"This SQL query performs several operations on the Facebook Ads data. It starts by selecting all columns from a temporary staging table, then defines a set of fields with specific data types. The final select statement casts various ID fields to BIGINT, renames some columns, and adds an 'is_most_recent_record' flag. This flag is determined using a ROW_NUMBER() function, which helps in identifying the most recent record for each unique ad (or source relation if id is null).","[""Cleaning"",""Deduplication"",""Other""]"
model.facebook_ads_source.stg_facebook_ads__ad_set_history,"This SQL query performs several transformations on data from a Facebook Ads source table. It casts various fields to specific data types, renames some columns, and adds a flag to identify the most recent record for each ad set. The query also includes logic to handle cases where 'id' and 'updated_time' might be null.","[""Cleaning"",""Deduplication"",""Other""]"
model.facebook_ads_source.stg_facebook_ads__creative_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, initialized to NULL. The query is likely used as a placeholder or template for further development, or to establish the structure of a table without populating it with data.","[""Other""]"
model.facebook_ads_source.stg_facebook_ads__account_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further operations in a dbt (data build tool) model.,"[""Other""]"
model.facebook_ads_source.stg_facebook_ads__ad_set_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively returning no data. This type of query is often used as a placeholder or template in data modeling tools like dbt (data build tool) to define the structure of a staging table without actually populating it with data.","[""Other""]"
model.facebook_ads_source.stg_facebook_ads__ad_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, containing NULL values. The LIMIT 0 clause ensures no rows are returned. This query is likely used as a placeholder or template for generating a schema without actual data.","[""Other""]"
model.facebook_ads_source.stg_facebook_ads__campaign_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively creating a schema-only representation of the table without any actual data.","[""Other""]"
model.facebook_ads_source.stg_facebook_ads__basic_ad_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively returning no data. This type of query is often used as a placeholder or for testing purposes, particularly in data modeling or ETL processes.","[""Other""]"
model.snapchat_ads.snapchat_ads__url_report,"This SQL query creates a comprehensive report for Snapchat ads with URL tracking. It combines data from various sources including ad creatives, ad hourly reports, ad accounts, ad squads, and campaigns. The query extracts URL components and UTM parameters, joins this information with ad performance data, and aggregates metrics like swipes, impressions, and spend. The result is a detailed view of ad performance tied to specific URL and UTM parameter combinations, allowing for analysis of ad effectiveness across different campaigns, content, and targeting strategies.","[""Filtering"",""Cleaning"",""Featurization"",""Integration"",""Aggregation""]"
model.snapchat_ads.snapchat_ads__ad_squad_report,"This SQL query combines data from multiple Snapchat advertising-related tables to create a comprehensive ad squad report. It joins ad squad hourly data with account, ad squad, and campaign information, filtering for the most recent records where applicable. The query then aggregates metrics such as swipes, impressions, and spend by date, account, campaign, and ad squad, providing a daily summary of ad performance across different organizational levels.","[""Filtering"",""Integration"",""Aggregation""]"
model.snapchat_ads.snapchat_ads__account_report,"This SQL query aggregates Snapchat ad performance data at the account level. It joins several tables (ad_hourly, ads, ad_squads, campaigns, and account) to combine ad performance metrics with account information. The query filters for the most recent records in the history tables, aggregates metrics like swipes, impressions, and spend by date, account ID, account name, and currency. The result is a daily summary of ad performance for each Snapchat ad account.","[""Filtering"",""Integration"",""Aggregation""]"
model.snapchat_ads.snapchat_ads__ad_report,"This SQL query combines data from multiple Snapchat Ads-related tables to create a comprehensive ad performance report. It processes creative history, URL tags, ad hourly reports, ad account information, and ad history. The query cleans and standardizes URL-related data, extracts UTM parameters, joins various tables to integrate information, and finally aggregates daily ad performance metrics such as swipes, impressions, and spend.","[""Filtering"",""Cleaning"",""Featurization"",""Integration"",""Aggregation""]"
model.snapchat_ads.snapchat_ads__campaign_report,"This SQL query integrates data from three source tables (campaign hourly report, ad account history, and campaign history) to create a daily campaign performance report. It joins the tables, filters for the most recent records in the history tables, aggregates metrics like swipes, impressions, and spend on a daily basis, and includes relevant dimensional information such as account and campaign details.","[""Filtering"",""Integration"",""Aggregation""]"
model.snapchat_ads.snapchat_ads__creative_history_prep,"This SQL query processes Snapchat ad creative data. It starts by filtering for the most recent records from creative history and URL tag history. It then pivots the URL tag data to create columns for UTM parameters. The main part of the query extracts and cleans URL-related information from the creative data, including base URL, host, and path. It also combines UTM parameters from both the URL tags and the URL itself. Finally, it joins this processed data with the pivoted URL tag data to create a comprehensive view of each creative's URL and tracking information.","[""Filtering"",""Cleaning"",""Featurization"",""Integration"",""Aggregation""]"
model.microsoft_ads_source.stg_microsoft_ads__ad_history,"This SQL query creates a staging table for Microsoft Ads ad history data. It starts with a base CTE that selects all columns from a temporary table. Then, it defines a fields CTE with null or empty values for specific columns. Finally, it selects and renames columns from the fields CTE, adds a row number to identify the most recent record for each ad, and includes a source relation column.","[""Cleaning"",""Deduplication"",""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__account_daily_report,"This SQL query stages data from a temporary table, casts columns to specific data types, renames some columns, and selects a subset of columns for the final output. It appears to be preparing data from a Microsoft Ads account daily report for further use.","[""Cleaning"",""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__search_daily_report,"This SQL query performs a data transformation and type casting operation on the 'microsoft_ads__search_daily_report' data. It selects all columns from a temporary table, casts them to specific data types, renames some columns, and reorganizes the column order in the final output. The query doesn't perform any filtering, aggregation, or complex transformations.","[""Cleaning""]"
model.microsoft_ads_source.stg_microsoft_ads__keyword_daily_report,"This SQL query stages data for the Microsoft Ads keyword daily report. It selects data from a temporary table, casts columns to specific data types, renames some columns, and reorganizes the column order. The query doesn't perform any filtering, cleaning, deduplication, featurization, integration, or aggregation. It's primarily focused on structuring the data for further use.","[""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__keyword_history,"This SQL query creates a staging table for Microsoft Ads keyword history. It starts with a base table, then creates a fields CTE with NULL or empty values for specific columns. The final CTE selects and renames columns from the fields CTE, adds a source_relation column, and includes a row number to identify the most recent record for each keyword. The query ends by selecting all columns from the final CTE.","[""Cleaning"",""Deduplication"",""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__campaign_history,"This SQL query creates a staging table for Microsoft Ads campaign history data. It starts with a base table, then defines a fields structure with specific data types. The final select statement renames some columns, adds a source_relation column, and includes a row number to identify the most recent record for each campaign. The query focuses on structuring and preparing the data for further use.","[""Cleaning"",""Deduplication""]"
model.microsoft_ads_source.stg_microsoft_ads__campaign_daily_report,"This SQL query stages data from a temporary table, casts columns to specific data types, renames some columns, and reorganizes the column order. It doesn't perform any data transformation, filtering, or aggregation. The query appears to be preparing the data for further processing or analysis by standardizing the structure and data types.","[""Cleaning""]"
model.microsoft_ads_source.stg_microsoft_ads__ad_daily_report,"This SQL query creates a staging table for Microsoft Ads daily ad reports. It starts by selecting all columns from a temporary table, then defines a set of fields with specific data types (mostly set to NULL or empty strings), and finally reorganizes and renames some columns in the final select statement. The query appears to be setting up a structure for data that will be populated later, rather than actually transforming or aggregating data.","[""Cleaning"",""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__ad_group_daily_report,"This SQL query is designed to create a staging table for Microsoft Ads ad group daily reports. It starts by selecting all columns from a temporary table, then defines a set of fields with specific data types (mostly set to NULL or empty string), and finally reorganizes and renames some columns in the final select statement. The query doesn't perform any actual data transformation or filtering, suggesting it's primarily used to set up a consistent structure for the staging table.","[""Cleaning"",""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__ad_group_history,"This SQL query stages data from a temporary table for Microsoft Ads ad group history. It casts fields to specific data types, renames some columns, and adds a flag to identify the most recent record for each ad group across different source relations. The query doesn't actually filter or aggregate data but prepares it for further processing.","[""Cleaning"",""Deduplication"",""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__account_history,"This SQL query creates a staged version of Microsoft Ads account history data. It starts with a base table, creates a fields CTE with NULL or empty values for specific columns, and then constructs a final CTE that selects and renames columns from the fields CTE. The query also adds a flag to identify the most recent record for each account using a window function. The final SELECT statement retrieves all columns from the final CTE.","[""Cleaning"",""Deduplication"",""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__campaign_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This is likely used as a template or placeholder for a staging table in a dbt (data build tool) project, specifically for Microsoft Ads campaign history data.","[""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__ad_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further operations in a dbt (data build tool) project, specifically for staging data from Microsoft Ads.","[""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__ad_group_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively creating a template or schema for the column without any actual data.","[""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__keyword_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Microsoft Ads keyword history data.","[""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__keyword_daily_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. The query doesn't retrieve any actual data, as it uses LIMIT 0 to return no rows. This is likely used as a template or placeholder for a staging table in a dbt (data build tool) project.","[""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__campaign_daily_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This appears to be a template or placeholder query, possibly used for schema definition or testing purposes in a dbt (data build tool) project.","[""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__ad_group_daily_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, initialized to NULL. The LIMIT 0 clause ensures no rows are returned. This appears to be a template or placeholder query, possibly used to define the structure of a temporary table or view without populating it with data.","[""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__ad_daily_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, initialized to NULL. The query is likely used as a placeholder or template for further development or testing purposes.","[""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__account_daily_report_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. The query doesn't retrieve any actual data; it's likely used as a placeholder or template for structure definition.,"[""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__account_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Microsoft Ads account history data.","[""Other""]"
model.microsoft_ads_source.stg_microsoft_ads__search_daily_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This appears to be a template or placeholder query, possibly used for schema definition or testing purposes in a dbt (data build tool) project.","[""Other""]"
model.reddit_ads_source.stg_reddit_ads__campaign_report,"This SQL query performs data type casting and minor transformations on the Reddit ads campaign report data. It starts by selecting all columns from a temporary staging table, then casts each column to a specific data type. The final select statement renames the 'date' column to 'date_day' and converts the 'spend' column from microseconds to seconds by dividing it by 1,000,000. The query also adds a 'source_relation' column, though it's set to an empty string.","[""Cleaning"",""Featurization""]"
model.reddit_ads_source.stg_reddit_ads__ad_group,"This SQL query performs data cleaning and transformation on the 'stg_reddit_ads__ad_group_tmp' table. It casts columns to specific data types, renames some columns, and restructures the data. The query doesn't filter or aggregate data, but focuses on standardizing the format and structure of the ad group information from Reddit Ads.","[""Cleaning"",""Other""]"
model.reddit_ads_source.stg_reddit_ads__campaign,"This SQL query creates a staging table for Reddit ads campaign data. It starts with a base table, then defines a fields CTE that casts all columns to specific data types (mostly setting them to NULL). Finally, it selects and renames some columns from the fields CTE to create the final output. The query appears to be setting up a structure for data that will be populated later, as all fields are currently set to NULL or empty string.","[""Cleaning"",""Other""]"
model.reddit_ads_source.stg_reddit_ads__ad,"This SQL query stages data from a temporary table for Reddit ads. It performs type casting on various fields, renames some columns, and selects specific columns for the final output. The query doesn't filter, deduplicate, or aggregate data, but rather prepares it for further processing or analysis.","[""Cleaning"",""Other""]"
model.reddit_ads_source.stg_reddit_ads__ad_group_report,"This SQL query stages data from a temporary table, casts columns to specific data types, renames some columns, and performs a minor calculation on the 'spend' column (dividing it by 1,000,000). It prepares the data for further processing or analysis by standardizing the structure and format of the data.","[""Cleaning"",""Featurization""]"
model.reddit_ads_source.stg_reddit_ads__account_report,"This SQL query performs data transformation on the 'stg_reddit_ads__account_report_tmp' table. It starts by casting NULL values to specific data types for various fields. Then, it selects and renames certain columns, and performs a simple calculation on the 'spend' column (dividing it by 1,000,000). The query also adds a 'source_relation' column with an empty string value.","[""Cleaning"",""Featurization""]"
model.reddit_ads_source.stg_reddit_ads__account,"This SQL query performs a basic transformation on data from a staging table for Reddit ads accounts. It casts several columns to specific data types, renames the 'id' column to 'account_id', and adds a 'source_relation' column. The query doesn't filter, deduplicate, or aggregate data, but rather focuses on cleaning and standardizing the data structure.","[""Cleaning""]"
model.reddit_ads_source.stg_reddit_ads__ad_report,"This SQL query performs data type casting and minor transformations on the 'stg_reddit_ads__ad_report' model. It casts various columns to specific data types, renames the 'date' column to 'date_day', and converts the 'spend' column from microseconds to seconds by dividing it by 1,000,000. The query also includes a 'source_relation' column, though it's set to an empty string in this case.","[""Cleaning"",""Featurization""]"
model.reddit_ads_source.stg_reddit_ads__ad_report_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for a staging table in dbt (data build tool) for Reddit ads data.,"[""Other""]"
model.reddit_ads_source.stg_reddit_ads__ad_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for generating a schema without any actual data.,"[""Other""]"
model.reddit_ads_source.stg_reddit_ads__campaign_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Reddit ads campaign reporting.","[""Other""]"
model.reddit_ads_source.stg_reddit_ads__account_report_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further operations in a dbt (data build tool) model.,"[""Other""]"
model.reddit_ads_source.stg_reddit_ads__account_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Reddit ads account data.","[""Other""]"
model.reddit_ads_source.stg_reddit_ads__ad_group_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Reddit ads data related to ad groups.","[""Other""]"
model.reddit_ads_source.stg_reddit_ads__ad_group_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively creating a template or schema for the 'model.reddit_ads_source.stg_reddit_ads__ad_group_report_tmp' model without actually returning any data.","[""Other""]"
model.reddit_ads_source.stg_reddit_ads__campaign_tmp,"This SQL query creates a temporary table with a single column named '_dbt_source_relation' of type TEXT, initialized with NULL values. The LIMIT 0 clause ensures that no rows are actually returned, effectively creating an empty table structure.","[""Other""]"
model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly,"This SQL query stages data for a TikTok ads campaign report. It starts by selecting all columns from a temporary table, then defines a set of fields with specific data types and nulls or empty values. Finally, it selects and renames these fields, casting the stat_time_hour to a TIMESTAMP. The query appears to be setting up a structure for data that will be populated later, rather than performing operations on existing data.","[""Cleaning"",""Other""]"
model.tiktok_ads_source.stg_tiktok_ads__ad_group_history,"This SQL query stages data from a temporary TikTok ads table, casts various fields to specific data types, renames some columns, coalesces age-related fields, and adds a flag to identify the most recent record for each ad group. It also includes a source relation field for tracking purposes.","[""Cleaning"",""Deduplication"",""Featurization""]"
model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly,"This SQL query performs a data type casting and column selection operation on a TikTok ads hourly report table. It starts by selecting all columns from a temporary table, then defines a set of fields with specific data types (mostly numeric and timestamp). Finally, it selects and renames these fields, ensuring consistent data types and structure for the ad report data.","[""Cleaning"",""Other""]"
model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly,"This SQL query performs data type casting and column renaming on a TikTok ads ad group hourly report. It starts with a base table, defines the desired data types and column names in a CTE named 'fields', and then selects and rearranges these fields in the final output. The query primarily focuses on standardizing data types and column names without performing any complex transformations or aggregations.","[""Cleaning""]"
model.tiktok_ads_source.stg_tiktok_ads__advertiser,"This SQL query stages data for a TikTok ads advertiser model. It starts by selecting all columns from a temporary table, then defines a set of fields with specific data types (mostly as NULL or empty string placeholders). Finally, it selects and renames certain fields, and combines some fields using COALESCE to handle potential duplicates or alternatives (e.g., cellphone_number and phone_number).","[""Cleaning"",""Featurization""]"
model.tiktok_ads_source.stg_tiktok_ads__campaign_history,"This SQL query stages data from a temporary table, casts fields to specific data types, and identifies the most recent record for each campaign. It structures the data into a standardized format with specific column names and types, preparing it for further processing or analysis.","[""Cleaning"",""Deduplication""]"
model.tiktok_ads_source.stg_tiktok_ads__ad_history,"This SQL query processes data from a TikTok ads history source table. It performs several transformations on the data, including casting data types, extracting URL components (base URL, host, path), parsing UTM parameters, and identifying the most recent record for each ad. The query also cleans and standardizes the landing page URL by removing common prefixes and splitting it into components.","[""Cleaning"",""Featurization"",""Deduplication""]"
model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further development or testing purposes in a data modeling context.,"[""Other""]"
model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for TikTok ads data.","[""Other""]"
model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type. It's likely used as a placeholder or template for further development or testing purposes in the dbt (data build tool) framework, specifically for the TikTok ads campaign report hourly staging model.","[""Other""]"
model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is limited to 0 rows, effectively creating a schema-only representation of the table without any actual data.","[""Other""]"
model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further development, or to establish a schema without actually populating data.","[""Other""]"
model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further operations in a dbt (data build tool) project.,"[""Other""]"
model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The query is likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for TikTok ads data.","[""Other""]"
model.tiktok_ads.tiktok_ads__url_report,"This SQL query combines data from multiple TikTok ad-related tables to create a comprehensive daily report of ad performance metrics. It joins ad reports with ad, ad group, advertiser, and campaign data, then aggregates various performance metrics (like impressions, clicks, spend) by date and ad details. The query also calculates derived metrics such as CPC, CPM, and CTR. It filters for ads with populated URL fields and includes various ad targeting and UTM parameters.","[""Filtering"",""Integration"",""Aggregation"",""Featurization""]"
model.tiktok_ads.tiktok_ads__campaign_report,"This SQL query combines data from three tables (campaign report, campaign history, and advertiser) to create a daily aggregated report of TikTok ad campaign performance. It joins the tables, aggregates hourly data to daily level, calculates various performance metrics (impressions, clicks, spend, etc.), and computes derived metrics like CPC, CPM, and CTR.","[""Integration"",""Aggregation"",""Featurization""]"
model.tiktok_ads.tiktok_ads__ad_report,"This SQL query aggregates and integrates data from various TikTok ad-related tables. It combines hourly ad report data with information about ads, ad groups, advertisers, and campaigns. The query calculates various metrics such as impressions, clicks, spend, and engagement metrics (likes, comments, shares, etc.) on a daily basis. It also computes derived metrics like CPC (Cost Per Click), CPM (Cost Per Mille), and CTR (Click-Through Rate). The result is a comprehensive daily report of ad performance across different dimensions of the advertising structure.","[""Integration"",""Aggregation"",""Featurization"",""Filtering""]"
model.tiktok_ads.tiktok_ads__advertiser_report,"This SQL query aggregates TikTok ad performance data at the advertiser level. It joins hourly ad report data with advertiser and ad history information, then calculates various performance metrics such as clicks, impressions, spend, and engagement metrics. The query also computes derived metrics like CPC, CPM, and CTR. The results are grouped by source relation, date, advertiser ID, advertiser name, and currency.","[""Integration"",""Aggregation"",""Featurization"",""Filtering""]"
model.tiktok_ads.tiktok_ads__ad_group_report,"This SQL query aggregates TikTok ad performance data at the ad group level. It joins hourly ad group report data with ad group, advertiser, and campaign information. The query calculates various performance metrics such as impressions, clicks, spend, and engagement metrics. It also computes derived metrics like CPC, CPM, and CTR. The results are grouped by date, advertiser, campaign, and ad group details.","[""Integration"",""Aggregation"",""Featurization""]"
model.linkedin.linkedin_ads__campaign_group_report,"This SQL query creates a comprehensive report of LinkedIn ad campaign group performance. It combines data from multiple staging tables, including campaign groups, campaigns, accounts, and ad analytics. The query filters for the latest versions of historical data, calculates total conversions, and aggregates various performance metrics (clicks, impressions, cost, conversions) at the campaign group level. The final output includes campaign group details, account information, and aggregated performance metrics for each day.","[""Filtering"",""Integration"",""Featurization"",""Aggregation""]"
model.linkedin.linkedin_ads__creative_report,"This SQL query creates a comprehensive report of LinkedIn ad performance by combining data from multiple sources. It joins creative, campaign, campaign group, and account data with ad analytics, calculates total conversions, and aggregates metrics such as clicks, impressions, cost, and conversion values. The final result provides a detailed view of ad performance across different levels of the advertising hierarchy.","[""Integration"",""Aggregation"",""Featurization""]"
model.linkedin.linkedin_ads__url_report,"This SQL query integrates data from multiple LinkedIn Ads-related tables (creative, campaign, campaign_group, account, and ad analytics) to create a comprehensive URL report. It joins these tables, calculates total conversions, and aggregates various metrics (conversions, clicks, impressions, cost) by date, URL details, campaign information, and account details. The query filters out records where the click_uri is null and groups the results by relevant dimensions.","[""Integration"",""Aggregation"",""Filtering"",""Featurization""]"
model.linkedin.linkedin_ads__campaign_report,"This SQL query integrates data from multiple LinkedIn Ads related tables (campaign, campaign group, account, and ad analytics) to create a comprehensive campaign report. It filters for the latest versions of historical data, performs joins to combine information from different sources, calculates total conversions, and aggregates various metrics (clicks, impressions, cost, conversions) at the campaign level. The final output includes detailed campaign information along with performance metrics.","[""Filtering"",""Integration"",""Featurization"",""Aggregation""]"
model.linkedin.linkedin_ads__account_report,"This SQL query creates a comprehensive account report for LinkedIn Ads. It combines data from account history, campaign history, and ad analytics. The query filters for the latest versions of accounts and campaigns, calculates total conversions, and then aggregates various metrics (conversions, clicks, impressions, cost, etc.) at the account level. It joins the analytics data with account and campaign information to provide a detailed view of ad performance for each account on a daily basis.","[""Filtering"",""Integration"",""Featurization"",""Aggregation""]"
model.pinterest.pinterest_ads__pin_promotion_report,"This SQL query integrates data from multiple Pinterest Ads-related tables (pin promotion report, pin promotion history, ad group history, campaign history, and advertiser history) to create a comprehensive report. It joins these tables based on various IDs and source relations, filters for the most recent records in the history tables, and aggregates metrics such as clicks, impressions, and spend. The result is a detailed view of Pinterest ad performance across different levels of the advertising hierarchy (advertiser, campaign, ad group, and pin).","[""Filtering"",""Integration"",""Aggregation""]"
model.pinterest.pinterest_ads__campaign_report,"This SQL query combines data from three tables (campaign report, campaign history, and advertiser history) to create a comprehensive report on Pinterest ad campaigns. It joins the most recent campaign and advertiser data with daily report data, aggregates spend, clicks, and impressions, and includes relevant information such as advertiser name, campaign name, and status.","[""Filtering"",""Integration"",""Aggregation""]"
model.pinterest.pinterest_ads__ad_group_report,"This SQL query integrates data from multiple Pinterest Ads-related tables (ad group report, advertisers, campaigns, and ad groups) to create a comprehensive view of ad performance. It joins these tables based on relevant IDs and source relations, filters for the most recent records in some tables, and aggregates spend, clicks, and impressions data at the ad group level. The result is a detailed report that includes information about advertisers, campaigns, ad groups, and their performance metrics.","[""Filtering"",""Integration"",""Aggregation""]"
model.pinterest.pinterest_ads__url_report,"This SQL query integrates data from multiple Pinterest advertising tables (pin promotion report, pin promotion history, ad group history, campaign history, and advertiser history) to create a comprehensive URL report. It joins these tables, filters for the most recent records in the history tables, and aggregates metrics like clicks, impressions, and spend. The query provides a detailed view of advertising performance across various dimensions such as advertiser, campaign, ad group, and pin levels, including URL-related information and UTM parameters.","[""Integration"",""Filtering"",""Aggregation""]"
model.pinterest.pinterest_ads__keyword_report,"This SQL query combines data from multiple Pinterest Ads-related tables to create a comprehensive keyword report. It joins keyword performance data with advertiser, campaign, ad group, and keyword information. The query filters for the most recent records in the history tables, aggregates spend, clicks, and impressions data, and presents a detailed view of keyword performance across the advertising hierarchy.","[""Filtering"",""Integration"",""Aggregation""]"
model.pinterest.pinterest_ads__advertiser_report,"This SQL query combines advertiser report data with advertiser history data, joining them on advertiser_id and source_relation. It filters the advertiser history to only include the most recent records. The query then aggregates spend, clicks, and impressions by date, advertiser, currency, and country, providing a comprehensive summary of advertising performance for each advertiser.","[""Filtering"",""Integration"",""Aggregation""]"
model.twitter_ads_source.stg_twitter_ads__line_item_report,"This SQL query transforms data from a temporary staging table for Twitter Ads line item reports. It casts columns to specific data types, renames some columns, and performs minor calculations. The query also adds a source_relation column and truncates the date to day-level granularity. No filtering, deduplication, or aggregation is performed.","[""Cleaning"",""Featurization""]"
model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report,"This SQL query transforms and structures data from a Twitter Ads line item keywords report. It casts fields to specific data types, creates a date_day column by truncating the date to day level, generates a unique keyword_id using MD5 hashing of multiple fields, and calculates spend from billed_charge_local_micro. The query also renames some columns and selects specific fields for the final output.","[""Cleaning"",""Featurization"",""Other""]"
model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history,"This SQL query performs several transformations on data from a Twitter Ads source table. It casts several fields to specific data types, renames some columns, and adds a flag to identify the latest version of each promoted tweet. The query also includes a source relation field, though it's set to an empty string in this case.","[""Cleaning"",""Deduplication"",""Featurization""]"
model.twitter_ads_source.stg_twitter_ads__account_history,"This SQL query performs a series of transformations on data from a Twitter Ads account history table. It casts various fields to specific data types, renames some columns, and adds a flag to identify the latest version of each account record. The query also includes a 'source_relation' field, though it's set to an empty string in this case.","[""Cleaning"",""Deduplication"",""Other""]"
model.twitter_ads_source.stg_twitter_ads__line_item_history,"This SQL query stages data from a Twitter Ads source table, casting various fields to specific data types, renaming some columns, and performing light transformations. It also adds a flag to identify the latest version of each line item and calculates monetary amounts from micro units. The query prepares the data for further analysis or integration into a larger data model.","[""Cleaning"",""Deduplication"",""Featurization""]"
model.twitter_ads_source.stg_twitter_ads__campaign_history,"This SQL query processes data from a Twitter Ads campaign history staging table. It casts and renames fields, calculates budget amounts in standard currency units, adds a flag for the latest version of each campaign, and selects all resulting columns. The query performs data type conversions, column renaming, and adds derived columns for analysis purposes.","[""Cleaning"",""Featurization"",""Deduplication""]"
model.twitter_ads_source.stg_twitter_ads__tweet,"This SQL query performs a basic data transformation on the 'stg_twitter_ads__tweet_tmp' table. It casts several columns to TEXT type with NULL or empty string values, renames some columns, and selects a subset of columns for the final output. The query doesn't filter, aggregate, or integrate data from multiple sources.","[""Cleaning"",""Other""]"
model.twitter_ads_source.stg_twitter_ads__campaign_report,"This SQL query stages data from a temporary table for Twitter ads campaign reports. It casts columns to specific data types, renames some columns, and performs minor transformations such as truncating the date to day level and converting the spend from micro units to standard currency units. The query doesn't filter or aggregate data, but prepares it for further analysis.","[""Cleaning"",""Featurization""]"
model.twitter_ads_source.stg_twitter_ads__tweet_url,"This SQL query processes Twitter ad data, specifically focusing on tweet URLs. It starts by casting fields to specific data types, then performs extensive URL parsing and analysis. The query extracts various components from the expanded URL, including the base URL, host, path, and UTM parameters (source, medium, campaign, content, and term). This transformation and feature extraction from URL data can be valuable for analyzing the effectiveness and reach of Twitter ad campaigns.","[""Cleaning"",""Featurization""]"
model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report,"This SQL query processes data from a Twitter ads promoted tweet report. It first casts columns to specific data types, renames them, and then performs calculations on the spend data. The query truncates the date to the day level and converts the spend from micro-units to standard currency units. It doesn't filter or aggregate the data, but rather prepares it for further analysis.","[""Cleaning"",""Featurization""]"
model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, initialized to NULL. The LIMIT 0 clause ensures no rows are returned. This is likely used as a template or placeholder for a staging table in a dbt (data build tool) project.","[""Other""]"
model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Twitter ads promoted tweet reports.","[""Other""]"
model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This query appears to be a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Twitter ads line item keywords report data.","[""Other""]"
model.twitter_ads_source.stg_twitter_ads__tweet_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This type of query is often used as a placeholder or to define a schema structure without actually populating data.","[""Other""]"
model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This appears to be a template or placeholder query, possibly used for schema definition or testing purposes in a dbt (data build tool) project.","[""Other""]"
model.twitter_ads_source.stg_twitter_ads__account_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. The query doesn't select any actual data; it's likely used as a template or placeholder in a dbt (data build tool) model.,"[""Other""]"
model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a template or placeholder for future data operations or to create a temporary table structure.,"[""Other""]"
model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Twitter ads campaign reporting.","[""Other""]"
model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 ensures no rows are returned. This appears to be a template or placeholder query, likely used for initializing or testing purposes in a dbt (data build tool) model.","[""Other""]"
model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Twitter Ads campaign history data.","[""Other""]"
model.reddit_ads.reddit_ads__url_report,"This SQL query integrates data from multiple Reddit ads-related tables (ad reports, ads, ad groups, campaigns, and accounts) to create a comprehensive URL report. It cleans and extracts various URL components and UTM parameters from the click_url field, aggregates metrics like clicks, impressions, and spend, and filters out ads without valid URLs. The query performs complex string manipulations to parse URL information and combines it with other ad-related data to provide a detailed view of ad performance by URL.","[""Integration"",""Cleaning"",""Featurization"",""Aggregation"",""Filtering""]"
model.reddit_ads.reddit_ads__account_report,"This SQL query combines data from two staging tables: account reports and accounts. It joins these tables on account_id and source_relation, then aggregates the data by summing clicks, impressions, and spend. The result includes various account details and daily aggregated metrics.","[""Integration"",""Aggregation""]"
model.reddit_ads.reddit_ads__ad_report,"This SQL query integrates data from multiple Reddit ad-related tables (ad reports, ads, ad groups, campaigns, and accounts) to create a comprehensive view of ad performance. It joins these tables based on common identifiers and source relations, then aggregates the data to calculate total clicks, impressions, and spend for each unique combination of ad, campaign, ad group, and account details.","[""Integration"",""Aggregation""]"
model.reddit_ads.reddit_ads__ad_group_report,"This SQL query integrates data from multiple Reddit Ads tables (ad group report, ad groups, campaigns, and accounts) to create a comprehensive ad performance report. It joins these tables based on common identifiers and source relations, then aggregates the data to calculate total clicks, impressions, and spend for each unique combination of date, account, ad group, and campaign. The result provides a detailed view of ad performance across different levels of the advertising hierarchy.","[""Integration"",""Aggregation""]"
model.reddit_ads.reddit_ads__campaign_report,"This SQL query integrates data from three tables: campaign report, campaigns, and accounts. It joins these tables based on account_id, campaign_id, and source_relation. The query then aggregates the data, summing up clicks, impressions, and spend for each unique combination of source_relation, date_day, account_id, campaign_name, campaign_id, and currency. The result provides a comprehensive view of campaign performance metrics across different accounts and campaigns.","[""Integration"",""Aggregation""]"
model.google_ads.google_ads__url_report,"This SQL query integrates data from multiple Google Ads-related tables (ad stats, accounts, campaigns, ad groups, and ads) to create a comprehensive URL report. It filters for the most recent records in history tables, joins these tables together, and aggregates various metrics (spend, clicks, impressions, conversions) grouped by different dimensions such as account, campaign, ad group, and URL components. The query also includes UTM parameters for tracking purposes.","[""Filtering"",""Integration"",""Aggregation""]"
model.google_ads.google_ads__ad_report,"This SQL query combines data from multiple Google Ads-related tables (ad stats, accounts, campaigns, ad groups, and ads) to create a comprehensive ad performance report. It joins these tables, filters for the most recent records in some cases, and aggregates metrics such as spend, clicks, impressions, and conversions. The result is a detailed view of ad performance across various dimensions like account, campaign, ad group, and individual ad level.","[""Filtering"",""Integration"",""Aggregation""]"
model.google_ads.google_ads__keyword_report,"This SQL query integrates data from multiple Google Ads-related tables (keyword stats, account history, campaign history, ad group history, and ad group criterion history) to create a comprehensive keyword report. It joins these tables based on various IDs and the source relation, filters for the most recent records in the history tables, and aggregates metrics such as spend, clicks, impressions, and conversions. The result is a detailed view of keyword performance across different levels of the account structure (account, campaign, ad group) with associated metadata.","[""Filtering"",""Integration"",""Aggregation""]"
model.google_ads.google_ads__ad_group_report,"This SQL query integrates data from multiple Google Ads-related tables (ad group stats, account history, campaign history, and ad group history) to create a comprehensive ad group report. It joins these tables, filters for the most recent records in the history tables, and aggregates metrics such as spend, clicks, impressions, and conversions at the ad group level. The result provides a detailed view of ad group performance with associated account, campaign, and ad group attributes.","[""Filtering"",""Integration"",""Aggregation""]"
model.google_ads.google_ads__campaign_report,"This SQL query integrates data from three different staging tables (campaign stats, account history, and campaign history) to create a comprehensive campaign report. It joins these tables, filters for the most recent records in the history tables, and aggregates various metrics like spend, clicks, impressions, and conversions. The result is a detailed view of campaign performance across different accounts and campaigns.","[""Filtering"",""Integration"",""Aggregation""]"
model.google_ads.google_ads__account_report,"This SQL query combines data from Google Ads account statistics and account history. It filters the account history to only include the most recent records, joins this with the account statistics, and then aggregates various metrics (spend, clicks, impressions, conversions) at the account level. The result provides a comprehensive view of each account's performance and characteristics.","[""Filtering"",""Integration"",""Aggregation""]"
model.amazon_ads.amazon_ads__portfolio_report,"This SQL query combines data from multiple Amazon Ads-related tables to create a comprehensive portfolio report. It joins information from campaign reports, account profiles, portfolio history, and campaign history. The query filters for the most recent records in portfolio and campaign history, and aggregates cost, clicks, and impressions data at the portfolio level. The result provides a detailed view of portfolio performance including budget information, serving status, and associated account details.","[""Filtering"",""Integration"",""Aggregation""]"
model.amazon_ads.amazon_ads__keyword_report,"This SQL query integrates data from multiple Amazon Ads-related tables to create a comprehensive keyword report. It joins information from targeting keyword reports, account profiles, portfolios, campaigns, ad groups, and keyword history. The query filters for the most recent records in some tables, combines relevant fields from all sources, and aggregates cost, clicks, and impressions data. The result is a detailed view of keyword performance across various organizational levels (account, portfolio, campaign, ad group) with associated metadata.","[""Filtering"",""Integration"",""Aggregation""]"
model.amazon_ads.amazon_ads__ad_group_report,"This SQL query integrates data from multiple Amazon Ads-related tables to create a comprehensive ad group report. It joins information from ad group reports, account profiles, portfolios, campaigns, and ad groups. The query filters for the most recent records in some tables, aggregates cost, clicks, and impressions data, and combines various attributes like account details, portfolio information, campaign data, and ad group specifics into a single result set.","[""Filtering"",""Integration"",""Aggregation""]"
model.amazon_ads.amazon_ads__account_report,"This SQL query combines data from campaign-level reports, profile information, and campaign history to create an account-level report for Amazon Ads. It joins these tables, filters for non-deleted and most recent records, and aggregates metrics such as cost, clicks, and impressions by account, date, and other dimensions.","[""Filtering"",""Integration"",""Aggregation""]"
model.amazon_ads.amazon_ads__search_report,"This SQL query integrates data from multiple Amazon Ads-related tables to create a comprehensive search term report. It joins information from search term reports, account profiles, portfolios, campaigns, ad groups, and keywords. The query filters for the most recent records in some tables, aggregates cost, clicks, and impressions data, and provides a detailed view of search term performance across various levels of the account structure.","[""Filtering"",""Integration"",""Aggregation""]"
model.amazon_ads.amazon_ads__campaign_report,"This SQL query integrates data from multiple Amazon Ads-related tables to create a comprehensive campaign report. It joins campaign-level report data with account information, portfolio details, and campaign history. The query then aggregates metrics such as cost, clicks, and impressions at the campaign level, while including various attributes like account name, portfolio name, and campaign details.","[""Integration"",""Aggregation"",""Filtering""]"
model.amazon_ads.amazon_ads__ad_report,"This SQL query combines data from multiple Amazon Ads-related tables to create a comprehensive ad performance report. It joins information from advertised product reports, account profiles, portfolios, campaigns, ad groups, and product ads. The query filters for the most recent records in some tables, aggregates metrics like cost, clicks, and impressions, and includes various identifiers and attributes related to the ads and their hierarchical structure.","[""Filtering"",""Integration"",""Aggregation""]"
model.amazon_ads.int_amazon_ads__portfolio_history,"This SQL query selects all columns from the most recent records in the amazon_ads_source.stg_amazon_ads__portfolio_history table. It filters the data to include only the rows where 'is_most_recent_record' is TRUE, effectively retrieving the latest portfolio history information.","[""Filtering""]"
model.pinterest_source.stg_pinterest_ads__keyword_history,"This SQL query performs a series of transformations on data from a Pinterest ads keyword history table. It starts by casting all fields to specific data types, then renames and reorganizes some columns. Finally, it adds a flag to identify the most recent record for each keyword using a window function.","[""Cleaning"",""Deduplication"",""Other""]"
model.pinterest_source.stg_pinterest_ads__advertiser_history,"This SQL query stages data from a Pinterest ads advertiser history table. It casts columns to specific data types, renames some columns, and adds a flag to identify the most recent record for each advertiser. The query also adds a source_relation column and selects specific fields from the base table.","[""Cleaning"",""Deduplication"",""Other""]"
model.pinterest_source.stg_pinterest_ads__pin_promotion_history,"This SQL query processes data from a Pinterest ads pin promotion history table. It performs several transformations on the data, including casting data types, extracting URL components, parsing UTM parameters, and creating a flag for the most recent record. The query also renames some columns and creates new features from existing data.","[""Cleaning"",""Featurization"",""Deduplication""]"
model.pinterest_source.stg_pinterest_ads__campaign_history,"This SQL query stages data from a temporary Pinterest ads campaign history table. It casts columns to specific data types, renames some columns, and adds a flag to identify the most recent record for each campaign. The query prepares the data for further processing or analysis by structuring it in a consistent format.","[""Cleaning"",""Deduplication""]"
model.pinterest_source.stg_pinterest_ads__ad_group_report,"This SQL query transforms and cleans data from a Pinterest ads ad group report. It casts various fields to specific data types, combines impression and clickthrough data, calculates spend in dollars from micro-dollars, and truncates the date to day-level granularity. The query also adds a source_relation field and renames some columns for clarity.","[""Cleaning"",""Featurization""]"
model.pinterest_source.stg_pinterest_ads__ad_group_history,"This SQL query performs a series of transformations on data from the 'pinterest_source.stg_pinterest_ads__ad_group_history' table. It starts by casting columns to specific data types, renames some columns, and adds a 'source_relation' column. The query then selects and reorganizes these fields, adding a 'is_most_recent_record' flag based on the most recent '_fivetran_synced' timestamp for each unique combination of 'source_relation' and 'id'.","[""Cleaning"",""Deduplication"",""Other""]"
model.pinterest_source.stg_pinterest_ads__campaign_report,"This SQL query performs several operations on the Pinterest ads campaign report data. It starts by casting fields to specific data types, then combines impression and clickthrough data, calculates spend in dollars from micro-dollars, and truncates the date to day level. The query also renames some columns and selects specific fields for the final output.","[""Cleaning"",""Featurization"",""Other""]"
model.pinterest_source.stg_pinterest_ads__advertiser_report,"This SQL query performs several transformations on data from a Pinterest ads advertiser report. It starts by casting columns to specific data types, then combines impression and clickthrough data, converts spend from micro-dollars to dollars, and truncates the date to day level. The query also adds a source_relation column and renames some fields for clarity.","[""Cleaning"",""Featurization"",""Other""]"
model.pinterest_source.stg_pinterest_ads__keyword_report,"This SQL query stages data from a Pinterest ads keyword report. It performs type casting on various fields, combines impression and clickthrough data, calculates spend in dollars from micro-dollars, and truncates the date to day level. The query also adds a source_relation field and renames some columns for clarity.","[""Cleaning"",""Featurization""]"
model.pinterest_source.stg_pinterest_ads__pin_promotion_report,"This SQL query performs data transformation on a Pinterest ads pin promotion report. It starts by casting columns to specific data types, then calculates total impressions and clicks by combining two separate impression and clickthrough fields. It also converts the spend from micro-dollars to dollars. The query truncates the date to day level and selects specific fields for the final output.","[""Cleaning"",""Featurization""]"
model.pinterest_source.stg_pinterest_ads__campaign_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 clause ensures no rows are returned. This is likely used as a template or placeholder for a staging table in a dbt (data build tool) project.","[""Other""]"
model.pinterest_source.stg_pinterest_ads__ad_group_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type, which is set to NULL. The query is limited to 0 rows, effectively returning no data. This type of query is often used as a placeholder or template in data modeling tools like dbt (data build tool) to define the structure of a staging table without actually populating it with data.","[""Other""]"
model.pinterest_source.stg_pinterest_ads__keyword_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, initialized to NULL. The query is limited to 0 rows, effectively creating a schema-only representation of the table without any data.","[""Other""]"
model.pinterest_source.stg_pinterest_ads__advertiser_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template query, possibly for testing or initializing a structure without actual data.","[""Other""]"
model.pinterest_source.stg_pinterest_ads__pin_promotion_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type. The query doesn't fetch any actual data; it's likely used as a placeholder or template for further development or testing purposes.,"[""Other""]"
model.pinterest_source.stg_pinterest_ads__advertiser_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT, which is set to NULL. The LIMIT 0 ensures no rows are returned. This appears to be a template or placeholder query, possibly used for schema definition or testing purposes in a dbt (data build tool) project.","[""Other""]"
model.pinterest_source.stg_pinterest_ads__pin_promotion_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type, initialized as NULL. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Pinterest ads data related to pin promotion reports.","[""Other""]"
model.pinterest_source.stg_pinterest_ads__campaign_history_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type. The query doesn't select any actual data and limits the output to 0 rows, effectively creating a template or placeholder for the table structure.","[""Other""]"
model.pinterest_source.stg_pinterest_ads__keyword_report_tmp,"This SQL query creates an empty result set with a single column named '_dbt_source_relation' of TEXT data type. It's likely used as a placeholder or template for a staging table in a dbt (data build tool) project, specifically for Pinterest ads keyword report data.","[""Other""]"
model.pinterest_source.stg_pinterest_ads__ad_group_history_tmp,This SQL query creates an empty result set with a single column named '_dbt_source_relation' of type TEXT. It's likely used as a placeholder or template for further development or testing purposes.,"[""Other""]"
model.twitter_ads.twitter_ads__campaign_report,"This SQL query combines data from three sources: campaign reports, campaign history, and account history. It joins these tables to create a comprehensive report that includes campaign performance metrics (clicks, impressions, spend) along with campaign and account details. The query filters for the latest versions of campaigns and accounts, and aggregates the report data by various dimensions such as date, placement, account, and campaign.","[""Filtering"",""Integration"",""Aggregation""]"
model.twitter_ads.twitter_ads__account_report,"This SQL query combines data from Twitter ads account history and promoted tweet reports. It first filters the account history for the latest versions, then aggregates the promoted tweet report data by date, account, and placement. Finally, it joins this aggregated data with the account information, providing a comprehensive report of ad performance metrics (clicks, impressions, spend, etc.) along with account details.","[""Filtering"",""Integration"",""Aggregation""]"
model.twitter_ads.twitter_ads__url_report,"This SQL query integrates data from multiple Twitter Ads-related tables to create a comprehensive URL report. It joins information from promoted tweets, campaigns, accounts, line items, and tweets, focusing on URL-related metrics. The query filters for the latest versions of historical data and non-null expanded URLs. It then aggregates metrics like clicks, impressions, spend, and URL clicks, grouping by various dimensions such as account, campaign, tweet, and URL attributes.","[""Filtering"",""Integration"",""Aggregation""]"
model.twitter_ads.twitter_ads__keyword_report,"This SQL query integrates data from multiple Twitter Ads-related tables to create a comprehensive keyword report. It joins the keyword report with line item, campaign, and account information, and then aggregates metrics such as clicks, impressions, spend, and URL clicks. The query filters for the latest versions of line items, campaigns, and accounts, and groups the results by various dimensions including date, account, campaign, line item, and keyword.","[""Filtering"",""Integration"",""Aggregation""]"
model.twitter_ads.twitter_ads__promoted_tweet_report,"This SQL query integrates data from multiple Twitter Ads-related tables to create a comprehensive report on promoted tweets. It joins information from accounts, campaigns, line items, promoted tweets, and tweets, filtering for the latest versions where applicable. The query then aggregates metrics such as clicks, impressions, spend, and URL clicks, grouping by various dimensions including date, placement, account, campaign, and tweet details.","[""Filtering"",""Integration"",""Aggregation""]"
model.twitter_ads.twitter_ads__line_item_report,"This SQL query integrates data from multiple Twitter Ads-related tables (line item report, line items, campaigns, and accounts) to create a comprehensive report. It joins these tables based on common identifiers and source relations, selecting the latest versions of historical data where applicable. The query then aggregates metrics such as clicks, impressions, spend, and URL clicks while including various attributes from the joined tables. The result is a detailed view of Twitter Ads performance at the line item level, including associated campaign and account information.","[""Filtering"",""Integration"",""Aggregation""]"
