{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.4", "generated_at": "2024-08-04T03:35:21.515267Z", "invocation_id": "08bc4fd2-7759-4aa5-b783-ef3c08ed5a0d", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:50.020161Z", "completed_at": "2024-08-04T03:33:51.519319Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:51.519776Z", "completed_at": "2024-08-04T03:33:51.519799Z"}], "thread_id": "Thread-1", "execution_time": 1.6807126998901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ad_reporting.metricflow_time_spine", "compiled": true, "compiled_code": "\nwith \n\ndays as (\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 3651\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    dateadd(\n        day,\n        (row_number() over (order by 1) - 1),\n        \n\n    dateadd(\n        day,\n        -3650,\n        cast(convert_timezone('UTC', 'America/Los_Angeles',\n    cast(convert_timezone('UTC', current_timestamp()) as timestamp)\n) as date)\n        )\n\n\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast(\n\n    dateadd(\n        day,\n        1,\n        cast(convert_timezone('UTC', 'America/Los_Angeles',\n    cast(convert_timezone('UTC', current_timestamp()) as timestamp)\n) as date)\n        )\n\n as date)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as timestamp) as date_day\nfrom\n    date_spine d\n\n\n\n),\n\ncast_to_date as (\n\n    select \n        cast(date_day as date) as date_day\n    \n    from days\n\n)\n\nselect * from cast_to_date", "relation_name": "TEST.PUBLIC_ad_reporting.metricflow_time_spine"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:51.702321Z", "completed_at": "2024-08-04T03:33:52.211436Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.211862Z", "completed_at": "2024-08-04T03:33:52.211874Z"}], "thread_id": "Thread-1", "execution_time": 0.6786558628082275, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__ad_group_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:52.382612Z", "completed_at": "2024-08-04T03:33:52.388366Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.388757Z", "completed_at": "2024-08-04T03:33:52.388765Z"}], "thread_id": "Thread-1", "execution_time": 0.007088184356689453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__ad_group_level_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_level_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:52.390810Z", "completed_at": "2024-08-04T03:33:52.395769Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.396152Z", "completed_at": "2024-08-04T03:33:52.396158Z"}], "thread_id": "Thread-1", "execution_time": 0.006383419036865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__advertised_product_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__advertised_product_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:52.398174Z", "completed_at": "2024-08-04T03:33:52.402969Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.403348Z", "completed_at": "2024-08-04T03:33:52.403372Z"}], "thread_id": "Thread-1", "execution_time": 0.006176471710205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:52.405467Z", "completed_at": "2024-08-04T03:33:52.410976Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.411382Z", "completed_at": "2024-08-04T03:33:52.411390Z"}], "thread_id": "Thread-1", "execution_time": 0.006990909576416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__campaign_level_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_level_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:52.413407Z", "completed_at": "2024-08-04T03:33:52.417910Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.418287Z", "completed_at": "2024-08-04T03:33:52.418293Z"}], "thread_id": "Thread-1", "execution_time": 0.005852937698364258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__keyword_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__keyword_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:52.420362Z", "completed_at": "2024-08-04T03:33:52.425122Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.425514Z", "completed_at": "2024-08-04T03:33:52.425521Z"}], "thread_id": "Thread-1", "execution_time": 0.006209373474121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__portfolio_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__portfolio_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:52.427533Z", "completed_at": "2024-08-04T03:33:52.432869Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.433240Z", "completed_at": "2024-08-04T03:33:52.433246Z"}], "thread_id": "Thread-1", "execution_time": 0.006745100021362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__product_ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__product_ad_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:52.435245Z", "completed_at": "2024-08-04T03:33:52.439806Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.440184Z", "completed_at": "2024-08-04T03:33:52.440190Z"}], "thread_id": "Thread-1", "execution_time": 0.005909442901611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__profile_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__profile_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:52.442072Z", "completed_at": "2024-08-04T03:33:52.446809Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.447192Z", "completed_at": "2024-08-04T03:33:52.447198Z"}], "thread_id": "Thread-1", "execution_time": 0.006025075912475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__search_term_ad_keyword_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__search_term_ad_keyword_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:52.449175Z", "completed_at": "2024-08-04T03:33:52.453989Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.454372Z", "completed_at": "2024-08-04T03:33:52.454378Z"}], "thread_id": "Thread-1", "execution_time": 0.00616145133972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__targeting_keyword_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__targeting_keyword_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:52.456404Z", "completed_at": "2024-08-04T03:33:52.970027Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:52.970427Z", "completed_at": "2024-08-04T03:33:52.970439Z"}], "thread_id": "Thread-1", "execution_time": 0.7039687633514404, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.162174Z", "completed_at": "2024-08-04T03:33:53.168008Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:53.168394Z", "completed_at": "2024-08-04T03:33:53.168403Z"}], "thread_id": "Thread-1", "execution_time": 0.007337093353271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.170443Z", "completed_at": "2024-08-04T03:33:53.175542Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:53.175934Z", "completed_at": "2024-08-04T03:33:53.175941Z"}], "thread_id": "Thread-1", "execution_time": 0.006496906280517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.177932Z", "completed_at": "2024-08-04T03:33:53.183721Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:53.184111Z", "completed_at": "2024-08-04T03:33:53.184117Z"}], "thread_id": "Thread-1", "execution_time": 0.0071637630462646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.186110Z", "completed_at": "2024-08-04T03:33:53.190717Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:53.191107Z", "completed_at": "2024-08-04T03:33:53.191113Z"}], "thread_id": "Thread-1", "execution_time": 0.005905866622924805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.193206Z", "completed_at": "2024-08-04T03:33:53.197762Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:53.198154Z", "completed_at": "2024-08-04T03:33:53.198159Z"}], "thread_id": "Thread-1", "execution_time": 0.005954742431640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.200149Z", "completed_at": "2024-08-04T03:33:53.205611Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:53.205998Z", "completed_at": "2024-08-04T03:33:53.206004Z"}], "thread_id": "Thread-1", "execution_time": 0.006761074066162109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.208023Z", "completed_at": "2024-08-04T03:33:53.212606Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:53.212998Z", "completed_at": "2024-08-04T03:33:53.213005Z"}], "thread_id": "Thread-1", "execution_time": 0.0059049129486083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.215030Z", "completed_at": "2024-08-04T03:33:53.219624Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:53.220003Z", "completed_at": "2024-08-04T03:33:53.220009Z"}], "thread_id": "Thread-1", "execution_time": 0.005980014801025391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__organization_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__organization_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.221985Z", "completed_at": "2024-08-04T03:33:53.226842Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:53.227217Z", "completed_at": "2024-08-04T03:33:53.227223Z"}], "thread_id": "Thread-1", "execution_time": 0.00620722770690918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.229271Z", "completed_at": "2024-08-04T03:33:53.807223Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:53.807660Z", "completed_at": "2024-08-04T03:33:53.807673Z"}], "thread_id": "Thread-1", "execution_time": 0.7565090656280518, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.987386Z", "completed_at": "2024-08-04T03:33:53.993060Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:53.993439Z", "completed_at": "2024-08-04T03:33:53.993447Z"}], "thread_id": "Thread-1", "execution_time": 0.007109642028808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:53.995530Z", "completed_at": "2024-08-04T03:33:54.000287Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.000670Z", "completed_at": "2024-08-04T03:33:54.000677Z"}], "thread_id": "Thread-1", "execution_time": 0.00617527961730957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_set_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.002701Z", "completed_at": "2024-08-04T03:33:54.008437Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.008821Z", "completed_at": "2024-08-04T03:33:54.008827Z"}], "thread_id": "Thread-1", "execution_time": 0.007112264633178711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.010643Z", "completed_at": "2024-08-04T03:33:54.015529Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.015925Z", "completed_at": "2024-08-04T03:33:54.015932Z"}], "thread_id": "Thread-1", "execution_time": 0.006150722503662109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.017791Z", "completed_at": "2024-08-04T03:33:54.022531Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.022921Z", "completed_at": "2024-08-04T03:33:54.022928Z"}], "thread_id": "Thread-1", "execution_time": 0.0060160160064697266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__creative_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.024935Z", "completed_at": "2024-08-04T03:33:54.556039Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.556450Z", "completed_at": "2024-08-04T03:33:54.556465Z"}], "thread_id": "Thread-1", "execution_time": 0.7154099941253662, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__account_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.742075Z", "completed_at": "2024-08-04T03:33:54.747804Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.748191Z", "completed_at": "2024-08-04T03:33:54.748200Z"}], "thread_id": "Thread-1", "execution_time": 0.007229804992675781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__account_stats_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__account_stats_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.750279Z", "completed_at": "2024-08-04T03:33:54.755265Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.755699Z", "completed_at": "2024-08-04T03:33:54.755707Z"}], "thread_id": "Thread-1", "execution_time": 0.006457090377807617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_criterion_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.757748Z", "completed_at": "2024-08-04T03:33:54.763347Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.763774Z", "completed_at": "2024-08-04T03:33:54.763780Z"}], "thread_id": "Thread-1", "execution_time": 0.0070340633392333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.765792Z", "completed_at": "2024-08-04T03:33:54.770271Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.770654Z", "completed_at": "2024-08-04T03:33:54.770660Z"}], "thread_id": "Thread-1", "execution_time": 0.0058405399322509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_stats_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_stats_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.772696Z", "completed_at": "2024-08-04T03:33:54.777204Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.777578Z", "completed_at": "2024-08-04T03:33:54.777584Z"}], "thread_id": "Thread-1", "execution_time": 0.005866050720214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__ad_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.779591Z", "completed_at": "2024-08-04T03:33:54.784194Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.784573Z", "completed_at": "2024-08-04T03:33:54.784579Z"}], "thread_id": "Thread-1", "execution_time": 0.005986928939819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_stats_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__ad_stats_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.786534Z", "completed_at": "2024-08-04T03:33:54.799270Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.799710Z", "completed_at": "2024-08-04T03:33:54.799717Z"}], "thread_id": "Thread-1", "execution_time": 0.014179229736328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.801779Z", "completed_at": "2024-08-04T03:33:54.806262Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.806644Z", "completed_at": "2024-08-04T03:33:54.806650Z"}], "thread_id": "Thread-1", "execution_time": 0.005887508392333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__campaign_stats_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_stats_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.808690Z", "completed_at": "2024-08-04T03:33:54.813221Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:54.813597Z", "completed_at": "2024-08-04T03:33:54.813603Z"}], "thread_id": "Thread-1", "execution_time": 0.0058650970458984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__keyword_stats_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__keyword_stats_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:54.815659Z", "completed_at": "2024-08-04T03:33:55.651599Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:55.652011Z", "completed_at": "2024-08-04T03:33:55.652025Z"}], "thread_id": "Thread-1", "execution_time": 1.0488519668579102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__account_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:55.865871Z", "completed_at": "2024-08-04T03:33:55.871430Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:55.871829Z", "completed_at": "2024-08-04T03:33:55.871837Z"}], "thread_id": "Thread-1", "execution_time": 0.0070171356201171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_campaign_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:55.873901Z", "completed_at": "2024-08-04T03:33:55.878732Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:55.879121Z", "completed_at": "2024-08-04T03:33:55.879127Z"}], "thread_id": "Thread-1", "execution_time": 0.006219387054443359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_creative_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:55.881126Z", "completed_at": "2024-08-04T03:33:55.886727Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:55.887112Z", "completed_at": "2024-08-04T03:33:55.887118Z"}], "thread_id": "Thread-1", "execution_time": 0.0069580078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_group_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_group_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:55.889151Z", "completed_at": "2024-08-04T03:33:55.893758Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:55.894146Z", "completed_at": "2024-08-04T03:33:55.894152Z"}], "thread_id": "Thread-1", "execution_time": 0.005968809127807617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:55.896171Z", "completed_at": "2024-08-04T03:33:55.900758Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:55.901139Z", "completed_at": "2024-08-04T03:33:55.901145Z"}], "thread_id": "Thread-1", "execution_time": 0.0059664249420166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__creative_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__creative_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:55.903136Z", "completed_at": "2024-08-04T03:33:56.423176Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:56.423635Z", "completed_at": "2024-08-04T03:33:56.423648Z"}], "thread_id": "Thread-1", "execution_time": 0.7008943557739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__account_daily_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_daily_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:56.605363Z", "completed_at": "2024-08-04T03:33:56.610863Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:56.611246Z", "completed_at": "2024-08-04T03:33:56.611253Z"}], "thread_id": "Thread-1", "execution_time": 0.00693058967590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:56.613253Z", "completed_at": "2024-08-04T03:33:56.618033Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:56.618415Z", "completed_at": "2024-08-04T03:33:56.618421Z"}], "thread_id": "Thread-1", "execution_time": 0.006145477294921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__ad_daily_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_daily_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:56.620454Z", "completed_at": "2024-08-04T03:33:56.625199Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:56.625578Z", "completed_at": "2024-08-04T03:33:56.625585Z"}], "thread_id": "Thread-1", "execution_time": 0.006088972091674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__ad_group_daily_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_daily_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:56.627617Z", "completed_at": "2024-08-04T03:33:56.633377Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:56.633760Z", "completed_at": "2024-08-04T03:33:56.633766Z"}], "thread_id": "Thread-1", "execution_time": 0.007148265838623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__ad_group_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:56.635793Z", "completed_at": "2024-08-04T03:33:56.640334Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:56.640715Z", "completed_at": "2024-08-04T03:33:56.640721Z"}], "thread_id": "Thread-1", "execution_time": 0.005924701690673828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:56.642780Z", "completed_at": "2024-08-04T03:33:56.647411Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:56.647808Z", "completed_at": "2024-08-04T03:33:56.647815Z"}], "thread_id": "Thread-1", "execution_time": 0.006062030792236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__campaign_daily_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_daily_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:56.649805Z", "completed_at": "2024-08-04T03:33:56.655195Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:56.655606Z", "completed_at": "2024-08-04T03:33:56.655612Z"}], "thread_id": "Thread-1", "execution_time": 0.006758689880371094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:56.657623Z", "completed_at": "2024-08-04T03:33:56.662080Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:56.662454Z", "completed_at": "2024-08-04T03:33:56.662460Z"}], "thread_id": "Thread-1", "execution_time": 0.005812883377075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__keyword_daily_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_daily_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:56.664493Z", "completed_at": "2024-08-04T03:33:56.669004Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:56.669379Z", "completed_at": "2024-08-04T03:33:56.669384Z"}], "thread_id": "Thread-1", "execution_time": 0.005909919738769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__keyword_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:56.671381Z", "completed_at": "2024-08-04T03:33:56.675997Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:56.676369Z", "completed_at": "2024-08-04T03:33:56.676374Z"}], "thread_id": "Thread-1", "execution_time": 0.005959033966064453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__search_daily_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__search_daily_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:56.678373Z", "completed_at": "2024-08-04T03:33:57.205358Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:57.205772Z", "completed_at": "2024-08-04T03:33:57.205785Z"}], "thread_id": "Thread-1", "execution_time": 0.71632981300354, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__ad_group_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:57.396349Z", "completed_at": "2024-08-04T03:33:57.402030Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:57.402409Z", "completed_at": "2024-08-04T03:33:57.402417Z"}], "thread_id": "Thread-1", "execution_time": 0.007261753082275391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__ad_group_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:57.404509Z", "completed_at": "2024-08-04T03:33:57.409352Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:57.409734Z", "completed_at": "2024-08-04T03:33:57.409741Z"}], "thread_id": "Thread-1", "execution_time": 0.006232500076293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__advertiser_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:57.411726Z", "completed_at": "2024-08-04T03:33:57.417645Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:57.418034Z", "completed_at": "2024-08-04T03:33:57.418040Z"}], "thread_id": "Thread-1", "execution_time": 0.007319450378417969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__advertiser_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:57.420008Z", "completed_at": "2024-08-04T03:33:57.424701Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:57.425085Z", "completed_at": "2024-08-04T03:33:57.425091Z"}], "thread_id": "Thread-1", "execution_time": 0.006074428558349609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:57.427124Z", "completed_at": "2024-08-04T03:33:57.431738Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:57.432122Z", "completed_at": "2024-08-04T03:33:57.432128Z"}], "thread_id": "Thread-1", "execution_time": 0.0059850215911865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__campaign_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:57.434066Z", "completed_at": "2024-08-04T03:33:57.439888Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:57.440265Z", "completed_at": "2024-08-04T03:33:57.440270Z"}], "thread_id": "Thread-1", "execution_time": 0.007105827331542969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__keyword_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:57.442307Z", "completed_at": "2024-08-04T03:33:57.447023Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:57.447426Z", "completed_at": "2024-08-04T03:33:57.447433Z"}], "thread_id": "Thread-1", "execution_time": 0.0061855316162109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__keyword_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:57.449495Z", "completed_at": "2024-08-04T03:33:57.454074Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:57.454460Z", "completed_at": "2024-08-04T03:33:57.454466Z"}], "thread_id": "Thread-1", "execution_time": 0.0059626102447509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__pin_promotion_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:57.456501Z", "completed_at": "2024-08-04T03:33:57.461212Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:57.461592Z", "completed_at": "2024-08-04T03:33:57.461599Z"}], "thread_id": "Thread-1", "execution_time": 0.006058692932128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__pin_promotion_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:57.463592Z", "completed_at": "2024-08-04T03:33:57.973895Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:57.974301Z", "completed_at": "2024-08-04T03:33:57.974313Z"}], "thread_id": "Thread-1", "execution_time": 0.6881449222564697, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__account_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:58.152901Z", "completed_at": "2024-08-04T03:33:58.158550Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:58.158932Z", "completed_at": "2024-08-04T03:33:58.158939Z"}], "thread_id": "Thread-1", "execution_time": 0.006969928741455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__account_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:58.160961Z", "completed_at": "2024-08-04T03:33:58.165673Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:58.166056Z", "completed_at": "2024-08-04T03:33:58.166062Z"}], "thread_id": "Thread-1", "execution_time": 0.00608372688293457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__ad_group_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:58.168074Z", "completed_at": "2024-08-04T03:33:58.173808Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:58.174183Z", "completed_at": "2024-08-04T03:33:58.174189Z"}], "thread_id": "Thread-1", "execution_time": 0.007117748260498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__ad_group_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:58.176184Z", "completed_at": "2024-08-04T03:33:58.180704Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:58.181079Z", "completed_at": "2024-08-04T03:33:58.181085Z"}], "thread_id": "Thread-1", "execution_time": 0.005892038345336914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__ad_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:58.182986Z", "completed_at": "2024-08-04T03:33:58.187652Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:58.188032Z", "completed_at": "2024-08-04T03:33:58.188038Z"}], "thread_id": "Thread-1", "execution_time": 0.005953311920166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__ad_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:58.190837Z", "completed_at": "2024-08-04T03:33:58.196442Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:58.196831Z", "completed_at": "2024-08-04T03:33:58.196837Z"}], "thread_id": "Thread-1", "execution_time": 0.006959438323974609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__campaign_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:58.198832Z", "completed_at": "2024-08-04T03:33:58.203443Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:58.203850Z", "completed_at": "2024-08-04T03:33:58.203857Z"}], "thread_id": "Thread-1", "execution_time": 0.006005525588989258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__campaign_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:58.205880Z", "completed_at": "2024-08-04T03:33:58.977020Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:58.977423Z", "completed_at": "2024-08-04T03:33:58.977436Z"}], "thread_id": "Thread-1", "execution_time": 0.972754955291748, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.180099Z", "completed_at": "2024-08-04T03:33:59.186946Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.187329Z", "completed_at": "2024-08-04T03:33:59.187337Z"}], "thread_id": "Thread-1", "execution_time": 0.0083465576171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.189367Z", "completed_at": "2024-08-04T03:33:59.194021Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.194401Z", "completed_at": "2024-08-04T03:33:59.194407Z"}], "thread_id": "Thread-1", "execution_time": 0.006007671356201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.196416Z", "completed_at": "2024-08-04T03:33:59.201163Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.201553Z", "completed_at": "2024-08-04T03:33:59.201559Z"}], "thread_id": "Thread-1", "execution_time": 0.00606083869934082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.203587Z", "completed_at": "2024-08-04T03:33:59.208097Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.208467Z", "completed_at": "2024-08-04T03:33:59.208474Z"}], "thread_id": "Thread-1", "execution_time": 0.005845785140991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.210453Z", "completed_at": "2024-08-04T03:33:59.216023Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.216395Z", "completed_at": "2024-08-04T03:33:59.216401Z"}], "thread_id": "Thread-1", "execution_time": 0.006911516189575195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.218386Z", "completed_at": "2024-08-04T03:33:59.222852Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.223228Z", "completed_at": "2024-08-04T03:33:59.223234Z"}], "thread_id": "Thread-1", "execution_time": 0.005818367004394531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.225347Z", "completed_at": "2024-08-04T03:33:59.229882Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.230254Z", "completed_at": "2024-08-04T03:33:59.230260Z"}], "thread_id": "Thread-1", "execution_time": 0.005946636199951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.232258Z", "completed_at": "2024-08-04T03:33:59.236788Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.237162Z", "completed_at": "2024-08-04T03:33:59.237168Z"}], "thread_id": "Thread-1", "execution_time": 0.005865335464477539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.239113Z", "completed_at": "2024-08-04T03:33:59.771028Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.771471Z", "completed_at": "2024-08-04T03:33:59.771484Z"}], "thread_id": "Thread-1", "execution_time": 0.7295973300933838, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.970242Z", "completed_at": "2024-08-04T03:33:59.975918Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.976306Z", "completed_at": "2024-08-04T03:33:59.976314Z"}], "thread_id": "Thread-1", "execution_time": 0.007113933563232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_report_hourly_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.978347Z", "completed_at": "2024-08-04T03:33:59.984022Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.984398Z", "completed_at": "2024-08-04T03:33:59.984404Z"}], "thread_id": "Thread-1", "execution_time": 0.007033348083496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.986389Z", "completed_at": "2024-08-04T03:33:59.991004Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.991402Z", "completed_at": "2024-08-04T03:33:59.991409Z"}], "thread_id": "Thread-1", "execution_time": 0.00597834587097168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:33:59.993369Z", "completed_at": "2024-08-04T03:33:59.997938Z"}, {"name": "execute", "started_at": "2024-08-04T03:33:59.998307Z", "completed_at": "2024-08-04T03:33:59.998313Z"}], "thread_id": "Thread-1", "execution_time": 0.00588679313659668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__advertiser_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.000313Z", "completed_at": "2024-08-04T03:34:00.004957Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.005332Z", "completed_at": "2024-08-04T03:34:00.005338Z"}], "thread_id": "Thread-1", "execution_time": 0.005996227264404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.007286Z", "completed_at": "2024-08-04T03:34:00.012751Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.013129Z", "completed_at": "2024-08-04T03:34:00.013135Z"}], "thread_id": "Thread-1", "execution_time": 0.006791830062866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_report_hourly_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.015099Z", "completed_at": "2024-08-04T03:34:00.683464Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.683899Z", "completed_at": "2024-08-04T03:34:00.683912Z"}], "thread_id": "Thread-1", "execution_time": 0.8689701557159424, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__account_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.885719Z", "completed_at": "2024-08-04T03:34:00.891287Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.891714Z", "completed_at": "2024-08-04T03:34:00.891723Z"}], "thread_id": "Thread-1", "execution_time": 0.007047891616821289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.893726Z", "completed_at": "2024-08-04T03:34:00.899977Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.900357Z", "completed_at": "2024-08-04T03:34:00.900365Z"}], "thread_id": "Thread-1", "execution_time": 0.007677555084228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.902372Z", "completed_at": "2024-08-04T03:34:00.907195Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.907603Z", "completed_at": "2024-08-04T03:34:00.907610Z"}], "thread_id": "Thread-1", "execution_time": 0.006203413009643555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.909607Z", "completed_at": "2024-08-04T03:34:00.914440Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.914823Z", "completed_at": "2024-08-04T03:34:00.914830Z"}], "thread_id": "Thread-1", "execution_time": 0.006184101104736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.916849Z", "completed_at": "2024-08-04T03:34:00.921434Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.921819Z", "completed_at": "2024-08-04T03:34:00.921825Z"}], "thread_id": "Thread-1", "execution_time": 0.005931377410888672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.923870Z", "completed_at": "2024-08-04T03:34:00.929445Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.929829Z", "completed_at": "2024-08-04T03:34:00.929836Z"}], "thread_id": "Thread-1", "execution_time": 0.006983041763305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.931802Z", "completed_at": "2024-08-04T03:34:00.936378Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.936759Z", "completed_at": "2024-08-04T03:34:00.936765Z"}], "thread_id": "Thread-1", "execution_time": 0.005922794342041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.938723Z", "completed_at": "2024-08-04T03:34:00.943257Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.943689Z", "completed_at": "2024-08-04T03:34:00.943695Z"}], "thread_id": "Thread-1", "execution_time": 0.005919218063354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__tweet_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.945647Z", "completed_at": "2024-08-04T03:34:00.950945Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:00.951320Z", "completed_at": "2024-08-04T03:34:00.951327Z"}], "thread_id": "Thread-1", "execution_time": 0.00666046142578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet_url_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:00.953336Z", "completed_at": "2024-08-04T03:34:01.466937Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:01.467338Z", "completed_at": "2024-08-04T03:34:01.467351Z"}], "thread_id": "Thread-1", "execution_time": 0.6871442794799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__ad_group_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    creation_date\n    \n , \n    cast(null as float) as \n    \n    default_bid\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    last_updated_date\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    serving_status\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as TEXT) as ad_group_id,\n        cast(campaign_id as TEXT) as campaign_id,\n        creation_date,\n        default_bid,\n        last_updated_date,\n        name as ad_group_name,\n        serving_status,\n        state,\n        row_number() over (partition by source_relation, id order by last_updated_date desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:01.643448Z", "completed_at": "2024-08-04T03:34:02.197900Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:02.198308Z", "completed_at": "2024-08-04T03:34:02.198321Z"}], "thread_id": "Thread-1", "execution_time": 0.7327828407287598, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__ad_group_level_report", "compiled": true, "compiled_code": "\nwith base as (\n\n    select * \n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_level_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_bidding_strategy\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as float) as \n    \n    cost\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(ad_group_id as TEXT) as ad_group_id,\n        campaign_bidding_strategy,\n        clicks,\n        cost,\n        date as date_day,\n        impressions\n\n        \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_level_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:02.377258Z", "completed_at": "2024-08-04T03:34:02.964158Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:02.964606Z", "completed_at": "2024-08-04T03:34:02.964621Z"}], "thread_id": "Thread-1", "execution_time": 0.7592611312866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__advertised_product_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__advertised_product_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as integer) as \n    \n    ad_id\n    \n , \n    cast(null as TEXT) as \n    \n    advertised_asin\n    \n , \n    cast(null as TEXT) as \n    \n    advertised_sku\n    \n , \n    cast(null as float) as \n    \n    campaign_budget_amount\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_budget_currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_budget_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as float) as \n    \n    cost\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(ad_id as TEXT) as ad_id,\n        cast(ad_group_id as TEXT) as ad_group_id,\n        advertised_asin,\n        advertised_sku,\n        campaign_budget_amount,\n        campaign_budget_currency_code,\n        campaign_budget_type,\n        cast(campaign_id as TEXT) as campaign_id,\n        clicks,\n        cost,\n        date as date_day,\n        impressions\n\n        \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__advertised_product_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:03.138212Z", "completed_at": "2024-08-04T03:34:03.728446Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:03.728862Z", "completed_at": "2024-08-04T03:34:03.728876Z"}], "thread_id": "Thread-1", "execution_time": 0.7732224464416504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    bidding_strategy\n    \n , \n    cast(null as timestamp) as \n    \n    creation_date\n    \n , \n    cast(null as date) as \n    \n    end_date\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    last_updated_date\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as integer) as \n    \n    portfolio_id\n    \n , \n    cast(null as integer) as \n    \n    profile_id\n    \n , \n    cast(null as TEXT) as \n    \n    serving_status\n    \n , \n    cast(null as date) as \n    \n    start_date\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as TEXT) as \n    \n    targeting_type\n    \n , \n    cast(null as float) as \n    \n    budget\n    \n , \n    cast(null as TEXT) as \n    \n    budget_type\n    \n , \n    cast(null as float) as \n    \n    effective_budget\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as TEXT) as campaign_id,\n        last_updated_date,\n        bidding_strategy,\n        creation_date,\n        end_date,\n        name as campaign_name,\n        cast(portfolio_id as TEXT) as portfolio_id,\n        cast(profile_id as TEXT) as profile_id,\n        serving_status,\n        start_date,\n        state,\n        targeting_type,\n        budget,\n        budget_type,\n        effective_budget,\n        row_number() over (partition by source_relation, id order by last_updated_date desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:03.913133Z", "completed_at": "2024-08-04T03:34:04.450276Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:04.450692Z", "completed_at": "2024-08-04T03:34:04.450706Z"}], "thread_id": "Thread-1", "execution_time": 0.7240514755249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__campaign_level_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_level_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    campaign_applicable_budget_rule_id\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_applicable_budget_rule_name\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_bidding_strategy\n    \n , \n    cast(null as float) as \n    \n    campaign_budget_amount\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_budget_currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_budget_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as float) as \n    \n    campaign_rule_based_budget_amount\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as float) as \n    \n    cost\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        campaign_applicable_budget_rule_id,\n        campaign_applicable_budget_rule_name,\n        campaign_bidding_strategy,\n        campaign_budget_amount,\n        campaign_budget_currency_code,\n        campaign_budget_type,\n        cast(campaign_id as TEXT) as campaign_id,\n        campaign_rule_based_budget_amount,\n        clicks,\n        cost,\n        date as date_day,\n        impressions\n\n        \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_level_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:04.638879Z", "completed_at": "2024-08-04T03:34:05.156104Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:05.156513Z", "completed_at": "2024-08-04T03:34:05.156526Z"}], "thread_id": "Thread-1", "execution_time": 0.6984992027282715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__keyword_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__keyword_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as float) as \n    \n    bid\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    creation_date\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    keyword_text\n    \n , \n    cast(null as timestamp) as \n    \n    last_updated_date\n    \n , \n    cast(null as TEXT) as \n    \n    match_type\n    \n , \n    cast(null as TEXT) as \n    \n    native_language_keyword\n    \n , \n    cast(null as TEXT) as \n    \n    serving_status\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as TEXT) as \n    \n    native_language_locale\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as TEXT) as keyword_id,\n        cast(ad_group_id as TEXT) as ad_group_id,\n        bid,\n        cast(campaign_id as TEXT) as campaign_id,\n        creation_date,\n        keyword_text,\n        last_updated_date,\n        match_type,\n        native_language_keyword,\n        serving_status,\n        state,\n        native_language_locale,\n        row_number() over (partition by source_relation, id order by last_updated_date desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__keyword_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:05.338845Z", "completed_at": "2024-08-04T03:34:05.865649Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:05.866058Z", "completed_at": "2024-08-04T03:34:05.866071Z"}], "thread_id": "Thread-1", "execution_time": 0.712296724319458, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__portfolio_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__portfolio_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as float) as \n    \n    budget_amount\n    \n , \n    cast(null as TEXT) as \n    \n    budget_currency_code\n    \n , \n    cast(null as date) as \n    \n    budget_end_date\n    \n , \n    cast(null as TEXT) as \n    \n    budget_policy\n    \n , \n    cast(null as date) as \n    \n    budget_start_date\n    \n , \n    cast(null as timestamp) as \n    \n    creation_date\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as boolean) as \n    \n    in_budget\n    \n , \n    cast(null as timestamp) as \n    \n    last_updated_date\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as integer) as \n    \n    profile_id\n    \n , \n    cast(null as TEXT) as \n    \n    serving_status\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as TEXT) as portfolio_id,\n        budget_amount,\n        budget_currency_code,\n        budget_end_date,\n        budget_policy,\n        budget_start_date,\n        creation_date,\n        in_budget,\n        last_updated_date,\n        name as portfolio_name,\n        cast(profile_id as TEXT) as profile_id,\n        serving_status,\n        state,\n        row_number() over (partition by source_relation, id order by last_updated_date desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__portfolio_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:06.052795Z", "completed_at": "2024-08-04T03:34:06.560239Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:06.560646Z", "completed_at": "2024-08-04T03:34:06.560659Z"}], "thread_id": "Thread-1", "execution_time": 0.6908891201019287, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__product_ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__product_ad_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    asin\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    creation_date\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    last_updated_date\n    \n , \n    cast(null as TEXT) as \n    \n    serving_status\n    \n , \n    cast(null as TEXT) as \n    \n    sku\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as TEXT) as ad_id,\n        cast(ad_group_id as TEXT) as ad_group_id,\n        asin,\n        cast(campaign_id as TEXT) as campaign_id,\n        creation_date,\n        last_updated_date,\n        serving_status,\n        sku,\n        state,\n        row_number() over (partition by source_relation, id order by last_updated_date desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__product_ad_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:06.745144Z", "completed_at": "2024-08-04T03:34:07.292155Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:07.292559Z", "completed_at": "2024-08-04T03:34:07.292572Z"}], "thread_id": "Thread-1", "execution_time": 1.9624526500701904, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__profile", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__profile_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    account_marketplace_string_id\n    \n , \n    cast(null as TEXT) as \n    \n    account_name\n    \n , \n    cast(null as TEXT) as \n    \n    account_sub_type\n    \n , \n    cast(null as TEXT) as \n    \n    account_type\n    \n , \n    cast(null as boolean) as \n    \n    account_valid_payment_method\n    \n , \n    cast(null as TEXT) as \n    \n    country_code\n    \n , \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as integer) as \n    \n    daily_budget\n    \n , \n    cast(null as TEXT) as \n    \n    timezone\n    \n , \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as TEXT) as profile_id,\n        cast(account_id as TEXT) as account_id,\n        account_marketplace_string_id,\n        account_name,\n        account_sub_type,\n        account_type,\n        account_valid_payment_method,\n        country_code,\n        currency_code,\n        daily_budget,\n        timezone,\n        _fivetran_deleted\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__profile"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:08.709571Z", "completed_at": "2024-08-04T03:34:09.208649Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:09.209055Z", "completed_at": "2024-08-04T03:34:09.209067Z"}], "thread_id": "Thread-1", "execution_time": 0.6796905994415283, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__search_term_ad_keyword_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__search_term_ad_keyword_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_keyword_status\n    \n , \n    cast(null as float) as \n    \n    campaign_budget_amount\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_budget_currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_budget_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as float) as \n    \n    cost\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as float) as \n    \n    keyword_bid\n    \n , \n    cast(null as integer) as \n    \n    keyword_id\n    \n , \n    cast(null as TEXT) as \n    \n    search_term\n    \n , \n    cast(null as TEXT) as \n    \n    targeting\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(ad_group_id as TEXT) as ad_group_id,\n        ad_keyword_status,\n        campaign_budget_amount,\n        campaign_budget_currency_code,\n        campaign_budget_type,\n        cast(campaign_id as TEXT) as campaign_id,\n        clicks,\n        cost,\n        date as date_day,\n        impressions,\n        keyword_bid,\n        cast(keyword_id as TEXT) as keyword_id,\n        search_term,\n        targeting\n\n        \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__search_term_ad_keyword_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:09.390454Z", "completed_at": "2024-08-04T03:34:10.059818Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:10.060221Z", "completed_at": "2024-08-04T03:34:10.060234Z"}], "thread_id": "Thread-1", "execution_time": 0.8596510887145996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads_source.stg_amazon_ads__targeting_keyword_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__targeting_keyword_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_keyword_status\n    \n , \n    cast(null as float) as \n    \n    campaign_budget_amount\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_budget_currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_budget_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as float) as \n    \n    cost\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as float) as \n    \n    keyword_bid\n    \n , \n    cast(null as integer) as \n    \n    keyword_id\n    \n , \n    cast(null as TEXT) as \n    \n    keyword_type\n    \n , \n    cast(null as TEXT) as \n    \n    match_type\n    \n , \n    cast(null as TEXT) as \n    \n    targeting\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(ad_group_id as TEXT) as ad_group_id,\n        ad_keyword_status,\n        campaign_budget_amount,\n        campaign_budget_currency_code,\n        campaign_budget_type,\n        cast(campaign_id as TEXT) as campaign_id,\n        clicks,\n        cost,\n        date as date_day,\n        impressions,\n        keyword_bid,\n        cast(keyword_id as TEXT) as keyword_id,\n        keyword_type,\n        match_type,\n        targeting\n\n        \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__targeting_keyword_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:10.251581Z", "completed_at": "2024-08-04T03:34:10.759823Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:10.760229Z", "completed_at": "2024-08-04T03:34:10.760243Z"}], "thread_id": "Thread-1", "execution_time": 0.6758840084075928, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_group_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    end_time\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    modification_time\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as integer) as \n    \n    organization_id\n    \n , \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        modification_time as modified_at,\n        organization_id,\n        campaign_id,\n        name as ad_group_name,\n        id as ad_group_id,\n        status as ad_group_status,\n        start_time as start_at,\n        end_time as end_at,\n        row_number() over (partition by source_relation, id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:10.929200Z", "completed_at": "2024-08-04T03:34:11.457203Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:11.457614Z", "completed_at": "2024-08-04T03:34:11.457626Z"}], "thread_id": "Thread-1", "execution_time": 1.4300434589385986, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_group_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    local_spend_amount\n    \n , \n    cast(null as TEXT) as \n    \n    local_spend_currency\n    \n , \n    cast(null as integer) as \n    \n    new_downloads\n    \n , \n    cast(null as integer) as \n    \n    redownloads\n    \n , \n    cast(null as integer) as \n    \n    taps\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,\n        date as date_day, \n        ad_group_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:12.360929Z", "completed_at": "2024-08-04T03:34:13.120468Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:13.120885Z", "completed_at": "2024-08-04T03:34:13.120898Z"}], "thread_id": "Thread-1", "execution_time": 0.9381237030029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    creation_time\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    modification_time\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as integer) as \n    \n    org_id\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        creation_time as created_at,\n        modification_time as modified_at,\n        org_id as organization_id,\n        campaign_id,\n        ad_group_id,\n        name as ad_name,\n        id as ad_id,\n        status as ad_status, \n        row_number() over (partition by source_relation, id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:13.300776Z", "completed_at": "2024-08-04T03:34:13.873430Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:13.873847Z", "completed_at": "2024-08-04T03:34:13.873861Z"}], "thread_id": "Thread-1", "execution_time": 0.739877462387085, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as integer) as \n    \n    ad_id\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    local_spend_amount\n    \n , \n    cast(null as TEXT) as \n    \n    local_spend_currency\n    \n , \n    cast(null as integer) as \n    \n    new_downloads\n    \n , \n    cast(null as integer) as \n    \n    redownloads\n    \n , \n    cast(null as integer) as \n    \n    taps\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date as date_day,\n        campaign_id,\n        ad_group_id,\n        ad_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:14.041964Z", "completed_at": "2024-08-04T03:34:14.694963Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:14.695414Z", "completed_at": "2024-08-04T03:34:14.695429Z"}], "thread_id": "Thread-1", "execution_time": 0.8321571350097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    end_time\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    modification_time\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as integer) as \n    \n    organization_id\n    \n , \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,\n        modification_time as modified_at,\n        organization_id,\n        name as campaign_name,\n        id as campaign_id,\n        status as campaign_status,\n        start_time as start_at,\n        end_time as end_at,\n        row_number() over (partition by source_relation, id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:14.875704Z", "completed_at": "2024-08-04T03:34:15.389457Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:15.389877Z", "completed_at": "2024-08-04T03:34:15.389890Z"}], "thread_id": "Thread-1", "execution_time": 0.6818578243255615, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    local_spend_amount\n    \n , \n    cast(null as TEXT) as \n    \n    local_spend_currency\n    \n , \n    cast(null as integer) as \n    \n    new_downloads\n    \n , \n    cast(null as integer) as \n    \n    redownloads\n    \n , \n    cast(null as integer) as \n    \n    taps\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date as date_day,\n        id as campaign_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:15.558761Z", "completed_at": "2024-08-04T03:34:16.083201Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:16.083660Z", "completed_at": "2024-08-04T03:34:16.083674Z"}], "thread_id": "Thread-1", "execution_time": 0.9355659484863281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__keyword_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    bid_amount\n    \n , \n    cast(null as TEXT) as \n    \n    bid_currency\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    match_type\n    \n , \n    cast(null as timestamp) as \n    \n    modification_time\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    text\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        modification_time as modified_at,\n        campaign_id,\n        ad_group_id,\n        id as keyword_id,\n        bid_amount, \n        bid_currency,\n        match_type,\n        status as keyword_status,\n        text as keyword_text,\n        row_number() over (partition by source_relation, id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:16.496086Z", "completed_at": "2024-08-04T03:34:17.005841Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:17.006240Z", "completed_at": "2024-08-04T03:34:17.006253Z"}], "thread_id": "Thread-1", "execution_time": 0.6823592185974121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__keyword_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    local_spend_amount\n    \n , \n    cast(null as TEXT) as \n    \n    local_spend_currency\n    \n , \n    cast(null as integer) as \n    \n    new_downloads\n    \n , \n    cast(null as integer) as \n    \n    redownloads\n    \n , \n    cast(null as integer) as \n    \n    taps\n    \n \n\n     \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date as date_day,\n        id as keyword_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:17.179660Z", "completed_at": "2024-08-04T03:34:17.738911Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:17.739311Z", "completed_at": "2024-08-04T03:34:17.739325Z"}], "thread_id": "Thread-1", "execution_time": 0.7417147159576416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__organization", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__organization_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    payment_model\n    \n , \n    cast(null as TEXT) as \n    \n    time_zone\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as organization_id,\n        currency,\n        payment_model,\n        name as organization_name,\n        time_zone\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__organization"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:17.923016Z", "completed_at": "2024-08-04T03:34:18.423194Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:18.423643Z", "completed_at": "2024-08-04T03:34:18.423655Z"}], "thread_id": "Thread-1", "execution_time": 0.8056552410125732, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads_source.stg_apple_search_ads__search_term_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as boolean) as \n    \n    ad_group_deleted\n    \n , \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_name\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    bid_amount_amount\n    \n , \n    cast(null as TEXT) as \n    \n    bid_amount_currency\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as boolean) as \n    \n    deleted\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    keyword\n    \n , \n    cast(null as TEXT) as \n    \n    keyword_display_status\n    \n , \n    cast(null as integer) as \n    \n    keyword_id\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    local_spend_amount\n    \n , \n    cast(null as TEXT) as \n    \n    local_spend_currency\n    \n , \n    cast(null as TEXT) as \n    \n    match_type\n    \n , \n    cast(null as integer) as \n    \n    new_downloads\n    \n , \n    cast(null as integer) as \n    \n    redownloads\n    \n , \n    cast(null as TEXT) as \n    \n    search_term_source\n    \n , \n    cast(null as TEXT) as \n    \n    search_term_text\n    \n , \n    cast(null as integer) as \n    \n    taps\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date as date_day,\n        _fivetran_id,\n        campaign_id,\n        ad_group_id,\n        ad_group_name,\n        bid_amount_amount as bid_amount,\n        bid_amount_currency as bid_currency,\n        keyword as keyword_text,\n        keyword_display_status,\n        keyword_id,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        match_type,\n        search_term_source,\n        search_term_text,\n        impressions,\n        taps,\n        new_downloads,\n        redownloads\n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__search_term_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:18.730032Z", "completed_at": "2024-08-04T03:34:19.260215Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:19.260623Z", "completed_at": "2024-08-04T03:34:19.260636Z"}], "thread_id": "Thread-1", "execution_time": 0.7126820087432861, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    account_status\n    \n , \n    cast(null as TEXT) as \n    \n    business_country_code\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as TEXT) as \n    \n    timezone_name\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as bigint) as account_id,\n        _fivetran_synced,\n        name as account_name,\n        account_status,\n        business_country_code,\n        created_time as created_at,\n        currency,\n        timezone_name,\n        case when id is null and _fivetran_synced is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by _fivetran_synced desc) end = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:19.444362Z", "completed_at": "2024-08-04T03:34:19.980463Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:19.980883Z", "completed_at": "2024-08-04T03:34:19.980897Z"}], "thread_id": "Thread-1", "execution_time": 0.7120010852813721, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    updated_time\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    ad_set_id\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    creative_id\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        cast(id as bigint) as ad_id,\n        name as ad_name,\n        cast(account_id as bigint) as account_id,\n        cast(ad_set_id as bigint) as ad_set_id,   \n        cast(campaign_id as bigint) as campaign_id,\n        cast(creative_id as bigint) as creative_id,\n        case when id is null and updated_time is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by updated_time desc) end = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:20.158117Z", "completed_at": "2024-08-04T03:34:20.696692Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:20.697090Z", "completed_at": "2024-08-04T03:34:20.697103Z"}], "thread_id": "Thread-1", "execution_time": 0.7215044498443604, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_set_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    updated_time\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as timestamp) as \n    \n    end_time\n    \n , \n    cast(null as TEXT) as \n    \n    bid_strategy\n    \n , \n    cast(null as integer) as \n    \n    daily_budget\n    \n , \n    cast(null as integer) as \n    \n    budget_remaining\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        cast(id as bigint) as ad_set_id,\n        name as ad_set_name,\n        cast(account_id as bigint) as account_id,\n        cast(campaign_id as bigint) as campaign_id,\n        start_time as start_at,\n        end_time as end_at,\n        bid_strategy,\n        daily_budget,\n        budget_remaining,\n        status,\n        case when id is null and updated_time is null\n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by updated_time desc) end = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:20.880881Z", "completed_at": "2024-08-04T03:34:21.510719Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:21.511117Z", "completed_at": "2024-08-04T03:34:21.511129Z"}], "thread_id": "Thread-1", "execution_time": 0.8121011257171631, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    ad_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_name\n    \n , \n    cast(null as TEXT) as \n    \n    adset_name\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as integer) as \n    \n    inline_link_clicks\n    \n , \n    cast(null as float) as \n    \n    spend\n    \n , \n    cast(null as integer) as \n    \n    reach\n    \n , \n    cast(null as float) as \n    \n    frequency\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(ad_id as bigint) as ad_id,\n        ad_name,\n        adset_name as ad_set_name,\n        date as date_day,\n        cast(account_id as bigint) as account_id,\n        impressions,\n        coalesce(inline_link_clicks,0) as clicks,\n        spend\n\n        \n                , reach\n            \n                , frequency\n            \n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:21.694684Z", "completed_at": "2024-08-04T03:34:22.212150Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:22.212548Z", "completed_at": "2024-08-04T03:34:22.212562Z"}], "thread_id": "Thread-1", "execution_time": 0.6951141357421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    updated_time\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as timestamp) as \n    \n    stop_time\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as integer) as \n    \n    daily_budget\n    \n , \n    cast(null as integer) as \n    \n    lifetime_budget\n    \n , \n    cast(null as float) as \n    \n    budget_remaining\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        created_time as created_at,\n        cast(account_id as bigint) as account_id,\n        cast(id as bigint) as campaign_id,\n        name as campaign_name,\n        start_time as start_at,\n        stop_time as end_at,\n        status,\n        daily_budget,\n        lifetime_budget,\n        budget_remaining,\n        case when id is null and updated_time is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by updated_time desc) end = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:22.391063Z", "completed_at": "2024-08-04T03:34:22.911918Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:22.912320Z", "completed_at": "2024-08-04T03:34:22.912332Z"}], "thread_id": "Thread-1", "execution_time": 0.7033402919769287, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__creative_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    page_link\n    \n , \n    cast(null as TEXT) as \n    \n    template_page_link\n    \n , \n    cast(null as TEXT) as \n    \n    url_tags\n    \n , \n    cast(null as TEXT) as \n    \n    asset_feed_spec_link_urls\n    \n , \n    cast(null as TEXT) as \n    \n    object_story_link_data_child_attachments\n    \n , \n    cast(null as TEXT) as \n    \n    object_story_link_data_caption\n    \n , \n    cast(null as TEXT) as \n    \n    object_story_link_data_description\n    \n , \n    cast(null as TEXT) as \n    \n    object_story_link_data_link\n    \n , \n    cast(null as TEXT) as \n    \n    object_story_link_data_message\n    \n , \n    cast(null as TEXT) as \n    \n    template_app_link_spec_android\n    \n , \n    cast(null as TEXT) as \n    \n    template_app_link_spec_ios\n    \n , \n    cast(null as TEXT) as \n    \n    template_app_link_spec_ipad\n    \n , \n    cast(null as TEXT) as \n    \n    template_app_link_spec_iphone\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        _fivetran_id,\n        _fivetran_synced,\n        cast(id as bigint) as creative_id,\n        cast(account_id as bigint) as account_id,\n        name as creative_name,\n        page_link,\n        template_page_link,\n        url_tags,\n        asset_feed_spec_link_urls,\n        object_story_link_data_child_attachments,\n        object_story_link_data_caption, \n        object_story_link_data_description, \n        object_story_link_data_link, \n        object_story_link_data_message,\n        template_app_link_spec_ios,\n        template_app_link_spec_ipad,\n        template_app_link_spec_android,\n        template_app_link_spec_iphone,\n        case when id is null and _fivetran_synced is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by _fivetran_synced desc) end = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:23.096311Z", "completed_at": "2024-08-04T03:34:23.794652Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:23.795055Z", "completed_at": "2024-08-04T03:34:23.795069Z"}], "thread_id": "Thread-1", "execution_time": 0.8665294647216797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_google_ads_source.stg_google_ads__account_history_tmp\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as boolean) as \n    \n    auto_tagging_enabled\n    \n , \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    descriptive_name\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    time_zone\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n , \n    cast(null as boolean) as \n    \n    _fivetran_active\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as account_id,\n        updated_at,\n        currency_code,\n        auto_tagging_enabled,\n        time_zone,\n        descriptive_name as account_name,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__account_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:23.964328Z", "completed_at": "2024-08-04T03:34:24.514995Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:24.515424Z", "completed_at": "2024-08-04T03:34:24.515437Z"}], "thread_id": "Thread-1", "execution_time": 0.737130880355835, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__account_stats", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_google_ads_source.stg_google_ads__account_stats_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    ad_network_type\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as integer) as \n    \n    cost_micros\n    \n , \n    cast(null as integer) as \n    \n    customer_id\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    device\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as integer) as \n    \n    conversions\n    \n , \n    cast(null as integer) as \n    \n    conversions_value\n    \n , \n    cast(null as integer) as \n    \n    view_through_conversions\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        customer_id as account_id, \n        date as date_day,\n        ad_network_type,\n        device,\n        coalesce(clicks, 0) as clicks, \n        coalesce(cost_micros, 0) / 1000000.0 as spend, \n        coalesce(impressions, 0) as impressions,\n        coalesce(conversions, 0) as conversions,\n        coalesce(conversions_value, 0) as conversions_value,\n        coalesce(view_through_conversions, 0) as view_through_conversions\n        \n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__account_stats"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:24.702966Z", "completed_at": "2024-08-04T03:34:25.343994Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:25.344388Z", "completed_at": "2024-08-04T03:34:25.344401Z"}], "thread_id": "Thread-1", "execution_time": 0.8122150897979736, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_criterion_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_criterion_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as integer) as \n    \n    base_campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    keyword_match_type\n    \n , \n    cast(null as TEXT) as \n    \n    keyword_text\n    \n , \n    cast(null as boolean) as \n    \n    _fivetran_active\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as criterion_id,\n        cast(ad_group_id as TEXT) as ad_group_id,\n        base_campaign_id,\n        updated_at,\n        type,\n        status,\n        keyword_match_type,\n        keyword_text,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_criterion_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:25.516611Z", "completed_at": "2024-08-04T03:34:26.357067Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:26.357462Z", "completed_at": "2024-08-04T03:34:26.357476Z"}], "thread_id": "Thread-1", "execution_time": 1.0299875736236572, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_history_tmp\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_name\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n , \n    cast(null as boolean) as \n    \n    _fivetran_active\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as TEXT) as ad_group_id,\n        updated_at,\n        type as ad_group_type, \n        campaign_id, \n        campaign_name, \n        name as ad_group_name, \n        status as ad_group_status,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:26.548467Z", "completed_at": "2024-08-04T03:34:27.044205Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:27.044613Z", "completed_at": "2024-08-04T03:34:27.044626Z"}], "thread_id": "Thread-1", "execution_time": 0.6734724044799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_stats", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_stats_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    ad_network_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as integer) as \n    \n    cost_micros\n    \n , \n    cast(null as integer) as \n    \n    customer_id\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    device\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as integer) as \n    \n    conversions\n    \n , \n    cast(null as integer) as \n    \n    conversions_value\n    \n , \n    cast(null as integer) as \n    \n    view_through_conversions\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,\n        customer_id as account_id, \n        date as date_day, \n        cast(id as TEXT) as ad_group_id, \n        campaign_id, \n        device,\n        ad_network_type,\n        coalesce(clicks, 0) as clicks, \n        coalesce(cost_micros, 0) / 1000000.0 as spend, \n        coalesce(impressions, 0) as impressions,\n        coalesce(conversions, 0) as conversions,\n        coalesce(conversions_value, 0) as conversions_value,\n        coalesce(view_through_conversions, 0) as view_through_conversions\n        \n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_stats"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:27.223398Z", "completed_at": "2024-08-04T03:34:27.754771Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:27.755191Z", "completed_at": "2024-08-04T03:34:27.755205Z"}], "thread_id": "Thread-1", "execution_time": 0.7117750644683838, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    display_url\n    \n , \n    cast(null as TEXT) as \n    \n    final_urls\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n , \n    cast(null as boolean) as \n    \n    _fivetran_active\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(ad_group_id as TEXT) as ad_group_id, \n        id as ad_id,\n        name as ad_name,\n        updated_at,\n        type as ad_type,\n        status as ad_status,\n        display_url,\n        final_urls as source_final_urls,\n        replace(replace(final_urls, '[', ''),']','') as final_urls,\n        row_number() over (partition by source_relation, id, ad_group_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n    where coalesce(_fivetran_active, true)\n),\n\nfinal_urls as (\n\n    select \n        *,\n        --Extract the first url within the list of urls provided within the final_urls field\n        \n\n    split_part(\n        final_urls,\n        ',',\n        1\n        )\n\n as final_url\n\n    from final\n\n),\n\nurl_fields as (\n    select \n        *,\n        \n\n    split_part(\n        final_url,\n        '?',\n        1\n        )\n\n as base_url,\n        \n    \n        try_cast(\n\n    split_part(\n        \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_host,\n        '/' || \n    \n        try_cast(\n\n    split_part(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        right(\n            \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n        )\n    end,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_path,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        final_url,\n        'utm_source=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_source,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        final_url,\n        'utm_medium=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_medium,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        final_url,\n        'utm_campaign=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_campaign,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        final_url,\n        'utm_content=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_content,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        final_url,\n        'utm_term=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_term\n    from final_urls\n)\n\nselect * \nfrom url_fields", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__ad_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:27.936758Z", "completed_at": "2024-08-04T03:34:28.889930Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:28.890333Z", "completed_at": "2024-08-04T03:34:28.890346Z"}], "thread_id": "Thread-1", "execution_time": 1.1694011688232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_stats", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_stats_tmp\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    ad_group\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_id\n    \n , \n    cast(null as integer) as \n    \n    ad_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_network_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as integer) as \n    \n    cost_micros\n    \n , \n    cast(null as integer) as \n    \n    customer_id\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    device\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    keyword_ad_group_criterion\n    \n , \n    cast(null as integer) as \n    \n    conversions\n    \n , \n    cast(null as integer) as \n    \n    conversions_value\n    \n , \n    cast(null as integer) as \n    \n    view_through_conversions\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        customer_id as account_id, \n        date as date_day, \n        \n        coalesce(cast(ad_group_id as TEXT), \n\n    split_part(\n        ad_group,\n        'adGroups/',\n        2\n        )\n\n) as ad_group_id,\n        \n        keyword_ad_group_criterion,\n        ad_network_type,\n        device,\n        ad_id, \n        campaign_id, \n        coalesce(clicks, 0) as clicks, \n        coalesce(cost_micros, 0) / 1000000.0 as spend, \n        coalesce(impressions, 0) as impressions,\n        coalesce(conversions, 0) as conversions,\n        coalesce(conversions_value, 0) as conversions_value,\n        coalesce(view_through_conversions, 0) as view_through_conversions\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect * from final", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__ad_stats"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:29.107949Z", "completed_at": "2024-08-04T03:34:29.632323Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:29.632730Z", "completed_at": "2024-08-04T03:34:29.632744Z"}], "thread_id": "Thread-1", "execution_time": 0.7035095691680908, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_history_tmp\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    advertising_channel_subtype\n    \n , \n    cast(null as TEXT) as \n    \n    advertising_channel_type\n    \n , \n    cast(null as integer) as \n    \n    customer_id\n    \n , \n    cast(null as TEXT) as \n    \n    end_date\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    serving_status\n    \n , \n    cast(null as TEXT) as \n    \n    start_date\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    tracking_url_template\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n , \n    cast(null as boolean) as \n    \n    _fivetran_active\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as campaign_id, \n        updated_at,\n        name as campaign_name,\n        customer_id as account_id,\n        advertising_channel_type,\n        advertising_channel_subtype,\n        start_date,\n        end_date,\n        serving_status,\n        status,\n        tracking_url_template,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:29.813144Z", "completed_at": "2024-08-04T03:34:30.338806Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:30.339207Z", "completed_at": "2024-08-04T03:34:30.339220Z"}], "thread_id": "Thread-1", "execution_time": 0.7164804935455322, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__campaign_stats", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_stats_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    ad_network_type\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as integer) as \n    \n    cost_micros\n    \n , \n    cast(null as integer) as \n    \n    customer_id\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    device\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as integer) as \n    \n    conversions\n    \n , \n    cast(null as integer) as \n    \n    conversions_value\n    \n , \n    cast(null as integer) as \n    \n    view_through_conversions\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        customer_id as account_id, \n        date as date_day, \n        id as campaign_id, \n        ad_network_type,\n        device,\n        coalesce(clicks, 0) as clicks, \n        coalesce(cost_micros, 0) / 1000000.0 as spend, \n        coalesce(impressions, 0) as impressions,\n        coalesce(conversions, 0) as conversions,\n        coalesce(conversions_value, 0) as conversions_value,\n        coalesce(view_through_conversions, 0) as view_through_conversions\n        \n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_stats"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:30.531066Z", "completed_at": "2024-08-04T03:34:31.047341Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:31.047786Z", "completed_at": "2024-08-04T03:34:31.047805Z"}], "thread_id": "Thread-1", "execution_time": 0.6931068897247314, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__keyword_stats", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_google_ads_source.stg_google_ads__keyword_stats_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as integer) as \n    \n    ad_group_criterion_criterion_id\n    \n , \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_network_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as integer) as \n    \n    cost_micros\n    \n , \n    cast(null as integer) as \n    \n    customer_id\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    device\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as integer) as \n    \n    conversions\n    \n , \n    cast(null as integer) as \n    \n    conversions_value\n    \n , \n    cast(null as integer) as \n    \n    view_through_conversions\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        _fivetran_id as keyword_id,\n        customer_id as account_id, \n        date as date_day, \n        cast(ad_group_id as TEXT) as ad_group_id,\n        ad_group_criterion_criterion_id as criterion_id,\n        campaign_id, \n        coalesce(clicks, 0) as clicks, \n        coalesce(cost_micros, 0) / 1000000.0 as spend, \n        coalesce(impressions, 0) as impressions,\n        coalesce(conversions, 0) as conversions,\n        coalesce(conversions_value, 0) as conversions_value,\n        coalesce(view_through_conversions, 0) as view_through_conversions\n        \n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_google_ads_source.stg_google_ads__keyword_stats"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:31.226142Z", "completed_at": "2024-08-04T03:34:32.076780Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:32.077186Z", "completed_at": "2024-08-04T03:34:32.077199Z"}], "thread_id": "Thread-1", "execution_time": 1.0207078456878662, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__account_history_tmp\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    last_modified_time\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as TEXT) as \n    \n    version_tag\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as account_id,\n        name as account_name,\n        currency,\n        cast(version_tag as numeric) as version_tag,\n        status,\n        type,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        row_number() over (partition by source_relation, id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__account_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:32.248075Z", "completed_at": "2024-08-04T03:34:32.794596Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:32.794993Z", "completed_at": "2024-08-04T03:34:32.795006Z"}], "thread_id": "Thread-1", "execution_time": 0.744504451751709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_campaign_tmp\n),\n\nmacro as (\n\n    select\n        \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    cost_in_local_currency\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    cost_in_usd\n    \n , \n    cast(null as timestamp) as \n    \n    day\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    conversion_value_in_local_currency\n    \n , \n    cast(null as TEXT) as \n    \n    external_website_conversions\n    \n , \n    cast(null as TEXT) as \n    \n    one_click_leads\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfields as (\n    \n    select \n        source_relation,\n        date_trunc('day', day) as date_day,\n        campaign_id,\n        clicks,\n        impressions,\n        \n        cost_in_usd as cost,\n        \n\n        coalesce(cast(conversion_value_in_local_currency as float), 0) as conversion_value_in_local_currency\n\n        \n            , coalesce(cast(external_website_conversions as bigint), 0) as external_website_conversions\n        \n            , coalesce(cast(one_click_leads as bigint), 0) as one_click_leads\n        \n\n        \n\n\n\n\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_campaign"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:32.994058Z", "completed_at": "2024-08-04T03:34:33.530723Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:33.531125Z", "completed_at": "2024-08-04T03:34:33.531137Z"}], "thread_id": "Thread-1", "execution_time": 0.7266273498535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_creative_tmp\n\n), macro as (\n\n    select\n        \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    cost_in_local_currency\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    cost_in_usd\n    \n , \n    cast(null as integer) as \n    \n    creative_id\n    \n , \n    cast(null as timestamp) as \n    \n    day\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    conversion_value_in_local_currency\n    \n , \n    cast(null as TEXT) as \n    \n    external_website_conversions\n    \n , \n    cast(null as TEXT) as \n    \n    one_click_leads\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select\n        source_relation,\n        date_trunc('day', day) as date_day,\n        creative_id,\n        clicks, \n        impressions,\n        \n        cost_in_usd as cost,\n        \n\n        coalesce(cast(conversion_value_in_local_currency as float), 0) as conversion_value_in_local_currency\n\n        \n            , coalesce(cast(external_website_conversions as bigint), 0) as external_website_conversions\n        \n            , coalesce(cast(one_click_leads as bigint), 0) as one_click_leads\n        \n\n        \n\n\n\n\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_creative"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:33.722517Z", "completed_at": "2024-08-04T03:34:34.536157Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:34.536564Z", "completed_at": "2024-08-04T03:34:34.536578Z"}], "thread_id": "Thread-1", "execution_time": 1.0241131782531738, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_group_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_group_history_tmp\n\n), macro as (\n\n    select\n        \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as boolean) as \n    \n    backfilled\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    last_modified_time\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_end\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_start\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as campaign_group_id,\n        name as campaign_group_name,\n        account_id,\n        status,\n        backfilled as is_backfilled,\n        cast(run_schedule_start as timestamp) as run_schedule_start_at,\n        cast(run_schedule_end as timestamp) as run_schedule_end_at,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        row_number() over (partition by source_relation, id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_group_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:34.748360Z", "completed_at": "2024-08-04T03:34:35.288355Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:35.288761Z", "completed_at": "2024-08-04T03:34:35.288774Z"}], "thread_id": "Thread-1", "execution_time": 0.7265782356262207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_history_tmp\n\n), macro as (\n\n    select \n        \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as boolean) as \n    \n    audience_expansion_enabled\n    \n , \n    cast(null as integer) as \n    \n    campaign_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    cost_type\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as TEXT) as \n    \n    creative_selection\n    \n , \n    cast(null as float) as \n    \n    daily_budget_amount\n    \n , \n    cast(null as TEXT) as \n    \n    daily_budget_currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    format\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    last_modified_time\n    \n , \n    cast(null as TEXT) as \n    \n    locale_country\n    \n , \n    cast(null as TEXT) as \n    \n    locale_language\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    objective_type\n    \n , \n    cast(null as boolean) as \n    \n    offsite_delivery_enabled\n    \n , \n    cast(null as TEXT) as \n    \n    optimization_target_type\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_end\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_start\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as float) as \n    \n    unit_cost_amount\n    \n , \n    cast(null as TEXT) as \n    \n    unit_cost_currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    version_tag\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as campaign_id,\n        name as campaign_name,\n        cast(version_tag as numeric) as version_tag,\n        campaign_group_id,\n        account_id,\n        status,\n        type,\n        cost_type,\n        creative_selection,\n        daily_budget_amount,\n        daily_budget_currency_code,\n        unit_cost_amount,\n        unit_cost_currency_code,\n        format,\n        locale_country,\n        locale_language,\n        objective_type,\n        optimization_target_type,\n        audience_expansion_enabled as is_audience_expansion_enabled,\n        offsite_delivery_enabled as is_offsite_delivery_enabled,\n        cast(run_schedule_start as timestamp) as run_schedule_start_at,\n        cast(run_schedule_end as timestamp) as run_schedule_end_at,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        row_number() over (partition by source_relation, id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:35.476566Z", "completed_at": "2024-08-04T03:34:36.214929Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:36.215335Z", "completed_at": "2024-08-04T03:34:36.215347Z"}], "thread_id": "Thread-1", "execution_time": 0.9264552593231201, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__creative_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__creative_history_tmp\n\n), macro as (\n\n    select \n        \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as TEXT) as \n    \n    click_uri\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as timestamp) as \n    \n    last_modified_time\n    \n , \n    cast(null as timestamp) as \n    \n    last_modified_at\n    \n , \n    cast(null as TEXT) as \n    \n    intended_status\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select\n        source_relation,\n        id as creative_id,\n        campaign_id,\n        coalesce(status, intended_status) as status,\n        click_uri,\n        cast(coalesce(last_modified_time, last_modified_at) as timestamp) as last_modified_at,\n        cast(coalesce(created_time, created_at) as timestamp) as created_at,\n        row_number() over (partition by source_relation, id order by coalesce(last_modified_time, last_modified_at) desc) = 1 as is_latest_version\n\n    from macro\n\n), url_fields as (\n\n    select \n        *,\n        \n\n    split_part(\n        click_uri,\n        '?',\n        1\n        )\n\n as base_url,\n        \n    \n        try_cast(\n\n    split_part(\n        \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_host,\n        '/' || \n    \n        try_cast(\n\n    split_part(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        right(\n            \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n        )\n    end,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_path,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        click_uri,\n        'utm_source=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_source,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        click_uri,\n        'utm_medium=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_medium,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        click_uri,\n        'utm_campaign=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_campaign,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        click_uri,\n        'utm_content=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_content,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        click_uri,\n        'utm_term=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_term\n    \n    from fields\n)\n\nselect *\nfrom url_fields", "relation_name": "TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__creative_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:36.404358Z", "completed_at": "2024-08-04T03:34:36.948579Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:36.948988Z", "completed_at": "2024-08-04T03:34:36.949003Z"}], "thread_id": "Thread-1", "execution_time": 0.7306332588195801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__account_daily_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_daily_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_distribution\n    \n , \n    cast(null as TEXT) as \n    \n    bid_match_type\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    delivered_match_type\n    \n , \n    cast(null as TEXT) as \n    \n    device_os\n    \n , \n    cast(null as TEXT) as \n    \n    device_type\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    network\n    \n , \n    cast(null as float) as \n    \n    spend\n    \n , \n    cast(null as TEXT) as \n    \n    top_vs_other\n    \n \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date as date_day,\n        account_id,\n        device_os,\n        device_type,\n        network,\n        currency_code, \n        ad_distribution,\n        bid_match_type,\n        delivered_match_type,\n        top_vs_other,\n        clicks, \n        impressions,\n        spend\n        \n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_daily_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:37.136611Z", "completed_at": "2024-08-04T03:34:37.678504Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:37.678915Z", "completed_at": "2024-08-04T03:34:37.678929Z"}], "thread_id": "Thread-1", "execution_time": 0.7255582809448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as timestamp) as \n    \n    last_modified_time\n    \n , \n    cast(null as TEXT) as \n    \n    time_zone\n    \n , \n    cast(null as TEXT) as \n    \n    currency_code\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as account_id,\n        name as account_name,\n        last_modified_time as modified_at,\n        time_zone,\n        currency_code,\n        row_number() over (partition by source_relation, id order by last_modified_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:37.863637Z", "completed_at": "2024-08-04T03:34:38.383323Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:38.383773Z", "completed_at": "2024-08-04T03:34:38.383785Z"}], "thread_id": "Thread-1", "execution_time": 0.6973910331726074, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__ad_daily_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_daily_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_distribution\n    \n , \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as integer) as \n    \n    ad_id\n    \n , \n    cast(null as TEXT) as \n    \n    bid_match_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    delivered_match_type\n    \n , \n    cast(null as TEXT) as \n    \n    device_os\n    \n , \n    cast(null as TEXT) as \n    \n    device_type\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    language\n    \n , \n    cast(null as TEXT) as \n    \n    network\n    \n , \n    cast(null as float) as \n    \n    spend\n    \n , \n    cast(null as TEXT) as \n    \n    top_vs_other\n    \n \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date as date_day,\n        account_id,\n        campaign_id,\n        ad_group_id,\n        ad_id,\n        currency_code,\n        device_os,\n        device_type,\n        network,\n        language,\n        ad_distribution,\n        bid_match_type,\n        delivered_match_type,\n        top_vs_other,\n        clicks,\n        impressions,\n        spend\n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_daily_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:38.562346Z", "completed_at": "2024-08-04T03:34:39.088680Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:39.089092Z", "completed_at": "2024-08-04T03:34:39.089105Z"}], "thread_id": "Thread-1", "execution_time": 0.703681468963623, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__ad_group_daily_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_daily_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_distribution\n    \n , \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    bid_match_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    delivered_match_type\n    \n , \n    cast(null as TEXT) as \n    \n    device_os\n    \n , \n    cast(null as TEXT) as \n    \n    device_type\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    language\n    \n , \n    cast(null as TEXT) as \n    \n    network\n    \n , \n    cast(null as float) as \n    \n    spend\n    \n , \n    cast(null as TEXT) as \n    \n    top_vs_other\n    \n \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date as date_day,\n        account_id,\n        campaign_id,\n        ad_group_id,\n        currency_code,\n        device_os,\n        device_type,\n        network,\n        language,\n        ad_distribution,\n        bid_match_type,\n        delivered_match_type,\n        top_vs_other,\n        clicks,\n        impressions,\n        spend\n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_daily_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:39.267309Z", "completed_at": "2024-08-04T03:34:39.748728Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:39.749137Z", "completed_at": "2024-08-04T03:34:39.749151Z"}], "thread_id": "Thread-1", "execution_time": 0.6734628677368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__ad_group_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    modified_time\n    \n , \n    cast(null as date) as \n    \n    start_date\n    \n , \n    cast(null as date) as \n    \n    end_date\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as ad_group_id,\n        name as ad_group_name,\n        campaign_id,\n        modified_time as modified_at,\n        start_date,\n        end_date,\n        status,\n        row_number() over (partition by source_relation, id order by modified_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:39.942323Z", "completed_at": "2024-08-04T03:34:40.435968Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:40.436359Z", "completed_at": "2024-08-04T03:34:40.436371Z"}], "thread_id": "Thread-1", "execution_time": 0.6858298778533936, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    title_part_1\n    \n , \n    cast(null as TEXT) as \n    \n    final_url\n    \n , \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as timestamp) as \n    \n    modified_time\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as ad_id,\n        title_part_1 as ad_name,\n        final_url,\n        ad_group_id,\n        modified_time as modified_at,\n        status,\n        type,\n        row_number() over (partition by source_relation, id order by modified_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:40.630029Z", "completed_at": "2024-08-04T03:34:41.133087Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:41.133491Z", "completed_at": "2024-08-04T03:34:41.133504Z"}], "thread_id": "Thread-1", "execution_time": 0.6731884479522705, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__campaign_daily_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_daily_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_distribution\n    \n , \n    cast(null as TEXT) as \n    \n    bid_match_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    delivered_match_type\n    \n , \n    cast(null as TEXT) as \n    \n    device_os\n    \n , \n    cast(null as TEXT) as \n    \n    device_type\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    network\n    \n , \n    cast(null as float) as \n    \n    spend\n    \n , \n    cast(null as TEXT) as \n    \n    top_vs_other\n    \n , \n    cast(null as TEXT) as \n    \n    budget_association_status\n    \n , \n    cast(null as TEXT) as \n    \n    budget_name\n    \n , \n    cast(null as TEXT) as \n    \n    budget_status\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date as date_day,\n        account_id,\n        campaign_id,\n        currency_code,\n        device_os,\n        device_type,\n        network,\n        ad_distribution,\n        bid_match_type,\n        delivered_match_type,\n        top_vs_other,\n        budget_association_status,\n        budget_name,\n        budget_status,\n        clicks,\n        impressions,\n        spend\n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_daily_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:41.304828Z", "completed_at": "2024-08-04T03:34:41.795977Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:41.796376Z", "completed_at": "2024-08-04T03:34:41.796389Z"}], "thread_id": "Thread-1", "execution_time": 0.6686971187591553, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as timestamp) as \n    \n    modified_time\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as TEXT) as \n    \n    time_zone\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as campaign_id,\n        name as campaign_name,\n        account_id,\n        modified_time as modified_at,\n        type,\n        time_zone,\n        status,\n        row_number() over (partition by source_relation, id order by modified_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:41.975051Z", "completed_at": "2024-08-04T03:34:42.455416Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:42.455834Z", "completed_at": "2024-08-04T03:34:42.455846Z"}], "thread_id": "Thread-1", "execution_time": 0.6459701061248779, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__keyword_daily_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_daily_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_distribution\n    \n , \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as integer) as \n    \n    ad_id\n    \n , \n    cast(null as TEXT) as \n    \n    bid_match_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    delivered_match_type\n    \n , \n    cast(null as TEXT) as \n    \n    device_os\n    \n , \n    cast(null as TEXT) as \n    \n    device_type\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as integer) as \n    \n    keyword_id\n    \n , \n    cast(null as TEXT) as \n    \n    language\n    \n , \n    cast(null as TEXT) as \n    \n    network\n    \n , \n    cast(null as float) as \n    \n    spend\n    \n , \n    cast(null as TEXT) as \n    \n    top_vs_other\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date as date_day,\n        account_id,\n        campaign_id,\n        ad_group_id,\n        ad_id,\n        keyword_id,\n        currency_code,\n        device_os,\n        device_type,\n        network,\n        language,\n        ad_distribution,\n        bid_match_type,\n        delivered_match_type,\n        top_vs_other,\n        clicks,\n        impressions,\n        spend\n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_daily_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:42.622334Z", "completed_at": "2024-08-04T03:34:43.160826Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:43.161227Z", "completed_at": "2024-08-04T03:34:43.161240Z"}], "thread_id": "Thread-1", "execution_time": 0.7203669548034668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__keyword_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as timestamp) as \n    \n    modified_time\n    \n , \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    match_type\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as keyword_id,\n        name as keyword_name,\n        modified_time as modified_at,\n        ad_group_id,\n        match_type,\n        status,\n        row_number() over (partition by source_relation, id order by modified_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:43.344159Z", "completed_at": "2024-08-04T03:34:43.885051Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:43.885458Z", "completed_at": "2024-08-04T03:34:43.885472Z"}], "thread_id": "Thread-1", "execution_time": 0.7275571823120117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads_source.stg_microsoft_ads__search_daily_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__search_daily_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    ad_group_id\n    \n , \n    cast(null as integer) as \n    \n    ad_id\n    \n , \n    cast(null as TEXT) as \n    \n    bid_match_type\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    delivered_match_type\n    \n , \n    cast(null as TEXT) as \n    \n    device_os\n    \n , \n    cast(null as TEXT) as \n    \n    device_type\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as integer) as \n    \n    keyword_id\n    \n , \n    cast(null as TEXT) as \n    \n    language\n    \n , \n    cast(null as TEXT) as \n    \n    network\n    \n , \n    cast(null as TEXT) as \n    \n    search_query\n    \n , \n    cast(null as float) as \n    \n    spend\n    \n , \n    cast(null as TEXT) as \n    \n    top_vs_other\n    \n \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date as date_day,\n        account_id,\n        campaign_id,\n        ad_group_id,\n        ad_id,\n        keyword_id,\n        search_query,\n        device_os,\n        device_type,\n        network,\n        language,\n        bid_match_type,\n        delivered_match_type,\n        top_vs_other,\n        clicks,\n        impressions,\n        spend\n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__search_daily_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:44.073233Z", "completed_at": "2024-08-04T03:34:44.749036Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:44.749434Z", "completed_at": "2024-08-04T03:34:44.749445Z"}], "thread_id": "Thread-1", "execution_time": 0.8537206649780273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__ad_group_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_history_tmp\n), \n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as timestamp) as \n    \n    end_time\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    pacing_delivery_type\n    \n , \n    cast(null as TEXT) as \n    \n    placement_group\n    \n , \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    summary_status\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,\n        id as ad_group_id,\n        name as ad_group_name,\n        status as ad_group_status,\n        ad_account_id as advertiser_id,\n        _fivetran_synced,\n        campaign_id,\n        created_time as created_at,\n        end_time,\n        pacing_delivery_type,\n        placement_group,\n        start_time,\n        summary_status,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:44.928505Z", "completed_at": "2024-08-04T03:34:45.584798Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:45.585195Z", "completed_at": "2024-08-04T03:34:45.585208Z"}], "thread_id": "Thread-1", "execution_time": 0.8414962291717529, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__ad_group_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_name\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_status\n    \n , \n    cast(null as TEXT) as \n    \n    advertiser_id\n    \n , \n    cast(null as integer) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clickthrough_1\n    \n , \n    cast(null as integer) as \n    \n    clickthrough_2\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impression_1\n    \n , \n    cast(null as integer) as \n    \n    impression_2\n    \n , \n    cast(null as integer) as \n    \n    spend_in_micro_dollar\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date_trunc('day', date) as date_day,\n        ad_group_id,\n        ad_group_name,\n        ad_group_status,\n        campaign_id,\n        advertiser_id,\n        coalesce(impression_1,0) + coalesce(impression_2,0) as impressions,\n        coalesce(clickthrough_1,0) + coalesce(clickthrough_2,0) as clicks,\n        spend_in_micro_dollar / 1000000.0 as spend\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:45.771677Z", "completed_at": "2024-08-04T03:34:46.292002Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:46.292404Z", "completed_at": "2024-08-04T03:34:46.292417Z"}], "thread_id": "Thread-1", "execution_time": 0.6995458602905273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__advertiser_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    owner_user_id\n    \n , \n    cast(null as TEXT) as \n    \n    owner_username\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as advertiser_permissions , \n    cast(null as timestamp) as \n    \n    updated_time\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as advertiser_id,\n        name as advertiser_name,\n        country,\n        created_time as created_at,\n        currency as currency_code,\n        owner_user_id,\n        owner_username,\n        advertiser_permissions, -- permissions was renamed in macro\n        updated_time as updated_at,\n        row_number() over (partition by source_relation, id order by updated_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:46.472889Z", "completed_at": "2024-08-04T03:34:47.104320Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:47.104723Z", "completed_at": "2024-08-04T03:34:47.104736Z"}], "thread_id": "Thread-1", "execution_time": 0.9955480098724365, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__advertiser_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    advertiser_id\n    \n , \n    cast(null as integer) as \n    \n    clickthrough_1\n    \n , \n    cast(null as integer) as \n    \n    clickthrough_2\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impression_1\n    \n , \n    cast(null as integer) as \n    \n    impression_2\n    \n , \n    cast(null as integer) as \n    \n    spend_in_micro_dollar\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date_trunc('day', date) as date_day,\n        advertiser_id,\n        coalesce(impression_1,0) + coalesce(impression_2,0) as impressions,\n        coalesce(clickthrough_1,0) + coalesce(clickthrough_2,0) as clicks,\n        spend_in_micro_dollar / 1000000.0 as spend\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:47.469835Z", "completed_at": "2024-08-04T03:34:48.055380Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:48.055801Z", "completed_at": "2024-08-04T03:34:48.055816Z"}], "thread_id": "Thread-1", "execution_time": 0.778240442276001, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_history_tmp\n), \n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as integer) as \n    \n    default_ad_group_budget_in_micro_currency\n    \n , \n    cast(null as boolean) as \n    \n    is_automated_campaign\n    \n , \n    cast(null as boolean) as \n    \n    is_campaign_budget_optimization\n    \n , \n    cast(null as boolean) as \n    \n    is_flexible_daily_budgets\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    advertiser_id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n), \n\nfinal as (\n\n    select\n        source_relation, \n        id as campaign_id,\n        name as campaign_name,\n        advertiser_id,\n        default_ad_group_budget_in_micro_currency,\n        is_automated_campaign,\n        is_campaign_budget_optimization,\n        is_flexible_daily_budgets,\n        status as campaign_status,\n        _fivetran_synced,\n        created_time as created_at,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:48.249711Z", "completed_at": "2024-08-04T03:34:48.761414Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:48.761824Z", "completed_at": "2024-08-04T03:34:48.761838Z"}], "thread_id": "Thread-1", "execution_time": 0.6917574405670166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    advertiser_id\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_name\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_status\n    \n , \n    cast(null as integer) as \n    \n    clickthrough_1\n    \n , \n    cast(null as integer) as \n    \n    clickthrough_2\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impression_1\n    \n , \n    cast(null as integer) as \n    \n    impression_2\n    \n , \n    cast(null as integer) as \n    \n    spend_in_micro_dollar\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date_trunc('day', date) as date_day,\n        campaign_id,\n        campaign_name,\n        campaign_status,\n        advertiser_id,\n        coalesce(impression_1,0) + coalesce(impression_2,0) as impressions,\n        coalesce(clickthrough_1,0) + coalesce(clickthrough_2,0) as clicks,\n        spend_in_micro_dollar / 1000000.0 as spend\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:48.943134Z", "completed_at": "2024-08-04T03:34:49.434238Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:49.434632Z", "completed_at": "2024-08-04T03:34:49.434645Z"}], "thread_id": "Thread-1", "execution_time": 0.6813147068023682, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__keyword_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    advertiser_id\n    \n , \n    cast(null as boolean) as \n    \n    archived\n    \n , \n    cast(null as integer) as \n    \n    bid\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    match_type\n    \n , \n    cast(null as TEXT) as \n    \n    parent_type\n    \n , \n    cast(null as TEXT) as \n    \n    value\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,\n        id as keyword_id,\n        value as keyword_value,\n        _fivetran_id,\n        _fivetran_synced,\n        ad_group_id,\n        advertiser_id,\n        archived,\n        bid,\n        campaign_id,\n        match_type,\n        parent_type,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:49.625713Z", "completed_at": "2024-08-04T03:34:50.116434Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:50.116837Z", "completed_at": "2024-08-04T03:34:50.116850Z"}], "thread_id": "Thread-1", "execution_time": 0.6915020942687988, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__keyword_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_name\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_status\n    \n , \n    cast(null as TEXT) as \n    \n    advertiser_id\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clickthrough_1\n    \n , \n    cast(null as integer) as \n    \n    clickthrough_2\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impression_1\n    \n , \n    cast(null as integer) as \n    \n    impression_2\n    \n , \n    cast(null as TEXT) as \n    \n    keyword_id\n    \n , \n    cast(null as TEXT) as \n    \n    pin_promotion_id\n    \n , \n    cast(null as integer) as \n    \n    spend_in_micro_dollar\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,\n        date_trunc('day', date) as date_day,\n        keyword_id,\n        pin_promotion_id,\n        ad_group_id,\n        ad_group_name,\n        ad_group_status,\n        campaign_id,\n        advertiser_id,\n        coalesce(impression_1,0) + coalesce(impression_2,0) as impressions,\n        coalesce(clickthrough_1,0) + coalesce(clickthrough_2,0) as clicks,\n        spend_in_micro_dollar / 1000000.0 as spend\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:50.318688Z", "completed_at": "2024-08-04T03:34:50.807698Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:50.808115Z", "completed_at": "2024-08-04T03:34:50.808128Z"}], "thread_id": "Thread-1", "execution_time": 0.6576964855194092, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__pin_promotion_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_history_tmp\n), \n\nfields as (\n\n    select\n\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    android_deep_link\n    \n , \n    cast(null as TEXT) as \n    \n    click_tracking_url\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as TEXT) as \n    \n    creative_type\n    \n , \n    cast(null as TEXT) as \n    \n    destination_url\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    ios_deep_link\n    \n , \n    cast(null as boolean) as \n    \n    is_pin_deleted\n    \n , \n    cast(null as boolean) as \n    \n    is_removable\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    pin_id\n    \n , \n    cast(null as TEXT) as \n    \n    review_status\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as timestamp) as \n    \n    updated_time\n    \n , \n    cast(null as TEXT) as \n    \n    view_tracking_url\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n), \n\nfinal as (\n\n    select\n        source_relation,\n        id as pin_promotion_id,\n        ad_account_id as advertiser_id,\n        ad_group_id,\n        created_time as created_at,\n        destination_url,\n        \n\n    split_part(\n        destination_url,\n        '?',\n        1\n        )\n\n as base_url,\n        \n    \n        try_cast(\n\n    split_part(\n        \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        destination_url,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_host,\n        '/' || \n    \n        try_cast(\n\n    split_part(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        destination_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        destination_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        destination_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        right(\n            \n\n    replace(\n        \n\n    replace(\n        destination_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        destination_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        destination_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        destination_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n        )\n    end,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_path,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        destination_url,\n        'utm_source=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_source,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        destination_url,\n        'utm_medium=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_medium,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        destination_url,\n        'utm_campaign=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_campaign,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        destination_url,\n        'utm_content=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_content,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        destination_url,\n        'utm_term=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_term,\n        name as pin_name,\n        pin_id,\n        status as pin_status,\n        creative_type,\n        _fivetran_synced,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:50.977840Z", "completed_at": "2024-08-04T03:34:51.522520Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:51.522921Z", "completed_at": "2024-08-04T03:34:51.522934Z"}], "thread_id": "Thread-1", "execution_time": 0.7356486320495605, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest_source.stg_pinterest_ads__pin_promotion_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_report_tmp\n), \n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    advertiser_id\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    clickthrough_1\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    clickthrough_2\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    impression_1\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    impression_2\n    \n , \n    cast(null as TEXT) as \n    \n    pin_promotion_id\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    spend_in_micro_dollar\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n), \n\nfinal as (\n\n    select\n        source_relation, \n        date_trunc('day', date) as date_day,\n        pin_promotion_id,\n        ad_group_id,\n        campaign_id,\n        advertiser_id,\n        coalesce(impression_1,0) + coalesce(impression_2,0) as impressions,\n        coalesce(clickthrough_1,0) + coalesce(clickthrough_2,0) as clicks,\n        spend_in_micro_dollar / 1000000.0 as spend\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:51.714910Z", "completed_at": "2024-08-04T03:34:52.223203Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:52.223671Z", "completed_at": "2024-08-04T03:34:52.223684Z"}], "thread_id": "Thread-1", "execution_time": 0.6780152320861816, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__account_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    region\n    \n , \n    cast(null as integer) as \n    \n    spend\n    \n , \n    cast(null as date) as date_day \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        account_id,\n        clicks,\n        date as date_day,\n        impressions,\n        region,\n        (spend/1000000) as spend\n        \n        \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:52.394362Z", "completed_at": "2024-08-04T03:34:52.912175Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:52.912570Z", "completed_at": "2024-08-04T03:34:52.912583Z"}], "thread_id": "Thread-1", "execution_time": 0.7004854679107666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__account", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    attribution_type\n    \n , \n    cast(null as TEXT) as \n    \n    click_attribution_window\n    \n , \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    time_zone_id\n    \n , \n    cast(null as TEXT) as \n    \n    view_attribution_window\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        attribution_type,\n        click_attribution_window,\n        cast(created_at as timestamp) as created_at,\n        currency,\n        id as account_id,\n        status,\n        time_zone_id,\n        view_attribution_window\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:53.096824Z", "completed_at": "2024-08-04T03:34:53.653242Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:53.653644Z", "completed_at": "2024-08-04T03:34:53.653658Z"}], "thread_id": "Thread-1", "execution_time": 0.7264039516448975, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__ad_group_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    region\n    \n , \n    cast(null as integer) as \n    \n    spend\n    \n , \n    cast(null as date) as date_day \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        account_id,\n        ad_group_id,\n        clicks,\n        date as date_day,\n        impressions,\n        region,\n        (spend/1000000) as spend\n        \n        \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:53.824918Z", "completed_at": "2024-08-04T03:34:54.356161Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:54.356565Z", "completed_at": "2024-08-04T03:34:54.356578Z"}], "thread_id": "Thread-1", "execution_time": 0.7361726760864258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__ad_group", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    bid_strategy\n    \n , \n    cast(null as integer) as \n    \n    bid_value\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as TEXT) as \n    \n    configured_status\n    \n , \n    cast(null as TEXT) as \n    \n    effective_status\n    \n , \n    cast(null as timestamp) as \n    \n    end_time\n    \n , \n    cast(null as boolean) as \n    \n    expand_targeting\n    \n , \n    cast(null as TEXT) as \n    \n    goal_type\n    \n , \n    cast(null as integer) as \n    \n    goal_value\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as boolean) as \n    \n    is_processing\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    optimization_strategy_type\n    \n , \n    cast(null as timestamp) as \n    \n    start_time\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        account_id,\n        bid_strategy,\n        bid_value,\n        campaign_id,\n        configured_status,\n        effective_status,\n        cast(end_time as timestamp) as end_time_at,\n        expand_targeting,\n        goal_type,\n        goal_value,\n        id as ad_group_id,\n        is_processing,\n        name as ad_group_name,\n        optimization_strategy_type,\n        cast(start_time as timestamp) as start_time_at\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:54.562628Z", "completed_at": "2024-08-04T03:34:55.075448Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:55.075855Z", "completed_at": "2024-08-04T03:34:55.075869Z"}], "thread_id": "Thread-1", "execution_time": 0.6875977516174316, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    region\n    \n , \n    cast(null as integer) as \n    \n    spend\n    \n , \n    cast(null as date) as date_day \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,\n        account_id,\n        ad_id,\n        clicks,\n        date as date_day,\n        impressions,\n        region,\n        (spend/1000000) as spend\n        \n        \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:55.251650Z", "completed_at": "2024-08-04T03:34:55.887826Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:55.888225Z", "completed_at": "2024-08-04T03:34:55.888238Z"}], "thread_id": "Thread-1", "execution_time": 0.8204271793365479, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__ad", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as TEXT) as \n    \n    click_url\n    \n , \n    cast(null as TEXT) as \n    \n    configured_status\n    \n , \n    cast(null as TEXT) as \n    \n    effective_status\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as boolean) as \n    \n    is_processing\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    post_id\n    \n , \n    cast(null as TEXT) as \n    \n    post_url\n    \n , \n    cast(null as TEXT) as \n    \n    rejection_reason\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,\n        account_id,\n        ad_group_id,\n        campaign_id,\n        click_url,\n        configured_status,\n        effective_status,\n        id as ad_id,\n        is_processing,\n        name as ad_name,\n        post_id,\n        post_url,\n        rejection_reason\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:56.073474Z", "completed_at": "2024-08-04T03:34:56.562827Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:56.563226Z", "completed_at": "2024-08-04T03:34:56.563239Z"}], "thread_id": "Thread-1", "execution_time": 0.6720161437988281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    region\n    \n , \n    cast(null as integer) as \n    \n    spend\n    \n , \n    cast(null as date) as date_day \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        account_id,\n        campaign_id,\n        clicks,\n        date as date_day,\n        impressions,\n        region,\n        (spend/1000000) as spend\n        \n        \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:56.746968Z", "completed_at": "2024-08-04T03:34:57.265146Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:57.265555Z", "completed_at": "2024-08-04T03:34:57.265568Z"}], "thread_id": "Thread-1", "execution_time": 0.6856000423431396, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads_source.stg_reddit_ads__campaign", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    configured_status\n    \n , \n    cast(null as TEXT) as \n    \n    effective_status\n    \n , \n    cast(null as TEXT) as \n    \n    funding_instrument_id\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as boolean) as \n    \n    is_processing\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    objective\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        account_id,\n        configured_status,\n        effective_status,\n        funding_instrument_id,\n        id as campaign_id,\n        is_processing,\n        name as campaign_name,\n        objective\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:57.434154Z", "completed_at": "2024-08-04T03:34:57.929575Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:57.929973Z", "completed_at": "2024-08-04T03:34:57.929985Z"}], "thread_id": "Thread-1", "execution_time": 0.6667420864105225, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    advertiser\n    \n , \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    timezone\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as ad_account_id,\n        name as ad_account_name,\n        cast (created_at as timestamp) as created_at,\n        advertiser, \n        currency,\n        timezone,\n        cast (_fivetran_synced as timestamp) as _fivetran_synced,\n        cast (updated_at as timestamp) as updated_at,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_account_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:58.102298Z", "completed_at": "2024-08-04T03:34:58.609159Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:58.609569Z", "completed_at": "2024-08-04T03:34:58.609583Z"}], "thread_id": "Thread-1", "execution_time": 0.671860933303833, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    ad_squad_id\n    \n , \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    cast(null as TEXT) as \n    \n    creative_id\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as ad_id,\n        name as ad_name,\n        cast (created_at as timestamp) as created_at,\n        ad_squad_id,\n        creative_id,\n        cast (_fivetran_synced as timestamp) as _fivetran_synced,\n        cast (updated_at as timestamp) as updated_at,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:58.776056Z", "completed_at": "2024-08-04T03:34:59.418008Z"}, {"name": "execute", "started_at": "2024-08-04T03:34:59.418407Z", "completed_at": "2024-08-04T03:34:59.418421Z"}], "thread_id": "Thread-1", "execution_time": 0.8279104232788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    ad_id\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    attachment_quartile_1\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    attachment_quartile_2\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    attachment_quartile_3\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    attachment_total_view_time_millis\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    attachment_view_completion\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    impressions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    quartile_1\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    quartile_2\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    quartile_3\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    saves\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    screen_time_millis\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    shares\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    spend\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    swipes\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_views\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    view_completion\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    view_time_millis\n    \n \n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        ad_id,\n        cast (date as timestamp) as date_hour,\n        attachment_quartile_1,\n        attachment_quartile_2,\n        attachment_quartile_3,\n        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,\n        attachment_view_completion,\n        quartile_1,\n        quartile_2,\n        quartile_3,\n        saves,\n        shares,\n        (screen_time_millis / 1000000.0) as screen_time,\n        video_views,\n        view_completion,\n        (view_time_millis / 1000000.0) as view_time,\n        impressions,\n        (spend / 1000000.0) as spend,\n        swipes\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:34:59.605201Z", "completed_at": "2024-08-04T03:35:00.248684Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:00.249098Z", "completed_at": "2024-08-04T03:35:00.249112Z"}], "thread_id": "Thread-1", "execution_time": 0.8330755233764648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as ad_squad_id,\n        name as ad_squad_name,\n        cast (created_at as timestamp) as created_at,\n        campaign_id,\n        cast (_fivetran_synced as timestamp) as _fivetran_synced,\n        cast (updated_at as timestamp) as updated_at,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:00.440308Z", "completed_at": "2024-08-04T03:35:01.048989Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:01.049383Z", "completed_at": "2024-08-04T03:35:01.049396Z"}], "thread_id": "Thread-1", "execution_time": 0.7840137481689453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    ad_squad_id\n    \n , \n    cast(null as integer) as \n    \n    attachment_quartile_1\n    \n , \n    cast(null as integer) as \n    \n    attachment_quartile_2\n    \n , \n    cast(null as integer) as \n    \n    attachment_quartile_3\n    \n , \n    cast(null as integer) as \n    \n    attachment_total_view_time_millis\n    \n , \n    cast(null as integer) as \n    \n    attachment_view_completion\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as integer) as \n    \n    quartile_1\n    \n , \n    cast(null as integer) as \n    \n    quartile_2\n    \n , \n    cast(null as integer) as \n    \n    quartile_3\n    \n , \n    cast(null as integer) as \n    \n    saves\n    \n , \n    cast(null as integer) as \n    \n    screen_time_millis\n    \n , \n    cast(null as integer) as \n    \n    shares\n    \n , \n    cast(null as integer) as \n    \n    spend\n    \n , \n    cast(null as integer) as \n    \n    swipes\n    \n , \n    cast(null as integer) as \n    \n    video_views\n    \n , \n    cast(null as integer) as \n    \n    view_completion\n    \n , \n    cast(null as integer) as \n    \n    view_time_millis\n    \n \n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        ad_squad_id,\n        cast (date as timestamp) as date_hour,\n        attachment_quartile_1,\n        attachment_quartile_2,\n        attachment_quartile_3,\n        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,\n        attachment_view_completion,\n        quartile_1,\n        quartile_2,\n        quartile_3,\n        saves,\n        shares,\n        (screen_time_millis / 1000000.0) as screen_time,\n        video_views,\n        view_completion,\n        (view_time_millis / 1000000.0) as view_time,\n        impressions,\n        (spend / 1000000.0) as spend,\n        swipes\n\n        \n\n\n\n\n    \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:01.225532Z", "completed_at": "2024-08-04T03:35:01.768610Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:01.769020Z", "completed_at": "2024-08-04T03:35:01.769033Z"}], "thread_id": "Thread-1", "execution_time": 0.7270948886871338, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    ad_account_id\n    \n , \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,\n        id as campaign_id,\n        ad_account_id,\n        cast (created_at as timestamp) as created_at,\n        name as campaign_name,\n        cast (_fivetran_synced as timestamp) as _fivetran_synced,\n        cast (updated_at as timestamp) as updated_at,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:01.954389Z", "completed_at": "2024-08-04T03:35:02.456435Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:02.456849Z", "completed_at": "2024-08-04T03:35:02.456863Z"}], "thread_id": "Thread-1", "execution_time": 0.685338020324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as integer) as \n    \n    attachment_quartile_1\n    \n , \n    cast(null as integer) as \n    \n    attachment_quartile_2\n    \n , \n    cast(null as integer) as \n    \n    attachment_quartile_3\n    \n , \n    cast(null as integer) as \n    \n    attachment_total_view_time_millis\n    \n , \n    cast(null as integer) as \n    \n    attachment_view_completion\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as integer) as \n    \n    quartile_1\n    \n , \n    cast(null as integer) as \n    \n    quartile_2\n    \n , \n    cast(null as integer) as \n    \n    quartile_3\n    \n , \n    cast(null as integer) as \n    \n    saves\n    \n , \n    cast(null as integer) as \n    \n    screen_time_millis\n    \n , \n    cast(null as integer) as \n    \n    shares\n    \n , \n    cast(null as integer) as \n    \n    spend\n    \n , \n    cast(null as integer) as \n    \n    swipes\n    \n , \n    cast(null as integer) as \n    \n    video_views\n    \n , \n    cast(null as integer) as \n    \n    view_completion\n    \n , \n    cast(null as integer) as \n    \n    view_time_millis\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        campaign_id,\n        cast (date as timestamp) as date_hour,\n        attachment_quartile_1,\n        attachment_quartile_2,\n        attachment_quartile_3,\n        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,\n        attachment_view_completion,\n        quartile_1,\n        quartile_2,\n        quartile_3,\n        saves,\n        shares,\n        (screen_time_millis / 1000000.0) as screen_time,\n        video_views,\n        view_completion,\n        (view_time_millis / 1000000.0) as view_time,\n        impressions,\n        (spend / 1000000.0) as spend,\n        swipes\n\n        \n\n\n\n\n    \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:02.641590Z", "completed_at": "2024-08-04T03:35:03.156805Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:03.157207Z", "completed_at": "2024-08-04T03:35:03.157221Z"}], "thread_id": "Thread-1", "execution_time": 0.6881790161132812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__creative_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_history_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    ad_account_id\n    \n , \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n , \n    cast(null as TEXT) as \n    \n    web_view_url\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as creative_id,\n        cast (created_at as timestamp) as created_at,\n        ad_account_id,\n        name as creative_name,\n        web_view_url as url,\n        cast (_fivetran_synced as timestamp) as _fivetran_synced,\n        cast (updated_at as timestamp) as updated_at,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) =1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:03.331218Z", "completed_at": "2024-08-04T03:35:04.000348Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:04.000753Z", "completed_at": "2024-08-04T03:35:04.000766Z"}], "thread_id": "Thread-1", "execution_time": 0.8475761413574219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    creative_id\n    \n , \n    cast(null as TEXT) as \n    \n    key\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n , \n    cast(null as TEXT) as \n    \n    value\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,  \n        creative_id,\n        key as param_key,\n        value as param_value,\n        cast (updated_at as timestamp) as updated_at,\n        row_number() over (partition by source_relation, creative_id, key order by updated_at desc) =1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:04.180430Z", "completed_at": "2024-08-04T03:35:04.705491Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:04.705908Z", "completed_at": "2024-08-04T03:35:04.705921Z"}], "thread_id": "Thread-1", "execution_time": 0.7103583812713623, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_group_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_history_tmp\n), \n\nfields as (\n\n    select\n        \n    cast(null as numeric(28,6)) as \n    \n    action_days\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    adgroup_id\n    \n , \n    cast(null as TEXT) as \n    \n    adgroup_name\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    advertiser_id\n    \n , \n    cast(null as TEXT) as \n    \n    audience_type\n    \n , \n    cast(null as float) as \n    \n    budget\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    campaign_id\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    category\n    \n , \n    cast(null as TEXT) as \n    \n    display_name\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    frequency\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    frequency_schedule\n    \n , \n    cast(null as TEXT) as \n    \n    gender\n    \n , \n    cast(null as TEXT) as \n    \n    landing_page_url\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n , \n    cast(null as TEXT) as \n    \n    interest_category_v_2\n    \n , \n    cast(null as TEXT) as \n    \n    action_categories\n    \n , \n    cast(null as TEXT) as \n    \n    age\n    \n , \n    cast(null as TEXT) as \n    \n    age_groups\n    \n , \n    cast(null as TEXT) as \n    \n    languages\n    \n \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n), \n\nfinal as (\n\n    select\n        source_relation,\n        adgroup_id as ad_group_id,\n        cast(updated_at as timestamp) as updated_at,\n        advertiser_id,\n        campaign_id,\n        action_days,\n        action_categories,\n        adgroup_name as ad_group_name,\n        coalesce(age_groups, age) as age_groups,\n        audience_type,\n        budget,\n        category,\n        display_name,\n        interest_category_v_2 as interest_category,\n        frequency,\n        frequency_schedule,\n        gender,\n        languages, \n        landing_page_url,\n        row_number() over (partition by source_relation, adgroup_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:04.892132Z", "completed_at": "2024-08-04T03:35:05.683508Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:05.683937Z", "completed_at": "2024-08-04T03:35:05.683950Z"}], "thread_id": "Thread-1", "execution_time": 1.0087063312530518, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_report_hourly_tmp\n), \n\nfields as (\n\n    select\n        \n    cast(null as numeric(28,6)) as \n    \n    adgroup_id\n    \n , \n    cast(null as float) as \n    \n    average_video_play\n    \n , \n    cast(null as float) as \n    \n    average_video_play_per_user\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    clicks\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    comments\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    conversion\n    \n , \n    cast(null as float) as \n    \n    conversion_rate\n    \n , \n    cast(null as float) as \n    \n    cost_per_conversion\n    \n , \n    cast(null as float) as \n    \n    cpc\n    \n , \n    cast(null as float) as \n    \n    cpm\n    \n , \n    cast(null as float) as \n    \n    ctr\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    follows\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    impressions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    likes\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    profile_visits\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    reach\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    shares\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    spend\n    \n , \n    cast(null as timestamp) as \n    \n    stat_time_hour\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_play_actions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_views_p_25\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_views_p_50\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_views_p_75\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_watched_2_s\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_watched_6_s\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n), \n\nfinal as (\n\n    select\n        source_relation,  \n        adgroup_id as ad_group_id,\n        cast(stat_time_hour as timestamp) as stat_time_hour, \n        cpc, \n        cpm, \n        ctr, \n        impressions, \n        clicks, \n        spend, \n        reach, \n        conversion, \n        cost_per_conversion, \n        conversion_rate, \n        likes, \n        comments, \n        shares, \n        profile_visits,\n        follows, \n        video_play_actions, \n        video_watched_2_s, \n        video_watched_6_s, \n        video_views_p_25, \n        video_views_p_50,\n        video_views_p_75,  \n        average_video_play, \n        average_video_play_per_user\n\n        \n\n\n\n\n\n    from fields\n) \n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_report_hourly"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:05.902328Z", "completed_at": "2024-08-04T03:35:06.399695Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:06.400106Z", "completed_at": "2024-08-04T03:35:06.400119Z"}], "thread_id": "Thread-1", "execution_time": 0.6916959285736084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_history_tmp\n), \n\nfields as (\n\n    select\n        \n    cast(null as numeric(28,6)) as \n    \n    ad_id\n    \n , \n    cast(null as TEXT) as \n    \n    ad_name\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    adgroup_id\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    advertiser_id\n    \n , \n    cast(null as TEXT) as \n    \n    call_to_action\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    campaign_id\n    \n , \n    cast(null as TEXT) as \n    \n    click_tracking_url\n    \n , \n    cast(null as TEXT) as \n    \n    impression_tracking_url\n    \n , \n    cast(null as TEXT) as \n    \n    landing_page_url\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n), \n\nfinal as (\n\n    select\n        source_relation,  \n        ad_id,\n        cast(updated_at as timestamp) as updated_at,\n        adgroup_id as ad_group_id,\n        advertiser_id,\n        campaign_id,\n        ad_name,\n        call_to_action,\n        click_tracking_url,\n        impression_tracking_url,\n        \n\n    split_part(\n        landing_page_url,\n        '?',\n        1\n        )\n\n as base_url,\n        \n    \n        try_cast(\n\n    split_part(\n        \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        landing_page_url,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_host,\n        '/' || \n    \n        try_cast(\n\n    split_part(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        landing_page_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        landing_page_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        landing_page_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        right(\n            \n\n    replace(\n        \n\n    replace(\n        landing_page_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        landing_page_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        landing_page_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        landing_page_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n        )\n    end,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_path,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        landing_page_url,\n        'utm_source=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_source,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        landing_page_url,\n        'utm_medium=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_medium,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        landing_page_url,\n        'utm_campaign=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_campaign,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        landing_page_url,\n        'utm_content=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_content,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        landing_page_url,\n        'utm_term=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_term,\n        landing_page_url,\n        row_number() over (partition by source_relation, ad_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:06.595628Z", "completed_at": "2024-08-04T03:35:07.247427Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:07.247864Z", "completed_at": "2024-08-04T03:35:07.247879Z"}], "thread_id": "Thread-1", "execution_time": 0.8429591655731201, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly_tmp\n), \n\nfields as (\n\n    select\n        \n    cast(null as numeric(28,6)) as \n    \n    ad_id\n    \n , \n    cast(null as float) as \n    \n    average_video_play\n    \n , \n    cast(null as float) as \n    \n    average_video_play_per_user\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    clicks\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    comments\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    conversion\n    \n , \n    cast(null as float) as \n    \n    conversion_rate\n    \n , \n    cast(null as float) as \n    \n    cost_per_conversion\n    \n , \n    cast(null as float) as \n    \n    cpc\n    \n , \n    cast(null as float) as \n    \n    cpm\n    \n , \n    cast(null as float) as \n    \n    ctr\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    follows\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    impressions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    likes\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    profile_visits\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    reach\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    shares\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    spend\n    \n , \n    cast(null as timestamp) as \n    \n    stat_time_hour\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_play_actions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_views_p_25\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_views_p_50\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_views_p_75\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_watched_2_s\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_watched_6_s\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n), \n\nfinal as (\n\n    select\n        source_relation,  \n        ad_id, \n        cast(stat_time_hour as timestamp) as stat_time_hour, \n        cpc, \n        cpm, \n        ctr, \n        impressions, \n        clicks, \n        spend, \n        reach, \n        conversion, \n        cost_per_conversion, \n        conversion_rate, \n        likes, \n        comments, \n        shares, \n        profile_visits,\n        follows, \n        video_play_actions, \n        video_watched_2_s, \n        video_watched_6_s, \n        video_views_p_25, \n        video_views_p_50,\n        video_views_p_75,  \n        average_video_play, \n        average_video_play_per_user\n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:07.440113Z", "completed_at": "2024-08-04T03:35:07.969859Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:07.970265Z", "completed_at": "2024-08-04T03:35:07.970278Z"}], "thread_id": "Thread-1", "execution_time": 0.7166056632995605, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__advertiser", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__advertiser_tmp\n), \n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    address\n    \n , \n    cast(null as float) as \n    \n    balance\n    \n , \n    cast(null as TEXT) as \n    \n    cellphone_number\n    \n , \n    cast(null as TEXT) as \n    \n    company\n    \n , \n    cast(null as TEXT) as \n    \n    contacter\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as TEXT) as \n    \n    description\n    \n , \n    cast(null as TEXT) as \n    \n    email\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    industry\n    \n , \n    cast(null as TEXT) as \n    \n    language\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    phone_number\n    \n , \n    cast(null as TEXT) as \n    \n    telephone\n    \n , \n    cast(null as TEXT) as \n    \n    telephone_number\n    \n , \n    cast(null as TEXT) as \n    \n    timezone\n    \n \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,   \n        id as advertiser_id, \n        address, \n        balance, \n        company, \n        contacter, \n        country, \n        currency, \n        description, \n        email, \n        industry, \n        language,\n        name as advertiser_name, \n        coalesce(cellphone_number, phone_number) as cellphone_number, \n        coalesce(telephone_number, telephone) as telephone_number,\n        timezone\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__advertiser"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:08.158027Z", "completed_at": "2024-08-04T03:35:08.832924Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:08.833324Z", "completed_at": "2024-08-04T03:35:08.833337Z"}], "thread_id": "Thread-1", "execution_time": 0.8480052947998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_history_tmp\n), \n\nfields as (\n\n    select\n        \n    cast(null as numeric(28,6)) as \n    \n    advertiser_id\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    campaign_id\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_name\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_type\n    \n , \n    cast(null as TEXT) as \n    \n    split_test_variable\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n), \n\nfinal as (\n\n    select\n        source_relation,   \n        campaign_id,\n        cast(updated_at as timestamp) as updated_at,\n        advertiser_id,\n        campaign_name,\n        campaign_type,\n        split_test_variable,\n        row_number() over (partition by source_relation, campaign_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:09.007679Z", "completed_at": "2024-08-04T03:35:09.649002Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:09.649396Z", "completed_at": "2024-08-04T03:35:09.649408Z"}], "thread_id": "Thread-1", "execution_time": 0.8306961059570312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_report_hourly_tmp\n), \n\nfields as (\n\n    select\n        \n    cast(null as numeric(28,6)) as \n    \n    campaign_id\n    \n , \n    cast(null as float) as \n    \n    average_video_play\n    \n , \n    cast(null as float) as \n    \n    average_video_play_per_user\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    clicks\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    comments\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    conversion\n    \n , \n    cast(null as float) as \n    \n    conversion_rate\n    \n , \n    cast(null as float) as \n    \n    cost_per_conversion\n    \n , \n    cast(null as float) as \n    \n    cpc\n    \n , \n    cast(null as float) as \n    \n    cpm\n    \n , \n    cast(null as float) as \n    \n    ctr\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    follows\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    impressions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    likes\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    profile_visits\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    reach\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    shares\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    spend\n    \n , \n    cast(null as timestamp) as \n    \n    stat_time_hour\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_play_actions\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_views_p_25\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_views_p_50\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_views_p_75\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_watched_2_s\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    video_watched_6_s\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n), \n\nfinal as (\n\n    select\n        source_relation,  \n        campaign_id,\n        cast(stat_time_hour as timestamp) as stat_time_hour,\n        cpc, \n        cpm,\n        ctr,\n        impressions,\n        clicks,\n        spend,\n        reach,\n        conversion,\n        cost_per_conversion,\n        conversion_rate,\n        likes,\n        comments,\n        shares,\n        profile_visits,\n        follows,\n        video_play_actions,\n        video_watched_2_s,\n        video_watched_6_s,\n        video_views_p_25,\n        video_views_p_50,\n        video_views_p_75,\n        average_video_play,\n        average_video_play_per_user\n\n        \n\n\n\n\n        \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_report_hourly"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:09.840020Z", "completed_at": "2024-08-04T03:35:10.575431Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:10.575839Z", "completed_at": "2024-08-04T03:35:10.575853Z"}], "thread_id": "Thread-1", "execution_time": 0.9328937530517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__account_history", "compiled": true, "compiled_code": "\n\nwith source as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__account_history_tmp\n\n),\n\nfields as (\n\n    select\n    \n        \n    cast(null as TEXT) as \n    \n    approval_status\n    \n , \n    cast(null as TEXT) as \n    \n    business_id\n    \n , \n    cast(null as TEXT) as \n    \n    business_name\n    \n , \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    cast(null as boolean) as \n    \n    deleted\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    industry_type\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    salt\n    \n , \n    cast(null as TEXT) as \n    \n    timezone\n    \n , \n    cast(null as timestamp) as \n    \n    timezone_switch_at\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        source_relation,\n        approval_status,\n        business_id,\n        business_name,\n        created_at as created_timestamp,\n        deleted as is_deleted,\n        id as account_id,\n        industry_type,\n        name,\n        salt,\n        timezone,\n        timezone_switch_at as timezone_switched_timestamp,\n        updated_at as updated_timestamp,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_latest_version\n    \n    from fields \n)\n\nselect * from final", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__account_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:10.774190Z", "completed_at": "2024-08-04T03:35:11.262198Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:11.262609Z", "completed_at": "2024-08-04T03:35:11.262622Z"}], "thread_id": "Thread-1", "execution_time": 0.656909704208374, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith source as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_history_tmp\n\n),\n\nfields as (\n\n    select\n    \n        \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as integer) as \n    \n    daily_budget_amount_local_micro\n    \n , \n    cast(null as boolean) as \n    \n    deleted\n    \n , \n    cast(null as integer) as \n    \n    duration_in_days\n    \n , \n    cast(null as timestamp) as \n    \n    end_time\n    \n , \n    cast(null as TEXT) as \n    \n    entity_status\n    \n , \n    cast(null as integer) as \n    \n    frequency_cap\n    \n , \n    cast(null as TEXT) as \n    \n    funding_instrument_id\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as boolean) as \n    \n    servable\n    \n , \n    cast(null as boolean) as \n    \n    standard_delivery\n    \n , \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as integer) as \n    \n    total_budget_amount_local_micro\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        source_relation,\n        account_id,\n        created_at as created_timestamp,\n        currency,\n        daily_budget_amount_local_micro,\n        deleted as is_deleted,\n        duration_in_days,\n        end_time as end_timestamp,\n        entity_status,\n        frequency_cap,\n        funding_instrument_id,\n        id as campaign_id,\n        name as campaign_name,\n        servable as is_servable,\n        standard_delivery as is_standard_delivery,\n        start_time as start_timestamp,\n        total_budget_amount_local_micro,\n        updated_at as updated_timestamp,\n        round(daily_budget_amount_local_micro / 1000000.0,2) as daily_budget_amount,\n        round(total_budget_amount_local_micro / 1000000.0,2) as total_budget_amount,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_latest_version\n    \n    from fields \n)\n\nselect * from final", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:11.432875Z", "completed_at": "2024-08-04T03:35:11.944485Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:11.944898Z", "completed_at": "2024-08-04T03:35:11.944912Z"}], "thread_id": "Thread-1", "execution_time": 0.7030298709869385, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    billed_charge_local_micro\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    placement\n    \n , \n    cast(null as integer) as \n    \n    url_clicks\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date_trunc('day', date) as date_day,\n        account_id,\n        campaign_id,\n        placement,\n        clicks,\n        impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks\n\n        \n\n\n\n\n    \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:12.137372Z", "completed_at": "2024-08-04T03:35:12.644130Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:12.644528Z", "completed_at": "2024-08-04T03:35:12.644541Z"}], "thread_id": "Thread-1", "execution_time": 0.6792581081390381, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__line_item_history", "compiled": true, "compiled_code": "\n\nwith source as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_history_tmp\n\n),\n\nfields as (\n\n    select\n    \n        \n    cast(null as TEXT) as \n    \n    advertiser_domain\n    \n , \n    cast(null as integer) as \n    \n    advertiser_user_id\n    \n , \n    cast(null as boolean) as \n    \n    automatically_select_bid\n    \n , \n    cast(null as integer) as \n    \n    bid_amount_local_micro\n    \n , \n    cast(null as TEXT) as \n    \n    bid_type\n    \n , \n    cast(null as TEXT) as \n    \n    bid_unit\n    \n , \n    cast(null as TEXT) as \n    \n    campaign_id\n    \n , \n    cast(null as TEXT) as \n    \n    charge_by\n    \n , \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    cast(null as TEXT) as \n    \n    creative_source\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as boolean) as \n    \n    deleted\n    \n , \n    cast(null as timestamp) as \n    \n    end_time\n    \n , \n    cast(null as TEXT) as \n    \n    entity_status\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    objective\n    \n , \n    cast(null as TEXT) as \n    \n    optimization\n    \n , \n    cast(null as TEXT) as \n    \n    primary_web_event_tag\n    \n , \n    cast(null as TEXT) as \n    \n    product_type\n    \n , \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as integer) as \n    \n    target_cpa_local_micro\n    \n , \n    cast(null as integer) as \n    \n    total_budget_amount_local_micro\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        source_relation,\n        advertiser_domain,\n        advertiser_user_id,\n        automatically_select_bid,\n        bid_amount_local_micro,\n        bid_type,\n        bid_unit,\n        campaign_id,\n        charge_by,\n        created_at as created_timestamp,\n        creative_source,\n        currency,\n        deleted as is_deleted,\n        end_time as end_timestamp,\n        entity_status,\n        id as line_item_id,\n        name,\n        objective,\n        optimization,\n        primary_web_event_tag,\n        product_type,\n        start_time as start_timestamp,\n        target_cpa_local_micro,\n        total_budget_amount_local_micro,\n        updated_at as updated_timestamp,\n        round(bid_amount_local_micro / 1000000.0,2) as bid_amount,\n        round(total_budget_amount_local_micro / 1000000.0,2) as total_budget_amount,\n        round(target_cpa_local_micro / 1000000.0,2) as target_cpa,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_latest_version\n    \n    from fields \n)\n\nselect * from final", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:12.818608Z", "completed_at": "2024-08-04T03:35:13.350968Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:13.351397Z", "completed_at": "2024-08-04T03:35:13.351411Z"}], "thread_id": "Thread-1", "execution_time": 0.7154898643493652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    billed_charge_local_micro\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    line_item_id\n    \n , \n    cast(null as TEXT) as \n    \n    placement\n    \n , \n    cast(null as TEXT) as \n    \n    segment\n    \n , \n    cast(null as integer) as \n    \n    url_clicks\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date_trunc('day', date) as date_day,\n        md5(cast(coalesce(cast(account_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(line_item_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segment as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(placement as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as keyword_id,\n        account_id,\n        line_item_id,\n        segment as keyword,\n        placement,\n        clicks,\n        impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_keywords_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:13.535554Z", "completed_at": "2024-08-04T03:35:14.080976Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:14.081384Z", "completed_at": "2024-08-04T03:35:14.081399Z"}], "thread_id": "Thread-1", "execution_time": 0.7250909805297852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__line_item_report", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_report_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    billed_charge_local_micro\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    line_item_id\n    \n , \n    cast(null as TEXT) as \n    \n    placement\n    \n , \n    cast(null as integer) as \n    \n    url_clicks\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        date_trunc('day', date) as date_day,\n        account_id,\n        line_item_id,\n        placement,\n        clicks,\n        impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:14.262494Z", "completed_at": "2024-08-04T03:35:14.852203Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:14.852603Z", "completed_at": "2024-08-04T03:35:14.852616Z"}], "thread_id": "Thread-1", "execution_time": 0.7778301239013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history", "compiled": true, "compiled_code": "\n\nwith source as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp\n\n),\n\nfields as (\n\n    select\n    \n        \n    cast(null as TEXT) as \n    \n    approval_status\n    \n , \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    cast(null as boolean) as \n    \n    deleted\n    \n , \n    cast(null as TEXT) as \n    \n    entity_status\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    line_item_id\n    \n , \n    cast(null as TEXT) as \n    \n    tweet_id\n    \n , \n    cast(null as timestamp) as \n    \n    updated_at\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        source_relation,\n        approval_status,\n        created_at as created_timestamp,\n        deleted as is_deleted,\n        entity_status,\n        id as promoted_tweet_id,\n        line_item_id,\n        tweet_id,\n        updated_at as updated_timestamp,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_latest_version\n    from fields \n)\n\nselect * from final", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:15.041842Z", "completed_at": "2024-08-04T03:35:15.573746Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:15.574363Z", "completed_at": "2024-08-04T03:35:15.574378Z"}], "thread_id": "Thread-1", "execution_time": 0.7487139701843262, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report", "compiled": true, "compiled_code": "\n\nwith source as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp\n\n),\n\nrenamed as (\n\n    select\n    \n        \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as integer) as \n    \n    billed_charge_local_micro\n    \n , \n    cast(null as integer) as \n    \n    clicks\n    \n , \n    cast(null as timestamp) as \n    \n    date\n    \n , \n    cast(null as integer) as \n    \n    impressions\n    \n , \n    cast(null as TEXT) as \n    \n    placement\n    \n , \n    cast(null as TEXT) as \n    \n    promoted_tweet_id\n    \n , \n    cast(null as integer) as \n    \n    url_clicks\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from source\n\n), spend_calc as (\n\n    select\n        source_relation,\n        date_trunc('day', date) as date_day,\n        account_id,\n        promoted_tweet_id,\n        placement,\n        clicks as clicks,\n        impressions as impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks as url_clicks\n\n        \n\n\n\n\n    \n    from renamed\n\n)\n\nselect * from spend_calc", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:15.792585Z", "completed_at": "2024-08-04T03:35:16.314671Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:16.315079Z", "completed_at": "2024-08-04T03:35:16.315092Z"}], "thread_id": "Thread-1", "execution_time": 0.7004623413085938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__tweet", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet_tmp\n),\n\nfields as (\n\n    select\n        \n    cast(null as TEXT) as \n    \n    account_id\n    \n , \n    cast(null as TEXT) as \n    \n    full_text\n    \n , \n    cast(null as TEXT) as \n    \n    id\n    \n , \n    cast(null as TEXT) as \n    \n    lang\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        account_id,\n        id as tweet_id,\n        name,\n        full_text,\n        lang as language\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:16.494382Z", "completed_at": "2024-08-04T03:35:16.990473Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:16.990883Z", "completed_at": "2024-08-04T03:35:16.990896Z"}], "thread_id": "Thread-1", "execution_time": 0.6731395721435547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads_source.stg_twitter_ads__tweet_url", "compiled": true, "compiled_code": "\n\nwith source as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet_url_tmp\n\n),\n\nfields as (\n\n    select\n    \n        \n    cast(null as TEXT) as \n    \n    display_url\n    \n , \n    cast(null as TEXT) as \n    \n    expanded_url\n    \n , \n    cast(null as integer) as \n    \n    index\n    \n , \n    cast(null as TEXT) as \n    \n    indices\n    \n , \n    cast(null as TEXT) as \n    \n    tweet_id\n    \n , \n    cast(null as TEXT) as \n    \n    url\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        source_relation,\n        display_url,\n        expanded_url,\n        index,\n        indices,\n        tweet_id,\n        url,\n        \n\n    split_part(\n        expanded_url,\n        '?',\n        1\n        )\n\n as base_url,\n        \n    \n        try_cast(\n\n    split_part(\n        \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        expanded_url,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_host,\n        '/' || \n    \n        try_cast(\n\n    split_part(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        expanded_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        expanded_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        expanded_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        right(\n            \n\n    replace(\n        \n\n    replace(\n        expanded_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        expanded_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        expanded_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        expanded_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n        )\n    end,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_path,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        expanded_url,\n        'utm_source=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_source,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        expanded_url,\n        'utm_medium=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_medium,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        expanded_url,\n        'utm_campaign=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_campaign,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        expanded_url,\n        'utm_content=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_content,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        expanded_url,\n        'utm_term=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_term\n    \n    from fields\n\n)\n\nselect * from final", "relation_name": "TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet_url"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.169068Z", "completed_at": "2024-08-04T03:35:17.174054Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.174444Z", "completed_at": "2024-08-04T03:35:17.174451Z"}], "thread_id": "Thread-1", "execution_time": 0.006450176239013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_history_source_relation__ad_group_id__last_updated_date.5873194717", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, last_updated_date\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_history\n    group by source_relation, ad_group_id, last_updated_date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.176333Z", "completed_at": "2024-08-04T03:35:17.183939Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.184324Z", "completed_at": "2024-08-04T03:35:17.184331Z"}], "thread_id": "Thread-1", "execution_time": 0.008839845657348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_history_ad_group_id.6b524b990b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_history\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.186195Z", "completed_at": "2024-08-04T03:35:17.191005Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.191409Z", "completed_at": "2024-08-04T03:35:17.191415Z"}], "thread_id": "Thread-1", "execution_time": 0.006075620651245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_level_report_source_relation__ad_group_id__date_day.180ec0225e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, date_day\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_level_report\n    group by source_relation, ad_group_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.193247Z", "completed_at": "2024-08-04T03:35:17.197064Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.197443Z", "completed_at": "2024-08-04T03:35:17.197449Z"}], "thread_id": "Thread-1", "execution_time": 0.005040884017944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_level_report_ad_group_id.ee4ef641c3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_level_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.199283Z", "completed_at": "2024-08-04T03:35:17.203336Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.203770Z", "completed_at": "2024-08-04T03:35:17.203776Z"}], "thread_id": "Thread-1", "execution_time": 0.005344390869140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__advertised_product_report_source_relation__ad_id__date_day.e170148d6c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, date_day\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__advertised_product_report\n    group by source_relation, ad_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.205608Z", "completed_at": "2024-08-04T03:35:17.209476Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.209874Z", "completed_at": "2024-08-04T03:35:17.209880Z"}], "thread_id": "Thread-1", "execution_time": 0.00510406494140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.not_null_stg_amazon_ads__advertised_product_report_ad_id.307c6bc8d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__advertised_product_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.211763Z", "completed_at": "2024-08-04T03:35:17.216669Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.217058Z", "completed_at": "2024-08-04T03:35:17.217064Z"}], "thread_id": "Thread-1", "execution_time": 0.00617527961730957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_history_source_relation__campaign_id__last_updated_date.f58b6293d6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, last_updated_date\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history\n    group by source_relation, campaign_id, last_updated_date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.218907Z", "completed_at": "2024-08-04T03:35:17.222819Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.223201Z", "completed_at": "2024-08-04T03:35:17.223207Z"}], "thread_id": "Thread-1", "execution_time": 0.00514674186706543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.not_null_stg_amazon_ads__campaign_history_campaign_id.49e395897c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.225103Z", "completed_at": "2024-08-04T03:35:17.229205Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.229601Z", "completed_at": "2024-08-04T03:35:17.229607Z"}], "thread_id": "Thread-1", "execution_time": 0.0053653717041015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_level_report_source_relation__campaign_id__date_day.f6bb472aa5", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, date_day\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_level_report\n    group by source_relation, campaign_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.231457Z", "completed_at": "2024-08-04T03:35:17.235318Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.235732Z", "completed_at": "2024-08-04T03:35:17.235738Z"}], "thread_id": "Thread-1", "execution_time": 0.005139350891113281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.not_null_stg_amazon_ads__campaign_level_report_campaign_id.1efec68194", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_level_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.237568Z", "completed_at": "2024-08-04T03:35:17.242401Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.242797Z", "completed_at": "2024-08-04T03:35:17.242804Z"}], "thread_id": "Thread-1", "execution_time": 0.006070137023925781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__keyword_history_source_relation__keyword_id__last_updated_date.611a8411e0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, keyword_id, last_updated_date\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__keyword_history\n    group by source_relation, keyword_id, last_updated_date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.244675Z", "completed_at": "2024-08-04T03:35:17.248591Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.248973Z", "completed_at": "2024-08-04T03:35:17.248979Z"}], "thread_id": "Thread-1", "execution_time": 0.005147218704223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.not_null_stg_amazon_ads__keyword_history_keyword_id.f21f6add6e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__keyword_history\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.250829Z", "completed_at": "2024-08-04T03:35:17.257488Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.257882Z", "completed_at": "2024-08-04T03:35:17.257888Z"}], "thread_id": "Thread-1", "execution_time": 0.00790548324584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads.int_amazon_ads__portfolio_history", "compiled": true, "compiled_code": "\n\n\n\nwith portfolios as (\n    select\n    \n        *\n        from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__portfolio_history\n        where is_most_recent_record = True\n    \n)\n\nselect * \nfrom portfolios", "relation_name": "TEST.PUBLIC_amazon_ads.int_amazon_ads__portfolio_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.260012Z", "completed_at": "2024-08-04T03:35:17.264761Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.265150Z", "completed_at": "2024-08-04T03:35:17.265157Z"}], "thread_id": "Thread-1", "execution_time": 0.006223201751708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__portfolio_history_source_relation__portfolio_id__last_updated_date.e0bb6ee3e0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, portfolio_id, last_updated_date\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__portfolio_history\n    group by source_relation, portfolio_id, last_updated_date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.267003Z", "completed_at": "2024-08-04T03:35:17.270848Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.271223Z", "completed_at": "2024-08-04T03:35:17.271229Z"}], "thread_id": "Thread-1", "execution_time": 0.00507354736328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.not_null_stg_amazon_ads__portfolio_history_portfolio_id.e22bb2ba02", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect portfolio_id\nfrom TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__portfolio_history\nwhere portfolio_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.273102Z", "completed_at": "2024-08-04T03:35:17.277145Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.277529Z", "completed_at": "2024-08-04T03:35:17.277549Z"}], "thread_id": "Thread-1", "execution_time": 0.005300998687744141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__product_ad_history_source_relation__ad_id__last_updated_date.90fb8d59e6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, last_updated_date\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__product_ad_history\n    group by source_relation, ad_id, last_updated_date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.279391Z", "completed_at": "2024-08-04T03:35:17.283291Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.283721Z", "completed_at": "2024-08-04T03:35:17.283728Z"}], "thread_id": "Thread-1", "execution_time": 0.005194664001464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.not_null_stg_amazon_ads__product_ad_history_ad_id.8744ab1cd8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__product_ad_history\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.285522Z", "completed_at": "2024-08-04T03:35:17.291980Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.292349Z", "completed_at": "2024-08-04T03:35:17.292355Z"}], "thread_id": "Thread-1", "execution_time": 0.007649660110473633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads.amazon_ads__account_report", "compiled": true, "compiled_code": "\n\nwith report as (\n    select *\n    --use campaign report since account report not provided\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_level_report\n), \n\naccount_info as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__profile\n    where _fivetran_deleted = False\n),\n\ncampaigns as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nfields as (\n    select\n        report.source_relation,\n        report.date_day,\n        account_info.account_name,\n        account_info.account_id,\n        account_info.country_code,\n        account_info.profile_id,\n        sum(report.cost) as cost,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions \n\n        --use campaign report since portfolio report not provided\n        \n\n\n\n\n\n    from report\n\n    left join campaigns\n        on campaigns.campaign_id = report.campaign_id\n        and campaigns.source_relation = report.source_relation\n    left join account_info\n        on account_info.profile_id = campaigns.profile_id\n        and account_info.source_relation = campaigns.source_relation\n    \n\n    group by 1,2,3,4,5,6\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_amazon_ads.amazon_ads__account_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.294334Z", "completed_at": "2024-08-04T03:35:17.300861Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.301236Z", "completed_at": "2024-08-04T03:35:17.301242Z"}], "thread_id": "Thread-1", "execution_time": 0.00788116455078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads.amazon_ads__portfolio_report", "compiled": true, "compiled_code": "\n\nwith report as (\n    select *\n    --use campaign report since portfolio report not provided\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_level_report\n), \n\naccount_info as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__profile\n    where _fivetran_deleted = False\n),\n\nportfolios as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__portfolio_history\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nfields as (\n    select\n        report.source_relation,\n        report.date_day,\n        account_info.account_name,\n        account_info.account_id,\n        account_info.country_code,\n        account_info.profile_id,\n        portfolios.portfolio_name,\n        portfolios.portfolio_id,\n        portfolios.budget_amount,\n        portfolios.budget_currency_code,\n        portfolios.budget_start_date,\n        portfolios.budget_end_date,\n        portfolios.budget_policy,\n        portfolios.in_budget,\n        portfolios.serving_status,\n        portfolios.state,\n        sum(report.cost) as cost,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions \n\n        --use campaign report since portfolio report not provided\n        \n\n\n\n\n\n    from portfolios\n\n    left join campaigns\n        on campaigns.portfolio_id = portfolios.portfolio_id\n        and campaigns.source_relation = portfolios.source_relation\n    left join account_info\n        on account_info.profile_id = campaigns.profile_id\n        and account_info.source_relation = campaigns.source_relation\n    left join report\n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_amazon_ads.amazon_ads__portfolio_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.303234Z", "completed_at": "2024-08-04T03:35:17.307178Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.307592Z", "completed_at": "2024-08-04T03:35:17.307598Z"}], "thread_id": "Thread-1", "execution_time": 0.005339384078979492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.not_null_stg_amazon_ads__profile_profile_id.bd192c102b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect profile_id\nfrom TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__profile\nwhere profile_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.309438Z", "completed_at": "2024-08-04T03:35:17.313507Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.313908Z", "completed_at": "2024-08-04T03:35:17.313915Z"}], "thread_id": "Thread-1", "execution_time": 0.005316257476806641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__search_term_ad_keyword_report_source_relation__search_term__keyword_id__date_day.00ccbc3eda", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, search_term, keyword_id, date_day\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__search_term_ad_keyword_report\n    group by source_relation, search_term, keyword_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.315757Z", "completed_at": "2024-08-04T03:35:17.320559Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.320948Z", "completed_at": "2024-08-04T03:35:17.320954Z"}], "thread_id": "Thread-1", "execution_time": 0.006056308746337891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.not_null_stg_amazon_ads__search_term_ad_keyword_report_search_term.ef04af3b06", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect search_term\nfrom TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__search_term_ad_keyword_report\nwhere search_term is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.322807Z", "completed_at": "2024-08-04T03:35:17.326875Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.327258Z", "completed_at": "2024-08-04T03:35:17.327264Z"}], "thread_id": "Thread-1", "execution_time": 0.0053098201751708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__targeting_keyword_report_source_relation__keyword_id__date_day.4190f2a661", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, keyword_id, date_day\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__targeting_keyword_report\n    group by source_relation, keyword_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.329148Z", "completed_at": "2024-08-04T03:35:17.333060Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.333435Z", "completed_at": "2024-08-04T03:35:17.333442Z"}], "thread_id": "Thread-1", "execution_time": 0.005150318145751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads_source.not_null_stg_amazon_ads__targeting_keyword_report_keyword_id.101a3299d7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__targeting_keyword_report\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.335293Z", "completed_at": "2024-08-04T03:35:17.340103Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.340487Z", "completed_at": "2024-08-04T03:35:17.340493Z"}], "thread_id": "Thread-1", "execution_time": 0.006048917770385742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_history_source_relation__ad_group_id__modified_at.a6db663569", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, modified_at\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_history\n    group by source_relation, ad_group_id, modified_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.342314Z", "completed_at": "2024-08-04T03:35:17.451731Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.452145Z", "completed_at": "2024-08-04T03:35:17.452156Z"}], "thread_id": "Thread-1", "execution_time": 0.11070013046264648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_history_ad_group_id.dc128eecb7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_history\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.454126Z", "completed_at": "2024-08-04T03:35:17.458203Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.458595Z", "completed_at": "2024-08-04T03:35:17.458602Z"}], "thread_id": "Thread-1", "execution_time": 0.005356788635253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_history_modified_at.e5d65fa28f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect modified_at\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_history\nwhere modified_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.460592Z", "completed_at": "2024-08-04T03:35:17.464721Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.465112Z", "completed_at": "2024-08-04T03:35:17.465119Z"}], "thread_id": "Thread-1", "execution_time": 0.005467414855957031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_report_source_relation__ad_group_id__date_day.dc4ccb902d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, date_day\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_report\n    group by source_relation, ad_group_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.466955Z", "completed_at": "2024-08-04T03:35:17.471606Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.471989Z", "completed_at": "2024-08-04T03:35:17.471996Z"}], "thread_id": "Thread-1", "execution_time": 0.005885124206542969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_report_ad_group_id.a115f9cfc1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.473818Z", "completed_at": "2024-08-04T03:35:17.477636Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.478030Z", "completed_at": "2024-08-04T03:35:17.478036Z"}], "thread_id": "Thread-1", "execution_time": 0.005042552947998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_report_date_day.4dfd46a43b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.479908Z", "completed_at": "2024-08-04T03:35:17.484004Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.484386Z", "completed_at": "2024-08-04T03:35:17.484393Z"}], "thread_id": "Thread-1", "execution_time": 0.005368709564208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_history_source_relation__ad_id__modified_at.45dfca7ca5", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, modified_at\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_history\n    group by source_relation, ad_id, modified_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.486218Z", "completed_at": "2024-08-04T03:35:17.490160Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.490537Z", "completed_at": "2024-08-04T03:35:17.490551Z"}], "thread_id": "Thread-1", "execution_time": 0.005167484283447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_history_ad_id.4ad3bde32a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_history\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.492395Z", "completed_at": "2024-08-04T03:35:17.497152Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.497527Z", "completed_at": "2024-08-04T03:35:17.497533Z"}], "thread_id": "Thread-1", "execution_time": 0.00597071647644043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_history_modified_at.2eea7e006d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect modified_at\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_history\nwhere modified_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.499406Z", "completed_at": "2024-08-04T03:35:17.503443Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.503859Z", "completed_at": "2024-08-04T03:35:17.503865Z"}], "thread_id": "Thread-1", "execution_time": 0.005335330963134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_report_source_relation__ad_id__date_day__ad_group_id.f9bc5ff292", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, date_day, ad_group_id\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_report\n    group by source_relation, ad_id, date_day, ad_group_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.505733Z", "completed_at": "2024-08-04T03:35:17.509581Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.509968Z", "completed_at": "2024-08-04T03:35:17.509974Z"}], "thread_id": "Thread-1", "execution_time": 0.00510716438293457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_ad_group_id.a397755e9f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.511834Z", "completed_at": "2024-08-04T03:35:17.515665Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.516052Z", "completed_at": "2024-08-04T03:35:17.516058Z"}], "thread_id": "Thread-1", "execution_time": 0.005101203918457031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_ad_id.d08e760c58", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.517870Z", "completed_at": "2024-08-04T03:35:17.522700Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.523084Z", "completed_at": "2024-08-04T03:35:17.523091Z"}], "thread_id": "Thread-1", "execution_time": 0.0060558319091796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_date_day.e6252346d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.524982Z", "completed_at": "2024-08-04T03:35:17.529028Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.529409Z", "completed_at": "2024-08-04T03:35:17.529415Z"}], "thread_id": "Thread-1", "execution_time": 0.005278825759887695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_history_source_relation__campaign_id__modified_at.2e9f11582c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, modified_at\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history\n    group by source_relation, campaign_id, modified_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.531233Z", "completed_at": "2024-08-04T03:35:17.535049Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.535462Z", "completed_at": "2024-08-04T03:35:17.535468Z"}], "thread_id": "Thread-1", "execution_time": 0.00507664680480957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_history_campaign_id.3f0f7502b8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.537284Z", "completed_at": "2024-08-04T03:35:17.541108Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.541491Z", "completed_at": "2024-08-04T03:35:17.541497Z"}], "thread_id": "Thread-1", "execution_time": 0.005040407180786133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_history_modified_at.f34a7a97c9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect modified_at\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history\nwhere modified_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.543328Z", "completed_at": "2024-08-04T03:35:17.548336Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.548728Z", "completed_at": "2024-08-04T03:35:17.548734Z"}], "thread_id": "Thread-1", "execution_time": 0.006243228912353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_report_source_relation__campaign_id__date_day.87b6206f82", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, date_day\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_report\n    group by source_relation, campaign_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.550556Z", "completed_at": "2024-08-04T03:35:17.554423Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.554812Z", "completed_at": "2024-08-04T03:35:17.554818Z"}], "thread_id": "Thread-1", "execution_time": 0.005096435546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_report_campaign_id.b83941e728", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.556653Z", "completed_at": "2024-08-04T03:35:17.560455Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.560843Z", "completed_at": "2024-08-04T03:35:17.560849Z"}], "thread_id": "Thread-1", "execution_time": 0.0050203800201416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_report_date_day.c8dc10a6f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.562685Z", "completed_at": "2024-08-04T03:35:17.567510Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.567905Z", "completed_at": "2024-08-04T03:35:17.567911Z"}], "thread_id": "Thread-1", "execution_time": 0.006082296371459961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_history_source_relation__keyword_id__modified_at.635c0ce086", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, keyword_id, modified_at\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_history\n    group by source_relation, keyword_id, modified_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.569723Z", "completed_at": "2024-08-04T03:35:17.573521Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.573909Z", "completed_at": "2024-08-04T03:35:17.573915Z"}], "thread_id": "Thread-1", "execution_time": 0.005025386810302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_history_keyword_id.889f83cfd2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_history\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.575767Z", "completed_at": "2024-08-04T03:35:17.579690Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.580076Z", "completed_at": "2024-08-04T03:35:17.580082Z"}], "thread_id": "Thread-1", "execution_time": 0.005181550979614258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_history_modified_at.42fde5a287", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect modified_at\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_history\nwhere modified_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.581925Z", "completed_at": "2024-08-04T03:35:17.586049Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.586428Z", "completed_at": "2024-08-04T03:35:17.586435Z"}], "thread_id": "Thread-1", "execution_time": 0.0053691864013671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_report_source_relation__keyword_id__date_day.855ae5524a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, keyword_id, date_day\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_report\n    group by source_relation, keyword_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.588267Z", "completed_at": "2024-08-04T03:35:17.593105Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.593481Z", "completed_at": "2024-08-04T03:35:17.593487Z"}], "thread_id": "Thread-1", "execution_time": 0.006060600280761719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_report_date_day.16098db928", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.595294Z", "completed_at": "2024-08-04T03:35:17.599092Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.599501Z", "completed_at": "2024-08-04T03:35:17.599508Z"}], "thread_id": "Thread-1", "execution_time": 0.005045413970947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_report_keyword_id.501725b09e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_report\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.601351Z", "completed_at": "2024-08-04T03:35:17.607860Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.608244Z", "completed_at": "2024-08-04T03:35:17.608251Z"}], "thread_id": "Thread-1", "execution_time": 0.007782459259033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads.apple_search_ads__ad_group_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_report\n), \n\nad_group as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\ncampaign as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__organization\n), \n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        ad_group.ad_group_id,\n        ad_group.ad_group_name,\n        report.currency,\n        ad_group.ad_group_status,\n        ad_group.start_at, \n        ad_group.end_at,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    join ad_group \n        on report.ad_group_id = ad_group.ad_group_id\n        and report.source_relation = ad_group.source_relation\n    join campaign \n        on ad_group.campaign_id = campaign.campaign_id\n        and ad_group.source_relation = campaign.source_relation\n    join organization \n        on ad_group.organization_id = organization.organization_id\n        and ad_group.source_relation = organization.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect * \nfrom joined", "relation_name": "TEST.PUBLIC_apple_search_ads.apple_search_ads__ad_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.610289Z", "completed_at": "2024-08-04T03:35:17.617258Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.617637Z", "completed_at": "2024-08-04T03:35:17.617643Z"}], "thread_id": "Thread-1", "execution_time": 0.008367061614990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads.apple_search_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_report\n), \n\nad as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_history\n    where is_most_recent_record = True\n), \n\nad_group as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\ncampaign as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__organization\n), \n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        ad_group.ad_group_id,\n        ad_group.ad_group_name,\n        ad.ad_id,\n        ad.ad_name,\n        report.currency,\n        ad.ad_status,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    join ad \n        on report.ad_id = ad.ad_id\n        and report.source_relation = ad.source_relation\n    join ad_group \n        on report.ad_group_id = ad_group.ad_group_id\n        and report.source_relation = ad_group.source_relation\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n        and report.source_relation = campaign.source_relation\n    join organization \n        on ad.organization_id = organization.organization_id\n        and ad.source_relation = organization.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect * \nfrom joined", "relation_name": "TEST.PUBLIC_apple_search_ads.apple_search_ads__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.619655Z", "completed_at": "2024-08-04T03:35:17.626485Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.626874Z", "completed_at": "2024-08-04T03:35:17.626881Z"}], "thread_id": "Thread-1", "execution_time": 0.008237600326538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads.apple_search_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith report as (\n    \n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_report\n\n), \n\ncampaign as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__organization\n\n), \n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        campaign.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        report.currency,\n        campaign.campaign_status,\n        campaign.start_at,\n        campaign.end_at,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n        and report.source_relation = campaign.source_relation\n    join organization \n        on campaign.organization_id = organization.organization_id\n        and campaign.source_relation = organization.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10\n)\n\nselect * \nfrom joined", "relation_name": "TEST.PUBLIC_apple_search_ads.apple_search_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.628908Z", "completed_at": "2024-08-04T03:35:17.635821Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.636198Z", "completed_at": "2024-08-04T03:35:17.636204Z"}], "thread_id": "Thread-1", "execution_time": 0.008260965347290039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads.apple_search_ads__keyword_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_report\n), \n\nkeyword as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__keyword_history\n    where is_most_recent_record = True\n), \n\nad_group as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\ncampaign as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__organization\n), \n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        ad_group.ad_group_id,\n        ad_group.ad_group_name,\n        keyword.keyword_id,\n        keyword.keyword_text,\n        keyword.match_type,\n        report.currency,\n        keyword.keyword_status,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    join keyword \n        on report.keyword_id = keyword.keyword_id\n        and report.source_relation = keyword.source_relation\n    join ad_group \n        on keyword.ad_group_id = ad_group.ad_group_id\n        and keyword.source_relation = ad_group.source_relation\n    join campaign \n        on ad_group.campaign_id = campaign.campaign_id\n        and ad_group.source_relation = campaign.source_relation\n    join organization \n        on ad_group.organization_id = organization.organization_id\n        and ad_group.source_relation = organization.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n)\n\nselect * \nfrom joined", "relation_name": "TEST.PUBLIC_apple_search_ads.apple_search_ads__keyword_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.638095Z", "completed_at": "2024-08-04T03:35:17.643984Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.644361Z", "completed_at": "2024-08-04T03:35:17.644367Z"}], "thread_id": "Thread-1", "execution_time": 0.007161617279052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads.apple_search_ads__organization_report", "compiled": true, "compiled_code": "\n\nwith report as (\n    \n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_report\n), \n\ncampaign as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__organization\n), \n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        organization.currency,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n        and report.source_relation = campaign.source_relation\n    join organization \n        on campaign.organization_id = organization.organization_id\n        and campaign.source_relation = organization.source_relation\n    group by 1,2,3,4,5\n)\n\nselect * \nfrom joined", "relation_name": "TEST.PUBLIC_apple_search_ads.apple_search_ads__organization_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.646382Z", "completed_at": "2024-08-04T03:35:17.651381Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.651778Z", "completed_at": "2024-08-04T03:35:17.651784Z"}], "thread_id": "Thread-1", "execution_time": 0.006456851959228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__organization_source_relation__organization_id.b5c488cb77", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, organization_id\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__organization\n    group by source_relation, organization_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.653606Z", "completed_at": "2024-08-04T03:35:17.657423Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.657810Z", "completed_at": "2024-08-04T03:35:17.657816Z"}], "thread_id": "Thread-1", "execution_time": 0.005039691925048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__organization_organization_id.b013ce33cb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__organization\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.659652Z", "completed_at": "2024-08-04T03:35:17.665448Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.665832Z", "completed_at": "2024-08-04T03:35:17.665838Z"}], "thread_id": "Thread-1", "execution_time": 0.0070438385009765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.apple_search_ads.apple_search_ads__search_term_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__search_term_report\n), \n\ncampaign as (\n\n    select *\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__campaign_history\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__organization\n), \n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        report.ad_group_id,\n        report.ad_group_name,\n        report.keyword_id,\n        report.keyword_text,\n        report.search_term_text,\n        report.match_type,\n        report.currency,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n        and report.source_relation = campaign.source_relation\n    join organization \n        on campaign.organization_id = organization.organization_id\n        and campaign.source_relation = organization.source_relation\n    where report.search_term_text is not null\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n)\n\nselect * \nfrom joined", "relation_name": "TEST.PUBLIC_apple_search_ads.apple_search_ads__search_term_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.667967Z", "completed_at": "2024-08-04T03:35:17.672089Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.672472Z", "completed_at": "2024-08-04T03:35:17.672479Z"}], "thread_id": "Thread-1", "execution_time": 0.005644083023071289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__search_term_report_source_relation___fivetran_id__date_day.ef07562d98", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, _fivetran_id, date_day\n    from TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__search_term_report\n    group by source_relation, _fivetran_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.674349Z", "completed_at": "2024-08-04T03:35:17.679209Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.679628Z", "completed_at": "2024-08-04T03:35:17.679634Z"}], "thread_id": "Thread-1", "execution_time": 0.006186962127685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__search_term_report__fivetran_id.aa430d1dad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__search_term_report\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.681436Z", "completed_at": "2024-08-04T03:35:17.685264Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.685649Z", "completed_at": "2024-08-04T03:35:17.685656Z"}], "thread_id": "Thread-1", "execution_time": 0.0050394535064697266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads_source.not_null_stg_apple_search_ads__search_term_report_date_day.fd93df3302", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_apple_search_ads_source.stg_apple_search_ads__search_term_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.687520Z", "completed_at": "2024-08-04T03:35:17.691624Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.692019Z", "completed_at": "2024-08-04T03:35:17.692025Z"}], "thread_id": "Thread-1", "execution_time": 0.005382061004638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_source_relation__account_id___fivetran_synced.f81aca1247", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, _fivetran_synced\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    group by source_relation, account_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.693867Z", "completed_at": "2024-08-04T03:35:17.698617Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.698994Z", "completed_at": "2024-08-04T03:35:17.699001Z"}], "thread_id": "Thread-1", "execution_time": 0.005980730056762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__account_history__fivetran_synced.0570e35e1f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.700843Z", "completed_at": "2024-08-04T03:35:17.704735Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.705121Z", "completed_at": "2024-08-04T03:35:17.705128Z"}], "thread_id": "Thread-1", "execution_time": 0.005116462707519531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__account_history_account_id.f1cf38c40f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.706943Z", "completed_at": "2024-08-04T03:35:17.711032Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.711442Z", "completed_at": "2024-08-04T03:35:17.711449Z"}], "thread_id": "Thread-1", "execution_time": 0.005346059799194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_source_relation__ad_id__updated_at.664b870e6c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, updated_at\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\n    group by source_relation, ad_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.713263Z", "completed_at": "2024-08-04T03:35:17.717188Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.717566Z", "completed_at": "2024-08-04T03:35:17.717572Z"}], "thread_id": "Thread-1", "execution_time": 0.005140066146850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_ad_id.11429d3064", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.719395Z", "completed_at": "2024-08-04T03:35:17.724252Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.724632Z", "completed_at": "2024-08-04T03:35:17.724638Z"}], "thread_id": "Thread-1", "execution_time": 0.0060956478118896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_updated_at.250a5a84e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.726453Z", "completed_at": "2024-08-04T03:35:17.730582Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.730972Z", "completed_at": "2024-08-04T03:35:17.730978Z"}], "thread_id": "Thread-1", "execution_time": 0.005354642868041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_source_relation__ad_set_id__updated_at.ff1d43114a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_set_id, updated_at\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\n    group by source_relation, ad_set_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.732828Z", "completed_at": "2024-08-04T03:35:17.736714Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.737095Z", "completed_at": "2024-08-04T03:35:17.737101Z"}], "thread_id": "Thread-1", "execution_time": 0.005102634429931641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_ad_set_id.e19a1df1bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_set_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\nwhere ad_set_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.738906Z", "completed_at": "2024-08-04T03:35:17.742735Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.743120Z", "completed_at": "2024-08-04T03:35:17.743126Z"}], "thread_id": "Thread-1", "execution_time": 0.005052328109741211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_updated_at.ef7fafe0fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.745008Z", "completed_at": "2024-08-04T03:35:17.751075Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.751480Z", "completed_at": "2024-08-04T03:35:17.751487Z"}], "thread_id": "Thread-1", "execution_time": 0.007317543029785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__account_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        accounts.account_status,\n        accounts.business_country_code,\n        accounts.created_at,\n        accounts.currency,\n        accounts.timezone_name,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__account_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.753504Z", "completed_at": "2024-08-04T03:35:17.757578Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.757971Z", "completed_at": "2024-08-04T03:35:17.757977Z"}], "thread_id": "Thread-1", "execution_time": 0.005468845367431641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_source_relation__date_day__ad_id__account_id.9c647961f0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, ad_id, account_id\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n    group by source_relation, date_day, ad_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.759925Z", "completed_at": "2024-08-04T03:35:17.763727Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.764112Z", "completed_at": "2024-08-04T03:35:17.764118Z"}], "thread_id": "Thread-1", "execution_time": 0.005149364471435547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_account_id.d06f6d861b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.765924Z", "completed_at": "2024-08-04T03:35:17.769783Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.770158Z", "completed_at": "2024-08-04T03:35:17.770165Z"}], "thread_id": "Thread-1", "execution_time": 0.005072593688964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_ad_id.2611b250fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.771991Z", "completed_at": "2024-08-04T03:35:17.779825Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.780197Z", "completed_at": "2024-08-04T03:35:17.780203Z"}], "thread_id": "Thread-1", "execution_time": 0.009074211120605469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\n    where is_most_recent_record = true\n\n),\n\nad_sets as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ads.ad_id,\n        ads.ad_name,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.782287Z", "completed_at": "2024-08-04T03:35:17.789184Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.789567Z", "completed_at": "2024-08-04T03:35:17.789573Z"}], "thread_id": "Thread-1", "execution_time": 0.008250236511230469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__ad_set_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\n    where is_most_recent_record = true\n\n),\n\nad_sets as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ad_sets.start_at,\n        ad_sets.end_at,\n        ad_sets.bid_strategy,\n        ad_sets.daily_budget,\n        ad_sets.budget_remaining,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__ad_set_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.791570Z", "completed_at": "2024-08-04T03:35:17.797957Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.798338Z", "completed_at": "2024-08-04T03:35:17.798344Z"}], "thread_id": "Thread-1", "execution_time": 0.007766246795654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        campaigns.start_at,\n        campaigns.end_at,\n        campaigns.status,\n        campaigns.daily_budget,\n        campaigns.lifetime_budget,\n        campaigns.budget_remaining,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.800362Z", "completed_at": "2024-08-04T03:35:17.805444Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.805840Z", "completed_at": "2024-08-04T03:35:17.805849Z"}], "thread_id": "Thread-1", "execution_time": 0.006476163864135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_source_relation__campaign_id__updated_at.82c4f9a2a1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, updated_at\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\n    group by source_relation, campaign_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.807717Z", "completed_at": "2024-08-04T03:35:17.811529Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.811915Z", "completed_at": "2024-08-04T03:35:17.811921Z"}], "thread_id": "Thread-1", "execution_time": 0.0050640106201171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_campaign_id.1ca7a83852", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.813722Z", "completed_at": "2024-08-04T03:35:17.817555Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.817935Z", "completed_at": "2024-08-04T03:35:17.817942Z"}], "thread_id": "Thread-1", "execution_time": 0.0050449371337890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_updated_at.9e59f99270", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.819748Z", "completed_at": "2024-08-04T03:35:17.823761Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.824142Z", "completed_at": "2024-08-04T03:35:17.824148Z"}], "thread_id": "Thread-1", "execution_time": 0.00523829460144043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__url_tags", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history\n    where is_most_recent_record = true\n), \n\nrequired_fields as (\n\n    select\n        source_relation,\n        _fivetran_id,\n        creative_id,\n        url_tags\n    from base\n    where url_tags is not null\n), \n\n\n\n  cleaned_fields as (\n\n      select\n          source_relation,\n          _fivetran_id,\n          creative_id,\n          parse_json(url_tags) as url_tags\n      from required_fields\n      where url_tags is not null\n  ), \n\n  fields as (\n\n      select\n          source_relation,\n          _fivetran_id,\n          creative_id,\n          url_tags.value:key::string as key,\n          url_tags.value:value::string as value,\n          url_tags.value:type::string as type\n      from cleaned_fields,\n      lateral flatten( input => url_tags ) as url_tags\n  )\n\n \n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__url_tags"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.826136Z", "completed_at": "2024-08-04T03:35:17.831243Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.831655Z", "completed_at": "2024-08-04T03:35:17.831661Z"}], "thread_id": "Thread-1", "execution_time": 0.0065155029296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_source_relation___fivetran_id.2466dae947", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, _fivetran_id\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history\n    group by source_relation, _fivetran_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.833579Z", "completed_at": "2024-08-04T03:35:17.837384Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.837767Z", "completed_at": "2024-08-04T03:35:17.837774Z"}], "thread_id": "Thread-1", "execution_time": 0.005036592483520508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__creative_history__fivetran_synced.3b0593cb4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.839621Z", "completed_at": "2024-08-04T03:35:17.843414Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.843819Z", "completed_at": "2024-08-04T03:35:17.843826Z"}], "thread_id": "Thread-1", "execution_time": 0.005110979080200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__creative_history_creative_id.eb4d804261", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.845652Z", "completed_at": "2024-08-04T03:35:17.849794Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.850187Z", "completed_at": "2024-08-04T03:35:17.850193Z"}], "thread_id": "Thread-1", "execution_time": 0.005381584167480469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_history_source_relation__account_id__updated_at.0a4d931c44", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, updated_at\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__account_history\n    group by source_relation, account_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.852017Z", "completed_at": "2024-08-04T03:35:17.856854Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.857233Z", "completed_at": "2024-08-04T03:35:17.857239Z"}], "thread_id": "Thread-1", "execution_time": 0.006073474884033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__account_history_account_id.5ca373f51f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__account_history\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.859148Z", "completed_at": "2024-08-04T03:35:17.864448Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.864831Z", "completed_at": "2024-08-04T03:35:17.864837Z"}], "thread_id": "Thread-1", "execution_time": 0.0066106319427490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__account_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__account_stats\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__account_history\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        stats.account_id,\n        accounts.currency_code,\n        accounts.auto_tagging_enabled,\n        accounts.time_zone,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(stats.conversions) as conversions,\n        sum(stats.conversions_value) as conversions_value,\n        sum(stats.view_through_conversions) as view_through_conversions\n\n        \n\n\n\n\n\n    from stats\n    left join accounts\n        on stats.account_id = accounts.account_id\n        and stats.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_google_ads.google_ads__account_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.866833Z", "completed_at": "2024-08-04T03:35:17.870873Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.871253Z", "completed_at": "2024-08-04T03:35:17.871259Z"}], "thread_id": "Thread-1", "execution_time": 0.005414485931396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_stats_source_relation__account_id__device__ad_network_type__date_day.7d4d5e9ce2", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, device, ad_network_type, date_day\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__account_stats\n    group by source_relation, account_id, device, ad_network_type, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.873108Z", "completed_at": "2024-08-04T03:35:17.877771Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.878151Z", "completed_at": "2024-08-04T03:35:17.878157Z"}], "thread_id": "Thread-1", "execution_time": 0.00589299201965332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__account_stats_account_id.2a9da5417b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__account_stats\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.879969Z", "completed_at": "2024-08-04T03:35:17.883796Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.884176Z", "completed_at": "2024-08-04T03:35:17.884182Z"}], "thread_id": "Thread-1", "execution_time": 0.005062580108642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__account_stats_date_day.57ac8772d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__account_stats\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.886018Z", "completed_at": "2024-08-04T03:35:17.890170Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.890555Z", "completed_at": "2024-08-04T03:35:17.890562Z"}], "thread_id": "Thread-1", "execution_time": 0.005385398864746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_criterion_history_source_relation__criterion_id__ad_group_id__updated_at.8d37dd2fa0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, criterion_id, ad_group_id, updated_at\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_criterion_history\n    group by source_relation, criterion_id, ad_group_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.892392Z", "completed_at": "2024-08-04T03:35:17.896498Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.896895Z", "completed_at": "2024-08-04T03:35:17.896902Z"}], "thread_id": "Thread-1", "execution_time": 0.005338191986083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_group_criterion_history_criterion_id.7a0a8b8476", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect criterion_id\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_criterion_history\nwhere criterion_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.898716Z", "completed_at": "2024-08-04T03:35:17.903825Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.904211Z", "completed_at": "2024-08-04T03:35:17.904217Z"}], "thread_id": "Thread-1", "execution_time": 0.006339073181152344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_history_source_relation__ad_group_id__updated_at.94eb3f93a4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, updated_at\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_history\n    group by source_relation, ad_group_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.906047Z", "completed_at": "2024-08-04T03:35:17.909849Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.910223Z", "completed_at": "2024-08-04T03:35:17.910229Z"}], "thread_id": "Thread-1", "execution_time": 0.0050165653228759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_group_history_ad_group_id.f6c7c939be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_history\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.912085Z", "completed_at": "2024-08-04T03:35:17.916149Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.916540Z", "completed_at": "2024-08-04T03:35:17.916552Z"}], "thread_id": "Thread-1", "execution_time": 0.005336284637451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_stats_source_relation__ad_group_id__device__ad_network_type__date_day.0755df524f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, device, ad_network_type, date_day\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_stats\n    group by source_relation, ad_group_id, device, ad_network_type, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.918354Z", "completed_at": "2024-08-04T03:35:17.922306Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.922687Z", "completed_at": "2024-08-04T03:35:17.922694Z"}], "thread_id": "Thread-1", "execution_time": 0.0051708221435546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_group_stats_ad_group_id.a8d430f077", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_stats\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.924528Z", "completed_at": "2024-08-04T03:35:17.929806Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.930183Z", "completed_at": "2024-08-04T03:35:17.930189Z"}], "thread_id": "Thread-1", "execution_time": 0.006486654281616211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_group_stats_date_day.3c6a221786", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_stats\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.932054Z", "completed_at": "2024-08-04T03:35:17.936095Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.936475Z", "completed_at": "2024-08-04T03:35:17.936481Z"}], "thread_id": "Thread-1", "execution_time": 0.0053081512451171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_history_source_relation__ad_id__ad_group_id__updated_at.edca86664e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, ad_group_id, updated_at\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_history\n    group by source_relation, ad_id, ad_group_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.938319Z", "completed_at": "2024-08-04T03:35:17.942173Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.942540Z", "completed_at": "2024-08-04T03:35:17.942553Z"}], "thread_id": "Thread-1", "execution_time": 0.005071878433227539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_history_ad_id.8c23c38248", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__ad_history\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.944444Z", "completed_at": "2024-08-04T03:35:17.949450Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.949843Z", "completed_at": "2024-08-04T03:35:17.949849Z"}], "thread_id": "Thread-1", "execution_time": 0.006257772445678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_stats_source_relation__ad_id__ad_network_type__device__ad_group_id__keyword_ad_group_criterion__date_day.222a7d9413", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, ad_network_type, device, ad_group_id, keyword_ad_group_criterion, date_day\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_stats\n    group by source_relation, ad_id, ad_network_type, device, ad_group_id, keyword_ad_group_criterion, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.951685Z", "completed_at": "2024-08-04T03:35:17.955492Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.955884Z", "completed_at": "2024-08-04T03:35:17.955891Z"}], "thread_id": "Thread-1", "execution_time": 0.005062580108642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_stats_ad_id.2612d83cc8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__ad_stats\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.958061Z", "completed_at": "2024-08-04T03:35:17.961902Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.962272Z", "completed_at": "2024-08-04T03:35:17.962278Z"}], "thread_id": "Thread-1", "execution_time": 0.0052220821380615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_stats_date_day.9a43c0fce4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__ad_stats\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.964152Z", "completed_at": "2024-08-04T03:35:17.970959Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.971329Z", "completed_at": "2024-08-04T03:35:17.971335Z"}], "thread_id": "Thread-1", "execution_time": 0.008068323135375977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__ad_group_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_stats\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__account_history\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        accounts.currency_code,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        stats.ad_group_id,\n        ad_groups.ad_group_status,\n        ad_groups.ad_group_type,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(conversions) as conversions,\n        sum(conversions_value) as conversions_value,\n        sum(view_through_conversions) as view_through_conversions\n\n        \n\n\n\n\n\n    from stats\n    left join ad_groups\n        on stats.ad_group_id = ad_groups.ad_group_id\n        and stats.source_relation = ad_groups.source_relation\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n        and ad_groups.source_relation = campaigns.source_relation\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n        and campaigns.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_google_ads.google_ads__ad_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.973504Z", "completed_at": "2024-08-04T03:35:17.981662Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.982034Z", "completed_at": "2024-08-04T03:35:17.982040Z"}], "thread_id": "Thread-1", "execution_time": 0.009645938873291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_stats\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__account_history\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_history\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_history\n    where is_most_recent_record = True\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_history\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        accounts.currency_code,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        stats.ad_group_id,\n        stats.ad_id,\n        ads.ad_name,\n        ads.ad_status,\n        ads.ad_type,\n        ads.display_url,\n        ads.source_final_urls,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(conversions) as conversions,\n        sum(conversions_value) as conversions_value,\n        sum(view_through_conversions) as view_through_conversions\n\n        \n\n\n\n\n\n    from stats\n    left join ads\n        on stats.ad_id = ads.ad_id\n        and stats.source_relation = ads.source_relation\n        and stats.ad_group_id = ads.ad_group_id\n    left join ad_groups\n        on ads.ad_group_id = ad_groups.ad_group_id\n        and ads.source_relation = ad_groups.source_relation\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n        and ad_groups.source_relation = campaigns.source_relation\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n        and campaigns.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_google_ads.google_ads__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.984065Z", "completed_at": "2024-08-04T03:35:17.992849Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.993228Z", "completed_at": "2024-08-04T03:35:17.993234Z"}], "thread_id": "Thread-1", "execution_time": 0.010247945785522461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__url_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_stats\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__account_history\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_history\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_history\n    where is_most_recent_record = True\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_history\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        accounts.currency_code,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        stats.ad_group_id,\n        stats.ad_id,\n        ads.base_url,\n        ads.url_host,\n        ads.url_path,\n\n        \n\n        ads.utm_source,\n        ads.utm_medium,\n        ads.utm_campaign,\n        ads.utm_content,\n        \n        \n\n        ads.utm_term,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(conversions) as conversions,\n        sum(conversions_value) as conversions_value,\n        sum(view_through_conversions) as view_through_conversions\n\n        \n\n\n\n\n\n    from stats\n    left join ads\n        on stats.ad_id = ads.ad_id\n        and stats.source_relation = ads.source_relation\n        and stats.ad_group_id = ads.ad_group_id\n    left join ad_groups\n        on ads.ad_group_id = ad_groups.ad_group_id\n        and ads.source_relation = ad_groups.source_relation\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n        and ad_groups.source_relation = campaigns.source_relation\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n        and campaigns.source_relation = accounts.source_relation\n\n    \n        where ads.source_final_urls is not null\n    \n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_google_ads.google_ads__url_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:17.995267Z", "completed_at": "2024-08-04T03:35:17.999328Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:17.999738Z", "completed_at": "2024-08-04T03:35:17.999744Z"}], "thread_id": "Thread-1", "execution_time": 0.0054683685302734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_history_source_relation__campaign_id__updated_at.008fea6b77", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, updated_at\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_history\n    group by source_relation, campaign_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.001579Z", "completed_at": "2024-08-04T03:35:18.005419Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.005799Z", "completed_at": "2024-08-04T03:35:18.005806Z"}], "thread_id": "Thread-1", "execution_time": 0.0050640106201171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__campaign_history_campaign_id.fa0c825e75", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_history\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.007652Z", "completed_at": "2024-08-04T03:35:18.014470Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.015168Z", "completed_at": "2024-08-04T03:35:18.015174Z"}], "thread_id": "Thread-1", "execution_time": 0.008386373519897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_stats\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__account_history\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_history\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        accounts.currency_code,\n        campaigns.campaign_name,\n        stats.campaign_id,\n        campaigns.advertising_channel_type,\n        campaigns.advertising_channel_subtype,\n        campaigns.status,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(conversions) as conversions,\n        sum(conversions_value) as conversions_value,\n        sum(view_through_conversions) as view_through_conversions\n\n        \n\n\n\n\n\n    from stats\n    left join campaigns\n        on stats.campaign_id = campaigns.campaign_id\n        and stats.source_relation = campaigns.source_relation\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n        and campaigns.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_google_ads.google_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.017318Z", "completed_at": "2024-08-04T03:35:18.021470Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.021864Z", "completed_at": "2024-08-04T03:35:18.021870Z"}], "thread_id": "Thread-1", "execution_time": 0.005650043487548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_stats_source_relation__campaign_id__ad_network_type__device__date_day.fea3ecfe6f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, ad_network_type, device, date_day\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_stats\n    group by source_relation, campaign_id, ad_network_type, device, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.023796Z", "completed_at": "2024-08-04T03:35:18.027637Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.028022Z", "completed_at": "2024-08-04T03:35:18.028029Z"}], "thread_id": "Thread-1", "execution_time": 0.005190610885620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__campaign_stats_campaign_id.11587fa10f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_stats\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.029910Z", "completed_at": "2024-08-04T03:35:18.034577Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.034956Z", "completed_at": "2024-08-04T03:35:18.034962Z"}], "thread_id": "Thread-1", "execution_time": 0.0059626102447509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__campaign_stats_date_day.dc097fd76b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_stats\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.036844Z", "completed_at": "2024-08-04T03:35:18.044141Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.044516Z", "completed_at": "2024-08-04T03:35:18.044522Z"}], "thread_id": "Thread-1", "execution_time": 0.008588314056396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__keyword_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__keyword_stats\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__account_history\n    where is_most_recent_record = True\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__campaign_history\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\ncriterions as (\n\n    select *\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__ad_group_criterion_history\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        stats.account_id,\n        accounts.currency_code,\n        campaigns.campaign_name,\n        stats.campaign_id,\n        ad_groups.ad_group_name,\n        stats.ad_group_id,\n        stats.criterion_id,\n        criterions.type,\n        criterions.status,\n        criterions.keyword_match_type,\n        criterions.keyword_text,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(conversions) as conversions,\n        sum(conversions_value) as conversions_value,\n        sum(view_through_conversions) as view_through_conversions\n\n        \n\n\n\n\n\n    from stats\n    left join criterions\n        on stats.criterion_id = criterions.criterion_id\n        and stats.source_relation = criterions.source_relation\n    left join ad_groups\n        on stats.ad_group_id = ad_groups.ad_group_id\n        and stats.source_relation = ad_groups.source_relation\n    left join campaigns\n        on stats.campaign_id = campaigns.campaign_id\n        and stats.source_relation = campaigns.source_relation\n    left join accounts\n        on stats.account_id = accounts.account_id\n        and stats.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_google_ads.google_ads__keyword_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.046573Z", "completed_at": "2024-08-04T03:35:18.050710Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.051101Z", "completed_at": "2024-08-04T03:35:18.051107Z"}], "thread_id": "Thread-1", "execution_time": 0.005584239959716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__keyword_stats_source_relation__keyword_id__date_day.4ecf84a32f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, keyword_id, date_day\n    from TEST.PUBLIC_google_ads_source.stg_google_ads__keyword_stats\n    group by source_relation, keyword_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.052977Z", "completed_at": "2024-08-04T03:35:18.056890Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.057260Z", "completed_at": "2024-08-04T03:35:18.057266Z"}], "thread_id": "Thread-1", "execution_time": 0.005133152008056641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__keyword_stats_date_day.a9da72f74d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__keyword_stats\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.059109Z", "completed_at": "2024-08-04T03:35:18.063998Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.064369Z", "completed_at": "2024-08-04T03:35:18.064375Z"}], "thread_id": "Thread-1", "execution_time": 0.006108283996582031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__keyword_stats_keyword_id.f0945d6cf0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_google_ads_source.stg_google_ads__keyword_stats\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.066230Z", "completed_at": "2024-08-04T03:35:18.070321Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.070717Z", "completed_at": "2024-08-04T03:35:18.070723Z"}], "thread_id": "Thread-1", "execution_time": 0.005339622497558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_source_relation__account_id__version_tag.c7a0383d8c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, version_tag\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__account_history\n    group by source_relation, account_id, version_tag\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.072637Z", "completed_at": "2024-08-04T03:35:18.076558Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.076942Z", "completed_at": "2024-08-04T03:35:18.076948Z"}], "thread_id": "Thread-1", "execution_time": 0.0052280426025390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__account_history_account_id.a9fa7f93c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__account_history\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.078820Z", "completed_at": "2024-08-04T03:35:18.082699Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.083083Z", "completed_at": "2024-08-04T03:35:18.083090Z"}], "thread_id": "Thread-1", "execution_time": 0.005180835723876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__account_history_version_tag.58c46c5d81", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect version_tag\nfrom TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__account_history\nwhere version_tag is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.085036Z", "completed_at": "2024-08-04T03:35:18.090059Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.090440Z", "completed_at": "2024-08-04T03:35:18.090447Z"}], "thread_id": "Thread-1", "execution_time": 0.006337642669677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_source_relation__date_day__campaign_id.41aa0d6322", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, campaign_id\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_campaign\n    group by source_relation, date_day, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.092338Z", "completed_at": "2024-08-04T03:35:18.096165Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.096549Z", "completed_at": "2024-08-04T03:35:18.096556Z"}], "thread_id": "Thread-1", "execution_time": 0.005060434341430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id.d6ae242f1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_campaign\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.098402Z", "completed_at": "2024-08-04T03:35:18.102289Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.102677Z", "completed_at": "2024-08-04T03:35:18.102683Z"}], "thread_id": "Thread-1", "execution_time": 0.00512385368347168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day.ef97bed766", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_campaign\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.104595Z", "completed_at": "2024-08-04T03:35:18.109480Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.109872Z", "completed_at": "2024-08-04T03:35:18.109878Z"}], "thread_id": "Thread-1", "execution_time": 0.0061419010162353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_source_relation__date_day__creative_id.7b7d839d38", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, creative_id\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_creative\n    group by source_relation, date_day, creative_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.111801Z", "completed_at": "2024-08-04T03:35:18.115672Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.116056Z", "completed_at": "2024-08-04T03:35:18.116062Z"}], "thread_id": "Thread-1", "execution_time": 0.0052106380462646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id.062abfe14b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_creative\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.117897Z", "completed_at": "2024-08-04T03:35:18.121692Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.122070Z", "completed_at": "2024-08-04T03:35:18.122076Z"}], "thread_id": "Thread-1", "execution_time": 0.005014657974243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day.cb81bc4766", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_creative\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.123979Z", "completed_at": "2024-08-04T03:35:18.128099Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.128477Z", "completed_at": "2024-08-04T03:35:18.128483Z"}], "thread_id": "Thread-1", "execution_time": 0.0054013729095458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_source_relation__last_modified_at__campaign_group_id.4c9f328639", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, last_modified_at, campaign_group_id\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_group_history\n    group by source_relation, last_modified_at, campaign_group_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.130381Z", "completed_at": "2024-08-04T03:35:18.135396Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.135781Z", "completed_at": "2024-08-04T03:35:18.135787Z"}], "thread_id": "Thread-1", "execution_time": 0.0063419342041015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id.3888f3777d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_group_id\nfrom TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_group_history\nwhere campaign_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.137660Z", "completed_at": "2024-08-04T03:35:18.141729Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.142113Z", "completed_at": "2024-08-04T03:35:18.142120Z"}], "thread_id": "Thread-1", "execution_time": 0.0053598880767822266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_last_modified_at.a716e2a7ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_modified_at\nfrom TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_group_history\nwhere last_modified_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.144056Z", "completed_at": "2024-08-04T03:35:18.150933Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.151310Z", "completed_at": "2024-08-04T03:35:18.151316Z"}], "thread_id": "Thread-1", "execution_time": 0.008249282836914062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin.linkedin_ads__account_report", "compiled": true, "compiled_code": "\n\nwith account as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__account_history\n    where is_latest_version\n),\n\ncampaign as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_history\n    where is_latest_version\n),\n\nreport as (\n\n    select *,\n        \n            external_website_conversions + one_click_leads as total_conversions\n        \n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_campaign\n),\n\nfinal as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        account.account_id,\n        account.account_name,\n        account.version_tag,\n        account.currency,\n        account.status,\n        account.type,\n        account.last_modified_at,\n        account.created_at,\n        sum(report.total_conversions) as total_conversions,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.cost) as cost,\n        sum(coalesce(report.conversion_value_in_local_currency, 0)) as conversion_value_in_local_currency\n\n        \n\n\n\n    \n\n\n\n    \n\n\n\n    \n        \n        , sum(coalesce(external_website_conversions, 0)) as external_website_conversions\n        \n    \n        \n        , sum(coalesce(one_click_leads, 0)) as one_click_leads\n        \n    \n\n\n\n\n        \n\n\n\n\n\n\n    from report \n    left join campaign \n        on report.campaign_id = campaign.campaign_id\n        and report.source_relation = campaign.source_relation\n    left join account \n        on campaign.account_id = account.account_id\n        and campaign.source_relation = account.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10\n\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_linkedin_ads.linkedin_ads__account_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.153252Z", "completed_at": "2024-08-04T03:35:18.160914Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.161290Z", "completed_at": "2024-08-04T03:35:18.161297Z"}], "thread_id": "Thread-1", "execution_time": 0.008990764617919922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin.linkedin_ads__campaign_group_report", "compiled": true, "compiled_code": "\n\nwith campaign_group as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_group_history\n    where is_latest_version\n),\n\ncampaign as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_history\n    where is_latest_version\n),\n\naccount as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__account_history\n    where is_latest_version\n),\n\nreport as (\n\n    select *,\n        \n            external_website_conversions + one_click_leads as total_conversions\n        \n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_campaign\n),\n\nfinal as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        campaign_group.campaign_group_id,\n        campaign_group.campaign_group_name,\n        account.account_id,\n        account.account_name,\n        campaign_group.status,\n        account.currency,\n        campaign_group.is_backfilled,\n        campaign_group.run_schedule_start_at,\n        campaign_group.run_schedule_end_at,\n        campaign_group.last_modified_at,\n        campaign_group.created_at,\n        sum(report.total_conversions) as total_conversions,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.cost) as cost,\n        sum(coalesce(report.conversion_value_in_local_currency, 0)) as conversion_value_in_local_currency\n\n        \n\n\n\n    \n\n\n\n    \n\n\n\n    \n        \n        , sum(coalesce(external_website_conversions, 0)) as external_website_conversions\n        \n    \n        \n        , sum(coalesce(one_click_leads, 0)) as one_click_leads\n        \n    \n\n\n\n\n        \n\n\n\n\n\n    from report \n    left join campaign \n        on report.campaign_id = campaign.campaign_id\n        and report.source_relation = campaign.source_relation\n    left join campaign_group\n        on campaign.campaign_group_id = campaign_group.campaign_group_id\n        and campaign.source_relation = campaign_group.source_relation\n    left join account \n        on campaign.account_id = account.account_id\n        and campaign.source_relation = account.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_linkedin_ads.linkedin_ads__campaign_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.163280Z", "completed_at": "2024-08-04T03:35:18.171964Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.172343Z", "completed_at": "2024-08-04T03:35:18.172349Z"}], "thread_id": "Thread-1", "execution_time": 0.010088920593261719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin.linkedin_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith campaign as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_history\n    where is_latest_version\n),\n\ncampaign_group as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_group_history\n    where is_latest_version\n),\n\naccount as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__account_history\n    where is_latest_version\n),\n\nreport as (\n\n    select *,\n        \n            external_website_conversions + one_click_leads as total_conversions\n        \n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_campaign\n),\n\nfinal as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        report.campaign_id,\n        campaign.campaign_name,\n        campaign.version_tag,\n        campaign_group.campaign_group_id,\n        campaign_group.campaign_group_name,\n        account.account_id,\n        account.account_name,\n        campaign.status as campaign_status,\n        campaign_group.status as campaign_group_status,\n        campaign.type,\n        campaign.cost_type,\n        campaign.creative_selection,\n        campaign.daily_budget_amount,\n        campaign.daily_budget_currency_code,\n        campaign.unit_cost_amount,\n        campaign.unit_cost_currency_code,\n        account.currency,\n        campaign.format,\n        campaign.locale_country,\n        campaign.locale_language,\n        campaign.objective_type,\n        campaign.optimization_target_type,\n        campaign.is_audience_expansion_enabled,\n        campaign.is_offsite_delivery_enabled,\n        campaign.run_schedule_start_at,\n        campaign.run_schedule_end_at,\n        campaign.last_modified_at,\n        campaign.created_at,\n        sum(report.total_conversions) as total_conversions,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.cost) as cost,\n        sum(coalesce(report.conversion_value_in_local_currency, 0)) as conversion_value_in_local_currency\n\n        \n\n\n\n    \n\n\n\n    \n\n\n\n    \n        \n        , sum(coalesce(external_website_conversions, 0)) as external_website_conversions\n        \n    \n        \n        , sum(coalesce(one_click_leads, 0)) as one_click_leads\n        \n    \n\n\n\n\n        \n\n\n\n\n\n    from report \n    left join campaign \n        on report.campaign_id = campaign.campaign_id\n        and report.source_relation = campaign.source_relation\n    left join campaign_group\n        on campaign.campaign_group_id = campaign_group.campaign_group_id\n        and campaign.source_relation = campaign_group.source_relation\n    left join account \n        on campaign.account_id = account.account_id\n        and campaign.source_relation = account.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30\n\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_linkedin_ads.linkedin_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.174375Z", "completed_at": "2024-08-04T03:35:18.178417Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.178807Z", "completed_at": "2024-08-04T03:35:18.178813Z"}], "thread_id": "Thread-1", "execution_time": 0.00542449951171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_source_relation__version_tag__campaign_id.65ed9cedae", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, version_tag, campaign_id\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_history\n    group by source_relation, version_tag, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.180710Z", "completed_at": "2024-08-04T03:35:18.184536Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.184922Z", "completed_at": "2024-08-04T03:35:18.184928Z"}], "thread_id": "Thread-1", "execution_time": 0.005123138427734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_campaign_id.b026971ca2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_history\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.186790Z", "completed_at": "2024-08-04T03:35:18.191304Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.191706Z", "completed_at": "2024-08-04T03:35:18.191713Z"}], "thread_id": "Thread-1", "execution_time": 0.005822896957397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_version_tag.64954cc469", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect version_tag\nfrom TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_history\nwhere version_tag is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.193581Z", "completed_at": "2024-08-04T03:35:18.201787Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.202161Z", "completed_at": "2024-08-04T03:35:18.202167Z"}], "thread_id": "Thread-1", "execution_time": 0.009485006332397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin.linkedin_ads__creative_report", "compiled": true, "compiled_code": "\n\nwith creative as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__creative_history\n    where is_latest_version\n),\n\ncampaign as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_history\n    where is_latest_version\n),\n\ncampaign_group as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_group_history\n    where is_latest_version\n),\n\naccount as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__account_history\n    where is_latest_version\n),\n\nreport as (\n\n    select *,\n        \n            external_website_conversions + one_click_leads as total_conversions\n        \n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_creative\n),\n\nfinal as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        report.creative_id,\n        campaign.campaign_id,\n        campaign.campaign_name,\n        campaign_group.campaign_group_id,\n        campaign_group.campaign_group_name,\n        account.account_id,\n        account.account_name,\n        creative.click_uri,\n        creative.status as creative_status,\n        campaign.status as campaign_status,\n        campaign_group.status as campaign_group_status,\n        account.currency,\n        creative.last_modified_at,\n        creative.created_at,\n        sum(report.total_conversions) as total_conversions,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.cost) as cost,\n        sum(coalesce(report.conversion_value_in_local_currency, 0)) as conversion_value_in_local_currency  \n\n        \n\n\n\n    \n\n\n\n    \n\n\n\n    \n        \n        , sum(coalesce(external_website_conversions, 0)) as external_website_conversions\n        \n    \n        \n        , sum(coalesce(one_click_leads, 0)) as one_click_leads\n        \n    \n\n\n\n\n        \n\n\n\n\n    \n    from report \n    left join creative \n        on report.creative_id = creative.creative_id\n        and report.source_relation = creative.source_relation\n    left join campaign \n        on creative.campaign_id = campaign.campaign_id\n        and creative.source_relation = campaign.source_relation\n    left join campaign_group\n        on campaign.campaign_group_id = campaign_group.campaign_group_id\n        and campaign.source_relation = campaign_group.source_relation\n    left join account \n        on campaign.account_id = account.account_id\n        and campaign.source_relation = account.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\n\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_linkedin_ads.linkedin_ads__creative_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.204190Z", "completed_at": "2024-08-04T03:35:18.212561Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.212944Z", "completed_at": "2024-08-04T03:35:18.212950Z"}], "thread_id": "Thread-1", "execution_time": 0.009829521179199219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin.linkedin_ads__url_report", "compiled": true, "compiled_code": "\n\nwith creative as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__creative_history\n    where is_latest_version\n),\n\ncampaign as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_history\n    where is_latest_version\n),\n\ncampaign_group as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__campaign_group_history\n    where is_latest_version\n),\n\naccount as (\n\n    select *\n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__account_history\n    where is_latest_version\n),\n\nreport as (\n\n    select *,\n        \n            external_website_conversions + one_click_leads as total_conversions\n        \n    from TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__ad_analytics_by_creative\n),\n\nfinal as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        creative.click_uri,\n        creative.base_url,\n        creative.url_host,\n        creative.url_path,\n        creative.utm_source,\n        creative.utm_medium,\n        creative.utm_campaign,\n        creative.utm_content,\n        creative.utm_term,\n        report.creative_id,\n        campaign.campaign_id,\n        campaign.campaign_name,\n        campaign_group.campaign_group_id,\n        campaign_group.campaign_group_name,\n        account.account_id,\n        account.account_name,\n        account.currency,\n        sum(report.total_conversions) as total_conversions,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.cost) as cost,\n        sum(coalesce(report.conversion_value_in_local_currency, 0)) as conversion_value_in_local_currency\n\n        \n\n\n\n    \n\n\n\n    \n\n\n\n    \n        \n        , sum(coalesce(external_website_conversions, 0)) as external_website_conversions\n        \n    \n        \n        , sum(coalesce(one_click_leads, 0)) as one_click_leads\n        \n    \n\n\n\n\n        \n\n\n\n\n\n    from report \n    left join creative \n        on report.creative_id = creative.creative_id\n        and report.source_relation = creative.source_relation\n    left join campaign \n        on creative.campaign_id = campaign.campaign_id\n        and creative.source_relation = campaign.source_relation\n    left join campaign_group\n        on campaign.campaign_group_id = campaign_group.campaign_group_id\n        and campaign.source_relation = campaign_group.source_relation\n    left join account \n        on campaign.account_id = account.account_id\n        and campaign.source_relation = account.source_relation\n\n    \n        where creative.click_uri is not null\n    \n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19\n\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_linkedin_ads.linkedin_ads__url_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.214958Z", "completed_at": "2024-08-04T03:35:18.218949Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.219332Z", "completed_at": "2024-08-04T03:35:18.219338Z"}], "thread_id": "Thread-1", "execution_time": 0.005445957183837891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__creative_history_creative_id.4d51d55474", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom TEST.PUBLIC_linkedin_ads_source.stg_linkedin_ads__creative_history\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.221263Z", "completed_at": "2024-08-04T03:35:18.226307Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.226711Z", "completed_at": "2024-08-04T03:35:18.226717Z"}], "thread_id": "Thread-1", "execution_time": 0.006330251693725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_daily_report_source_relation__date_day__account_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.38a7aa3e12", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, device_os, device_type, network, currency_code, ad_distribution, bid_match_type, delivered_match_type, top_vs_other\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_daily_report\n    group by source_relation, date_day, account_id, device_os, device_type, network, currency_code, ad_distribution, bid_match_type, delivered_match_type, top_vs_other\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.228612Z", "completed_at": "2024-08-04T03:35:18.232412Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.232792Z", "completed_at": "2024-08-04T03:35:18.232801Z"}], "thread_id": "Thread-1", "execution_time": 0.005038261413574219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.not_null_stg_microsoft_ads__account_daily_report_account_id.b17f45fe79", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_daily_report\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.234652Z", "completed_at": "2024-08-04T03:35:18.239720Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.240102Z", "completed_at": "2024-08-04T03:35:18.240109Z"}], "thread_id": "Thread-1", "execution_time": 0.00629734992980957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads.microsoft_ads__account_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_daily_report\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history\n    where is_most_recent_record = True\n)\n\n, joined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        accounts.account_name,\n        report.account_id,\n        accounts.time_zone as account_timezone,\n        report.device_os,\n        report.device_type,\n        report.network,\n        report.currency_code,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_microsoft_ads.microsoft_ads__account_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.242136Z", "completed_at": "2024-08-04T03:35:18.247020Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.247439Z", "completed_at": "2024-08-04T03:35:18.247445Z"}], "thread_id": "Thread-1", "execution_time": 0.006292819976806641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_history_source_relation__account_id__modified_at.c32440cfcf", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, modified_at\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history\n    group by source_relation, account_id, modified_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.249308Z", "completed_at": "2024-08-04T03:35:18.253120Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.253496Z", "completed_at": "2024-08-04T03:35:18.253502Z"}], "thread_id": "Thread-1", "execution_time": 0.005045413970947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.not_null_stg_microsoft_ads__account_history_account_id.cc273ee54e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.255427Z", "completed_at": "2024-08-04T03:35:18.259490Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.259902Z", "completed_at": "2024-08-04T03:35:18.259908Z"}], "thread_id": "Thread-1", "execution_time": 0.005376338958740234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_daily_report_source_relation__date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.b6f971641a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, device_os, device_type, network, language, currency_code, ad_distribution, bid_match_type, delivered_match_type, top_vs_other\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_daily_report\n    group by source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, device_os, device_type, network, language, currency_code, ad_distribution, bid_match_type, delivered_match_type, top_vs_other\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.261816Z", "completed_at": "2024-08-04T03:35:18.265724Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.266108Z", "completed_at": "2024-08-04T03:35:18.266114Z"}], "thread_id": "Thread-1", "execution_time": 0.005216836929321289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_daily_report_ad_id.1ed6689aa8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_daily_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.268096Z", "completed_at": "2024-08-04T03:35:18.273088Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.273491Z", "completed_at": "2024-08-04T03:35:18.273497Z"}], "thread_id": "Thread-1", "execution_time": 0.006400585174560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_daily_report_source_relation__date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.3825c46fa1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_group_id, device_os, device_type, network, language, currency_code, ad_distribution, bid_match_type, delivered_match_type, top_vs_other\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_daily_report\n    group by source_relation, date_day, account_id, campaign_id, ad_group_id, device_os, device_type, network, language, currency_code, ad_distribution, bid_match_type, delivered_match_type, top_vs_other\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.275479Z", "completed_at": "2024-08-04T03:35:18.392436Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.392838Z", "completed_at": "2024-08-04T03:35:18.392848Z"}], "thread_id": "Thread-1", "execution_time": 0.11837148666381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id.3e03e6eff7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_daily_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.394811Z", "completed_at": "2024-08-04T03:35:18.398916Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.399298Z", "completed_at": "2024-08-04T03:35:18.399304Z"}], "thread_id": "Thread-1", "execution_time": 0.0053822994232177734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_history_source_relation__ad_group_id__modified_at.f2ed2b82b0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, modified_at\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_history\n    group by source_relation, ad_group_id, modified_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.401163Z", "completed_at": "2024-08-04T03:35:18.404978Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.405370Z", "completed_at": "2024-08-04T03:35:18.405376Z"}], "thread_id": "Thread-1", "execution_time": 0.0050504207611083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_history_ad_group_id.c8353342b7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_history\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.407285Z", "completed_at": "2024-08-04T03:35:18.411967Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.412349Z", "completed_at": "2024-08-04T03:35:18.412355Z"}], "thread_id": "Thread-1", "execution_time": 0.006003856658935547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_history_source_relation__ad_id__modified_at.2eb6255160", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, modified_at\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_history\n    group by source_relation, ad_id, modified_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.414299Z", "completed_at": "2024-08-04T03:35:18.418114Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.418485Z", "completed_at": "2024-08-04T03:35:18.418491Z"}], "thread_id": "Thread-1", "execution_time": 0.005049467086791992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_history_ad_id.6d02c26574", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_history\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.420426Z", "completed_at": "2024-08-04T03:35:18.424525Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.424936Z", "completed_at": "2024-08-04T03:35:18.424942Z"}], "thread_id": "Thread-1", "execution_time": 0.0053942203521728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_daily_report_source_relation__date_day__account_id__campaign_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other__budget_association_status__budget_name__budget_status.f7a5fd8430", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, device_os, device_type, network, currency_code, ad_distribution, bid_match_type, delivered_match_type, top_vs_other, budget_association_status, budget_name, budget_status\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_daily_report\n    group by source_relation, date_day, account_id, campaign_id, device_os, device_type, network, currency_code, ad_distribution, bid_match_type, delivered_match_type, top_vs_other, budget_association_status, budget_name, budget_status\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.426852Z", "completed_at": "2024-08-04T03:35:18.430662Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.431047Z", "completed_at": "2024-08-04T03:35:18.431053Z"}], "thread_id": "Thread-1", "execution_time": 0.005120754241943359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_daily_report_campaign_id.8ac0418e84", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_daily_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.432950Z", "completed_at": "2024-08-04T03:35:18.440160Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.440531Z", "completed_at": "2024-08-04T03:35:18.440537Z"}], "thread_id": "Thread-1", "execution_time": 0.008496284484863281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads.microsoft_ads__ad_group_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_daily_report\n\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_history\n    where is_most_recent_record = True\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_history\n    where is_most_recent_record = True\n),\n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history\n    where is_most_recent_record = True\n),\n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        accounts.account_name,\n        report.account_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        ad_groups.ad_group_name,\n        report.ad_group_id,\n        report.device_os,\n        report.device_type,\n        report.network,\n        report.currency_code,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join campaigns\n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n    left join ad_groups\n        on report.ad_group_id = ad_groups.ad_group_id\n        and report.source_relation = ad_groups.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_microsoft_ads.microsoft_ads__ad_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.442558Z", "completed_at": "2024-08-04T03:35:18.449421Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.449807Z", "completed_at": "2024-08-04T03:35:18.449813Z"}], "thread_id": "Thread-1", "execution_time": 0.008313417434692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads.microsoft_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_daily_report\n\n), \n\nads as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_history\n    where is_most_recent_record = True\n\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_history\n    where is_most_recent_record = True\n\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_history\n    where is_most_recent_record = True\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history\n    where is_most_recent_record = True\n\n), \n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        accounts.account_name,\n        report.account_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        ad_groups.ad_group_name,\n        report.ad_group_id,\n        ads.ad_name,\n        report.ad_id,\n        ads.type as ad_type,\n        report.device_os,\n        report.device_type,\n        report.network,\n        report.currency_code,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    left join ads\n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join ad_groups\n        on report.ad_group_id = ad_groups.ad_group_id\n        and report.source_relation = ad_groups.source_relation\n    left join campaigns\n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_microsoft_ads.microsoft_ads__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.451825Z", "completed_at": "2024-08-04T03:35:18.457521Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.457905Z", "completed_at": "2024-08-04T03:35:18.457911Z"}], "thread_id": "Thread-1", "execution_time": 0.0070648193359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads.microsoft_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_daily_report\n\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_history\n    where is_most_recent_record = True\n),\n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history\n    where is_most_recent_record = True\n),\n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        accounts.account_name,\n        report.account_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        campaigns.type as campaign_type,\n        campaigns.time_zone as campaign_timezone,\n        campaigns.status as campaign_status,\n        report.device_os,\n        report.device_type,\n        report.network,\n        report.currency_code,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join campaigns\n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_microsoft_ads.microsoft_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.459935Z", "completed_at": "2024-08-04T03:35:18.473021Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.473395Z", "completed_at": "2024-08-04T03:35:18.473401Z"}], "thread_id": "Thread-1", "execution_time": 0.014461755752563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads.microsoft_ads__url_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_daily_report\n\n), \n\nads as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_history\n    where is_most_recent_record = True\n\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_history\n    where is_most_recent_record = True\n\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_history\n    where is_most_recent_record = True\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history\n    where is_most_recent_record = True\n\n), \n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        accounts.account_name,\n        report.account_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        ad_groups.ad_group_name,\n        report.ad_group_id,\n        ads.ad_name,\n        report.ad_id,\n        report.device_os,\n        report.device_type,\n        report.network,\n        report.currency_code,\n        \n\n    split_part(\n        ads.final_url,\n        '?',\n        1\n        )\n\n as base_url,\n        \n    \n        try_cast(\n\n    split_part(\n        \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        ads.final_url,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_host,\n        '/' || \n    \n        try_cast(\n\n    split_part(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        ads.final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        ads.final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        ads.final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        right(\n            \n\n    replace(\n        \n\n    replace(\n        ads.final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        ads.final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        ads.final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        ads.final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n        )\n    end,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_path,\n\n        \n\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        ads.final_url,\n        'utm_source=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_source,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        ads.final_url,\n        'utm_medium=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_medium,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        ads.final_url,\n        'utm_campaign=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_campaign,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        ads.final_url,\n        'utm_content=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_content,\n        \n\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        ads.final_url,\n        'utm_term=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_term,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    left join ads\n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join ad_groups\n        on report.ad_group_id = ad_groups.ad_group_id\n        and report.source_relation = ad_groups.source_relation\n    left join campaigns\n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22\n), \n\nfiltered as (\n\n    select * \n    from joined\n\n    \n        where base_url is not null\n    \n)\n\nselect *\nfrom filtered", "relation_name": "TEST.PUBLIC_microsoft_ads.microsoft_ads__url_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.475351Z", "completed_at": "2024-08-04T03:35:18.479522Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.480242Z", "completed_at": "2024-08-04T03:35:18.480251Z"}], "thread_id": "Thread-1", "execution_time": 0.005906105041503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_history_source_relation__campaign_id__modified_at.56da51b12d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, modified_at\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_history\n    group by source_relation, campaign_id, modified_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.482821Z", "completed_at": "2024-08-04T03:35:18.486897Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.487345Z", "completed_at": "2024-08-04T03:35:18.487351Z"}], "thread_id": "Thread-1", "execution_time": 0.005411863327026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_history_campaign_id.ee080a2122", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_history\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.489282Z", "completed_at": "2024-08-04T03:35:18.493634Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.494110Z", "completed_at": "2024-08-04T03:35:18.494117Z"}], "thread_id": "Thread-1", "execution_time": 0.005701303482055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_daily_report_source_relation__date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.e55a075940", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, keyword_id, device_os, device_type, network, language, currency_code, ad_distribution, bid_match_type, delivered_match_type, top_vs_other\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_daily_report\n    group by source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, keyword_id, device_os, device_type, network, language, currency_code, ad_distribution, bid_match_type, delivered_match_type, top_vs_other\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.496080Z", "completed_at": "2024-08-04T03:35:18.501160Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.501535Z", "completed_at": "2024-08-04T03:35:18.501548Z"}], "thread_id": "Thread-1", "execution_time": 0.006414651870727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_daily_report_keyword_id.e16b8c5047", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_daily_report\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.503464Z", "completed_at": "2024-08-04T03:35:18.511345Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.511747Z", "completed_at": "2024-08-04T03:35:18.511753Z"}], "thread_id": "Thread-1", "execution_time": 0.009151697158813477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads.microsoft_ads__keyword_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_daily_report\n\n), \n\nkeywords as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_history\n    where is_most_recent_record = True\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_history\n    where is_most_recent_record = True\n\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_history\n    where is_most_recent_record = True\n\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_history\n    where is_most_recent_record = True\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history\n    where is_most_recent_record = True\n\n), \n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        accounts.account_name,\n        report.account_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        ad_groups.ad_group_name,\n        report.ad_group_id,\n        ads.ad_name,\n        report.ad_id,\n        keywords.keyword_name,\n        report.keyword_id,\n        keywords.match_type,\n        report.device_os,\n        report.device_type,\n        report.network,\n        report.currency_code,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    left join ads\n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join ad_groups\n        on report.ad_group_id = ad_groups.ad_group_id\n        and report.source_relation = ad_groups.source_relation\n    left join campaigns\n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join keywords\n        on report.keyword_id = keywords.keyword_id\n        and report.source_relation = keywords.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_microsoft_ads.microsoft_ads__keyword_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.513883Z", "completed_at": "2024-08-04T03:35:18.518137Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.518521Z", "completed_at": "2024-08-04T03:35:18.518527Z"}], "thread_id": "Thread-1", "execution_time": 0.005699634552001953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_history_source_relation__keyword_id__modified_at.5b0ba5f522", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, keyword_id, modified_at\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_history\n    group by source_relation, keyword_id, modified_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.520527Z", "completed_at": "2024-08-04T03:35:18.525440Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.525826Z", "completed_at": "2024-08-04T03:35:18.525832Z"}], "thread_id": "Thread-1", "execution_time": 0.006200313568115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_history_keyword_id.19164a6209", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_history\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.527817Z", "completed_at": "2024-08-04T03:35:18.535734Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.536117Z", "completed_at": "2024-08-04T03:35:18.536123Z"}], "thread_id": "Thread-1", "execution_time": 0.009235143661499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.microsoft_ads.microsoft_ads__search_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__search_daily_report\n\n), \n\nkeywords as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__keyword_history\n    where is_most_recent_record = True\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_history\n    where is_most_recent_record = True\n\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__ad_group_history\n    where is_most_recent_record = True\n\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__campaign_history\n    where is_most_recent_record = True\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__account_history\n    where is_most_recent_record = True\n\n), \n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        accounts.account_name,\n        report.account_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        ad_groups.ad_group_name,\n        report.ad_group_id,\n        ads.ad_name,\n        report.ad_id,\n        report.keyword_id,\n        keywords.keyword_name,\n        coalesce(report.delivered_match_type, report.bid_match_type) as match_type,\n        report.search_query,\n        report.device_os,\n        report.device_type,\n        report.network,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    left join ads\n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join ad_groups\n        on report.ad_group_id = ad_groups.ad_group_id\n        and report.source_relation = ad_groups.source_relation\n    left join campaigns\n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join keywords\n        on report.keyword_id = keywords.keyword_id\n        and report.source_relation = keywords.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17\n\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_microsoft_ads.microsoft_ads__search_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.538239Z", "completed_at": "2024-08-04T03:35:18.542657Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.543063Z", "completed_at": "2024-08-04T03:35:18.543069Z"}], "thread_id": "Thread-1", "execution_time": 0.005844831466674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__search_daily_report_source_relation__date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__language__bid_match_type__delivered_match_type__top_vs_other.97d894068e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, keyword_id, search_query, device_os, device_type, network, language, bid_match_type, delivered_match_type, top_vs_other\n    from TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__search_daily_report\n    group by source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, keyword_id, search_query, device_os, device_type, network, language, bid_match_type, delivered_match_type, top_vs_other\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.545051Z", "completed_at": "2024-08-04T03:35:18.549255Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.549704Z", "completed_at": "2024-08-04T03:35:18.549711Z"}], "thread_id": "Thread-1", "execution_time": 0.005521059036254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads_source.not_null_stg_microsoft_ads__search_daily_report_search_query.57f687adcc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect search_query\nfrom TEST.PUBLIC_microsoft_ads_source.stg_microsoft_ads__search_daily_report\nwhere search_query is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.551638Z", "completed_at": "2024-08-04T03:35:18.557048Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.557438Z", "completed_at": "2024-08-04T03:35:18.557444Z"}], "thread_id": "Thread-1", "execution_time": 0.006743669509887695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_history_source_relation__ad_group_id___fivetran_synced.ef2b22b2ca", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, _fivetran_synced\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_history\n    group by source_relation, ad_group_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.559449Z", "completed_at": "2024-08-04T03:35:18.563385Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.563858Z", "completed_at": "2024-08-04T03:35:18.563865Z"}], "thread_id": "Thread-1", "execution_time": 0.005398988723754883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__ad_group_history_ad_group_id.220c6220be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_history\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.565750Z", "completed_at": "2024-08-04T03:35:18.569984Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.570431Z", "completed_at": "2024-08-04T03:35:18.570438Z"}], "thread_id": "Thread-1", "execution_time": 0.005526542663574219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_report_source_relation__date_day__ad_group_id__campaign_id__advertiser_id.83246fd43c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, ad_group_id, campaign_id, advertiser_id\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_report\n    group by source_relation, date_day, ad_group_id, campaign_id, advertiser_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.572358Z", "completed_at": "2024-08-04T03:35:18.577223Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.577606Z", "completed_at": "2024-08-04T03:35:18.577612Z"}], "thread_id": "Thread-1", "execution_time": 0.0061724185943603516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_ad_group_id.bb8cf3c471", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.579446Z", "completed_at": "2024-08-04T03:35:18.583247Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.583668Z", "completed_at": "2024-08-04T03:35:18.583674Z"}], "thread_id": "Thread-1", "execution_time": 0.005083322525024414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_date_day.80e8904c4c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.585507Z", "completed_at": "2024-08-04T03:35:18.589550Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.589943Z", "completed_at": "2024-08-04T03:35:18.589949Z"}], "thread_id": "Thread-1", "execution_time": 0.0052869319915771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_history_source_relation__updated_at__advertiser_id.8308a26e9f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, updated_at, advertiser_id\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_history\n    group by source_relation, updated_at, advertiser_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.591785Z", "completed_at": "2024-08-04T03:35:18.595716Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.596099Z", "completed_at": "2024-08-04T03:35:18.596105Z"}], "thread_id": "Thread-1", "execution_time": 0.005171537399291992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__advertiser_history_advertiser_id.7d24f665fb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect advertiser_id\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_history\nwhere advertiser_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.597934Z", "completed_at": "2024-08-04T03:35:18.604048Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.604422Z", "completed_at": "2024-08-04T03:35:18.604428Z"}], "thread_id": "Thread-1", "execution_time": 0.007329702377319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest.pinterest_ads__advertiser_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_report\n), \n\nadvertisers as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_history\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        advertisers.advertiser_name,\n        report.advertiser_id,\n        advertisers.currency_code,\n        advertisers.country,\n        sum(report.spend) as spend,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions\n\n        \n\n\n\n\n\n    from report\n    left join advertisers\n        on report.advertiser_id = advertisers.advertiser_id\n        and report.source_relation = advertisers.source_relation\n    group by 1,2,3,4,5,6\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_pinterest.pinterest_ads__advertiser_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.606447Z", "completed_at": "2024-08-04T03:35:18.610578Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.610969Z", "completed_at": "2024-08-04T03:35:18.610976Z"}], "thread_id": "Thread-1", "execution_time": 0.005513429641723633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_report_source_relation__date_day__advertiser_id.cadbd5fae2", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, advertiser_id\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_report\n    group by source_relation, date_day, advertiser_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.612831Z", "completed_at": "2024-08-04T03:35:18.616782Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.617168Z", "completed_at": "2024-08-04T03:35:18.617174Z"}], "thread_id": "Thread-1", "execution_time": 0.005217313766479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_advertiser_id.1b16ed73ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect advertiser_id\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_report\nwhere advertiser_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.618981Z", "completed_at": "2024-08-04T03:35:18.622922Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.623304Z", "completed_at": "2024-08-04T03:35:18.623310Z"}], "thread_id": "Thread-1", "execution_time": 0.0052089691162109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_date_day.153bd03c95", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.625169Z", "completed_at": "2024-08-04T03:35:18.632562Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.632943Z", "completed_at": "2024-08-04T03:35:18.632950Z"}], "thread_id": "Thread-1", "execution_time": 0.008646011352539062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest.pinterest_ads__ad_group_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_report\n), \n\nadvertisers as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_history\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        advertisers.advertiser_name,\n        advertisers.advertiser_id,\n        campaigns.campaign_name,\n        campaigns.campaign_status,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        report.ad_group_id,\n        ad_groups.created_at,\n        ad_groups.start_time,\n        ad_groups.end_time,\n        ad_groups.ad_group_status,\n        sum(report.spend) as spend,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions\n\n        \n\n\n\n\n\n    from report\n    left join ad_groups\n        on report.ad_group_id = ad_groups.ad_group_id\n        and report.source_relation = ad_groups.source_relation\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n        and ad_groups.source_relation = campaigns.source_relation\n    left join advertisers\n        on campaigns.advertiser_id = advertisers.advertiser_id\n        and campaigns.source_relation = advertisers.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_pinterest.pinterest_ads__ad_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.635015Z", "completed_at": "2024-08-04T03:35:18.639248Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.639671Z", "completed_at": "2024-08-04T03:35:18.639678Z"}], "thread_id": "Thread-1", "execution_time": 0.005776405334472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_history_source_relation__campaign_id___fivetran_synced.84df0386bc", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, _fivetran_synced\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_history\n    group by source_relation, campaign_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.641499Z", "completed_at": "2024-08-04T03:35:18.645407Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.645802Z", "completed_at": "2024-08-04T03:35:18.645809Z"}], "thread_id": "Thread-1", "execution_time": 0.005182027816772461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__campaign_history_campaign_id.60cb10d341", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_history\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.647678Z", "completed_at": "2024-08-04T03:35:18.653349Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.653729Z", "completed_at": "2024-08-04T03:35:18.653735Z"}], "thread_id": "Thread-1", "execution_time": 0.006981611251831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest.pinterest_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith report as (\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_report\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nadvertisers as (\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_history\n    where is_most_recent_record = True\n),\n\nfields as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        advertisers.advertiser_name,\n        advertisers.advertiser_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        campaigns.campaign_status,\n        sum(report.spend) as spend,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions\n\n        \n\n\n\n\n\n    from report\n    left join campaigns\n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n    left join advertisers\n        on campaigns.advertiser_id = advertisers.advertiser_id\n        and campaigns.source_relation = advertisers.source_relation\n    group by 1,2,3,4,5,6,7\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_pinterest.pinterest_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.655697Z", "completed_at": "2024-08-04T03:35:18.661076Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.661465Z", "completed_at": "2024-08-04T03:35:18.661472Z"}], "thread_id": "Thread-1", "execution_time": 0.006777048110961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_report_source_relation__date_day__campaign_id__advertiser_id.6dd9b7bce6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, campaign_id, advertiser_id\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_report\n    group by source_relation, date_day, campaign_id, advertiser_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.663319Z", "completed_at": "2024-08-04T03:35:18.667248Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.667669Z", "completed_at": "2024-08-04T03:35:18.667676Z"}], "thread_id": "Thread-1", "execution_time": 0.005237102508544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_campaign_id.a287eba0fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.669520Z", "completed_at": "2024-08-04T03:35:18.673368Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.673751Z", "completed_at": "2024-08-04T03:35:18.673757Z"}], "thread_id": "Thread-1", "execution_time": 0.005131721496582031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_date_day.7ef5fb1238", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.675662Z", "completed_at": "2024-08-04T03:35:18.680531Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.680925Z", "completed_at": "2024-08-04T03:35:18.680931Z"}], "thread_id": "Thread-1", "execution_time": 0.0061550140380859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_history_source_relation__keyword_id__ad_group_id___fivetran_synced.2cd3b85ca9", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, keyword_id, ad_group_id, _fivetran_synced\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_history\n    group by source_relation, keyword_id, ad_group_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.682751Z", "completed_at": "2024-08-04T03:35:18.686743Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.687135Z", "completed_at": "2024-08-04T03:35:18.687142Z"}], "thread_id": "Thread-1", "execution_time": 0.0052602291107177734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__keyword_history_keyword_id.246889377a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_history\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.689042Z", "completed_at": "2024-08-04T03:35:18.696061Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.696434Z", "completed_at": "2024-08-04T03:35:18.696440Z"}], "thread_id": "Thread-1", "execution_time": 0.00831151008605957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest.pinterest_ads__keyword_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_report\n), \n\nadvertisers as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_history\n    where is_most_recent_record = True\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_history\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\nkeywords as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_history\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        advertisers.advertiser_name,\n        advertisers.advertiser_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        ad_groups.ad_group_id,\n        report.keyword_id,\n        keywords.match_type,\n        keywords.parent_type,\n        keywords.keyword_value,\n        sum(report.spend) as spend,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions\n\n        \n\n\n\n\n\n    from report\n    left join keywords\n        on report.keyword_id = keywords.keyword_id\n        and report.source_relation = keywords.source_relation\n    left join ad_groups\n        on keywords.ad_group_id = ad_groups.ad_group_id\n        and keywords.source_relation = ad_groups.source_relation\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n        and ad_groups.source_relation = campaigns.source_relation\n    left join advertisers\n        on campaigns.advertiser_id = advertisers.advertiser_id\n        and campaigns.source_relation = advertisers.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_pinterest.pinterest_ads__keyword_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.698522Z", "completed_at": "2024-08-04T03:35:18.702717Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.703110Z", "completed_at": "2024-08-04T03:35:18.703116Z"}], "thread_id": "Thread-1", "execution_time": 0.005615949630737305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_report_source_relation__date_day__keyword_id__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.f43dda0239", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, keyword_id, pin_promotion_id, ad_group_id, campaign_id, advertiser_id\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_report\n    group by source_relation, date_day, keyword_id, pin_promotion_id, ad_group_id, campaign_id, advertiser_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.705003Z", "completed_at": "2024-08-04T03:35:18.709952Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.710332Z", "completed_at": "2024-08-04T03:35:18.710339Z"}], "thread_id": "Thread-1", "execution_time": 0.0061740875244140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_date_day.9937216300", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.712208Z", "completed_at": "2024-08-04T03:35:18.716019Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.716394Z", "completed_at": "2024-08-04T03:35:18.716400Z"}], "thread_id": "Thread-1", "execution_time": 0.005094289779663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_keyword_id.5f00679c48", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__keyword_report\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.718235Z", "completed_at": "2024-08-04T03:35:18.722256Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.722648Z", "completed_at": "2024-08-04T03:35:18.722654Z"}], "thread_id": "Thread-1", "execution_time": 0.00526118278503418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_history_source_relation___fivetran_synced__pin_promotion_id.8064d48c11", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, _fivetran_synced, pin_promotion_id\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_history\n    group by source_relation, _fivetran_synced, pin_promotion_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.724537Z", "completed_at": "2024-08-04T03:35:18.728629Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.729016Z", "completed_at": "2024-08-04T03:35:18.729022Z"}], "thread_id": "Thread-1", "execution_time": 0.005321979522705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_history_pin_promotion_id.171995cd34", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pin_promotion_id\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_history\nwhere pin_promotion_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.730834Z", "completed_at": "2024-08-04T03:35:18.738911Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.739282Z", "completed_at": "2024-08-04T03:35:18.739288Z"}], "thread_id": "Thread-1", "execution_time": 0.009305238723754883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest.pinterest_ads__pin_promotion_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_report\n), \n\npins as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_history\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nadvertisers as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_history\n    where is_most_recent_record = True\n), \n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        campaigns.advertiser_id,\n        advertisers.advertiser_name,\n        report.campaign_id,\n        campaigns.campaign_name,\n        campaigns.campaign_status,\n        report.ad_group_id,\n        ad_groups.ad_group_name,\n        ad_groups.ad_group_status,\n        pins.creative_type,\n        report.pin_promotion_id,\n        pins.pin_name,\n        pins.pin_status,\n        pins.destination_url,\n        pins.base_url,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n\n    from report \n    left join pins \n        on report.pin_promotion_id = pins.pin_promotion_id\n        and report.source_relation = pins.source_relation\n    left join ad_groups\n        on report.ad_group_id = ad_groups.ad_group_id\n        and report.source_relation = ad_groups.source_relation\n    left join campaigns \n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n    left join advertisers\n        on campaigns.advertiser_id = advertisers.advertiser_id\n        and campaigns.source_relation = advertisers.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\n)\n\nselect * \nfrom joined", "relation_name": "TEST.PUBLIC_pinterest.pinterest_ads__pin_promotion_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.741309Z", "completed_at": "2024-08-04T03:35:18.748548Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.748929Z", "completed_at": "2024-08-04T03:35:18.748935Z"}], "thread_id": "Thread-1", "execution_time": 0.00861358642578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pinterest.pinterest_ads__url_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_report\n), \n\npins as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_history\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nadvertisers as (\n\n    select *\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__advertiser_history\n    where is_most_recent_record = True\n), \n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        campaigns.advertiser_id,\n        advertisers.advertiser_name,\n        report.campaign_id,\n        campaigns.campaign_name,\n        campaigns.campaign_status,\n        report.ad_group_id,\n        ad_groups.ad_group_name,\n        ad_groups.ad_group_status,\n        pins.destination_url,\n        pins.creative_type,\n        report.pin_promotion_id,\n        pins.pin_name,\n        pins.pin_status,\n        pins.base_url,\n        pins.url_host,\n        pins.url_path,\n        pins.utm_source,\n        pins.utm_medium,\n        pins.utm_campaign,\n        pins.utm_content,\n        pins.utm_term,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n\n    from report \n    left join pins \n        on report.pin_promotion_id = pins.pin_promotion_id\n        and report.source_relation = pins.source_relation\n    left join ad_groups\n        on report.ad_group_id = ad_groups.ad_group_id\n        and report.source_relation = ad_groups.source_relation\n    left join campaigns \n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n    left join advertisers\n        on campaigns.advertiser_id = advertisers.advertiser_id\n        and campaigns.source_relation = advertisers.source_relation\n\n    \n    where pins.destination_url is not null\n    \n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\n)\n\nselect * \nfrom joined", "relation_name": "TEST.PUBLIC_pinterest.pinterest_ads__url_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.750946Z", "completed_at": "2024-08-04T03:35:18.755097Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.755505Z", "completed_at": "2024-08-04T03:35:18.755511Z"}], "thread_id": "Thread-1", "execution_time": 0.005564212799072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_report_source_relation__date_day__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.8b358e3946", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, pin_promotion_id, ad_group_id, campaign_id, advertiser_id\n    from TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_report\n    group by source_relation, date_day, pin_promotion_id, ad_group_id, campaign_id, advertiser_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.758112Z", "completed_at": "2024-08-04T03:35:18.765003Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.765396Z", "completed_at": "2024-08-04T03:35:18.765407Z"}], "thread_id": "Thread-1", "execution_time": 0.00835418701171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_date_day.ed272212a1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.767338Z", "completed_at": "2024-08-04T03:35:18.771968Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.772363Z", "completed_at": "2024-08-04T03:35:18.772372Z"}], "thread_id": "Thread-1", "execution_time": 0.005947589874267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_pin_promotion_id.9c3c9f71ab", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pin_promotion_id\nfrom TEST.PUBLIC_pinterest_source.stg_pinterest_ads__pin_promotion_report\nwhere pin_promotion_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.774285Z", "completed_at": "2024-08-04T03:35:18.778866Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.779267Z", "completed_at": "2024-08-04T03:35:18.779276Z"}], "thread_id": "Thread-1", "execution_time": 0.005930423736572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__account_report_source_relation__account_id__date_day.580653f488", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, date_day\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account_report\n    group by source_relation, account_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.781239Z", "completed_at": "2024-08-04T03:35:18.785501Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.785897Z", "completed_at": "2024-08-04T03:35:18.785905Z"}], "thread_id": "Thread-1", "execution_time": 0.0056040287017822266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.not_null_stg_reddit_ads__account_report_account_id.1f2a0195de", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account_report\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.787913Z", "completed_at": "2024-08-04T03:35:18.794200Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.794584Z", "completed_at": "2024-08-04T03:35:18.794590Z"}], "thread_id": "Thread-1", "execution_time": 0.0077173709869384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads.reddit_ads__account_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account_report\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account\n)\n\n, joined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        report.account_id,\n        accounts.currency,\n        accounts.attribution_type,\n        accounts.status,\n        accounts.time_zone_id,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n\n    from report\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_reddit_ads.reddit_ads__account_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.796571Z", "completed_at": "2024-08-04T03:35:18.800855Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.801244Z", "completed_at": "2024-08-04T03:35:18.801250Z"}], "thread_id": "Thread-1", "execution_time": 0.005575895309448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__account_source_relation__account_id.49d95e2890", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account\n    group by source_relation, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.803108Z", "completed_at": "2024-08-04T03:35:18.808778Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.809180Z", "completed_at": "2024-08-04T03:35:18.809187Z"}], "thread_id": "Thread-1", "execution_time": 0.007012605667114258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.not_null_stg_reddit_ads__account_account_id.512f0b8078", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.811040Z", "completed_at": "2024-08-04T03:35:18.815344Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.815767Z", "completed_at": "2024-08-04T03:35:18.815774Z"}], "thread_id": "Thread-1", "execution_time": 0.005609750747680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_group_report_source_relation__ad_group_id__date_day.4aa1f776b5", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, date_day\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group_report\n    group by source_relation, ad_group_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.817627Z", "completed_at": "2024-08-04T03:35:18.822611Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.823005Z", "completed_at": "2024-08-04T03:35:18.823011Z"}], "thread_id": "Thread-1", "execution_time": 0.006266117095947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_report_ad_group_id.9836cd084d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.824934Z", "completed_at": "2024-08-04T03:35:18.829058Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.829448Z", "completed_at": "2024-08-04T03:35:18.829455Z"}], "thread_id": "Thread-1", "execution_time": 0.005413532257080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_group_source_relation__ad_group_id.942cb72fcc", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group\n    group by source_relation, ad_group_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.831327Z", "completed_at": "2024-08-04T03:35:18.835249Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.835666Z", "completed_at": "2024-08-04T03:35:18.835672Z"}], "thread_id": "Thread-1", "execution_time": 0.0052318572998046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_ad_group_id.65795d8dc2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.837546Z", "completed_at": "2024-08-04T03:35:18.842513Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.842922Z", "completed_at": "2024-08-04T03:35:18.842929Z"}], "thread_id": "Thread-1", "execution_time": 0.0062847137451171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_report_source_relation__ad_id__date_day.395db62865", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, date_day\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_report\n    group by source_relation, ad_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.844822Z", "completed_at": "2024-08-04T03:35:18.848754Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.849149Z", "completed_at": "2024-08-04T03:35:18.849156Z"}], "thread_id": "Thread-1", "execution_time": 0.005215167999267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.not_null_stg_reddit_ads__ad_report_ad_id.c4af84b857", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.851157Z", "completed_at": "2024-08-04T03:35:18.855254Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.855666Z", "completed_at": "2024-08-04T03:35:18.855673Z"}], "thread_id": "Thread-1", "execution_time": 0.0055484771728515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_source_relation__ad_id.fc4d1b788b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad\n    group by source_relation, ad_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.857503Z", "completed_at": "2024-08-04T03:35:18.861500Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.861898Z", "completed_at": "2024-08-04T03:35:18.861905Z"}], "thread_id": "Thread-1", "execution_time": 0.005276203155517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.not_null_stg_reddit_ads__ad_ad_id.40188b63dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.863833Z", "completed_at": "2024-08-04T03:35:18.868975Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.869361Z", "completed_at": "2024-08-04T03:35:18.869367Z"}], "thread_id": "Thread-1", "execution_time": 0.006493568420410156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__campaign_report_source_relation__campaign_id__date_day.5e87d9d722", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, date_day\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign_report\n    group by source_relation, campaign_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.871212Z", "completed_at": "2024-08-04T03:35:18.875130Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.875538Z", "completed_at": "2024-08-04T03:35:18.875544Z"}], "thread_id": "Thread-1", "execution_time": 0.005221843719482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.not_null_stg_reddit_ads__campaign_report_campaign_id.c717612b4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.877392Z", "completed_at": "2024-08-04T03:35:18.883761Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.884143Z", "completed_at": "2024-08-04T03:35:18.884149Z"}], "thread_id": "Thread-1", "execution_time": 0.007590055465698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads.reddit_ads__ad_group_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group_report\n),\n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign\n),\n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account\n),\n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        report.account_id,\n        ad_groups.ad_group_name,\n        report.ad_group_id,\n        campaigns.campaign_name,\n        ad_groups.campaign_id,\n        accounts.currency,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n\n    from report\n    left join ad_groups\n        on report.ad_group_id = ad_groups.ad_group_id\n        and report.source_relation = ad_groups.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n        and ad_groups.source_relation = campaigns.source_relation\n    group by 1,2,3,4,5,6,7,8\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_reddit_ads.reddit_ads__ad_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.885961Z", "completed_at": "2024-08-04T03:35:18.893176Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.893565Z", "completed_at": "2024-08-04T03:35:18.893572Z"}], "thread_id": "Thread-1", "execution_time": 0.00847482681274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads.reddit_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_report\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign\n),\n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account\n),\n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        report.ad_id,\n        ads.ad_name,\n        report.account_id,\n        campaigns.campaign_name,\n        ads.campaign_id,\n        ad_groups.ad_group_name,\n        ads.ad_group_id,\n        accounts.currency,\n        ads.post_id,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n\n    from report\n    left join ads\n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ad_groups\n        on ads.ad_group_id = ad_groups.ad_group_id\n        and ads.source_relation = ad_groups.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11\n\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_reddit_ads.reddit_ads__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.895389Z", "completed_at": "2024-08-04T03:35:18.903629Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.904088Z", "completed_at": "2024-08-04T03:35:18.904099Z"}], "thread_id": "Thread-1", "execution_time": 0.009618997573852539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads.reddit_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign_report\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign\n),\n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account\n),\n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        report.account_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        accounts.currency,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n\n    from report\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join campaigns\n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n    group by 1,2,3,4,5,6\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_reddit_ads.reddit_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.906281Z", "completed_at": "2024-08-04T03:35:18.918771Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.919156Z", "completed_at": "2024-08-04T03:35:18.919165Z"}], "thread_id": "Thread-1", "execution_time": 0.013914108276367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.reddit_ads.reddit_ads__url_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_report\n),\n\nads as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad\n),\n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__ad_group\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__account\n),\n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        ads.ad_name,\n        report.ad_id,\n        report.account_id,\n        campaigns.campaign_name,\n        ads.campaign_id,\n        ad_groups.ad_group_name,\n        ads.ad_group_id,\n        accounts.currency,\n        ads.post_id,\n        ads.post_url,\n        ads.click_url,\n        \n\n    split_part(\n        ads.click_url,\n        '?',\n        1\n        )\n\n as base_url,\n        \n    \n        try_cast(\n\n    split_part(\n        \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        ads.click_url,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_host,\n        '/' || \n    \n        try_cast(\n\n    split_part(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        ads.click_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        ads.click_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        ads.click_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        right(\n            \n\n    replace(\n        \n\n    replace(\n        ads.click_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        ads.click_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        ads.click_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        ads.click_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n        )\n    end,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_path,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        ads.click_url,\n        'utm_source=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_source,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        ads.click_url,\n        'utm_medium=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_medium,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        ads.click_url,\n        'utm_term=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_term,\n        nullif(\n\n    split_part(\n        \n\n    split_part(\n        ads.click_url,\n        'utm_content=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'') as utm_content,\n        coalesce( nullif(\n\n    split_part(\n        \n\n    split_part(\n        ads.click_url,\n        'utm_campaign=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,''), campaigns.campaign_name) as utm_campaign,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n\n    from report\n    left join ads\n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ad_groups\n        on ads.ad_group_id = ad_groups.ad_group_id\n        and ads.source_relation = ad_groups.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\n), \n\nfiltered as (\n\n    select *\n    from joined\n\n    \n        where click_url is not null -- filter for only ads with valid URLs\n    \n)\n\nselect *\nfrom filtered", "relation_name": "TEST.PUBLIC_reddit_ads.reddit_ads__url_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.921261Z", "completed_at": "2024-08-04T03:35:18.925913Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.926297Z", "completed_at": "2024-08-04T03:35:18.926304Z"}], "thread_id": "Thread-1", "execution_time": 0.006035566329956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__campaign_source_relation__campaign_id.066d3b93f4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id\n    from TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign\n    group by source_relation, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.928458Z", "completed_at": "2024-08-04T03:35:18.933574Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.933957Z", "completed_at": "2024-08-04T03:35:18.933964Z"}], "thread_id": "Thread-1", "execution_time": 0.006643056869506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads_source.not_null_stg_reddit_ads__campaign_campaign_id.f3f24e4682", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_reddit_ads_source.stg_reddit_ads__campaign\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.935861Z", "completed_at": "2024-08-04T03:35:18.940023Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.940410Z", "completed_at": "2024-08-04T03:35:18.940416Z"}], "thread_id": "Thread-1", "execution_time": 0.005440711975097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_account_history_source_relation__ad_account_id___fivetran_synced.b8a4da92d1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_account_id, _fivetran_synced\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_account_history\n    group by source_relation, ad_account_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.942252Z", "completed_at": "2024-08-04T03:35:18.946223Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.946607Z", "completed_at": "2024-08-04T03:35:18.946614Z"}], "thread_id": "Thread-1", "execution_time": 0.005196094512939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_account_history__fivetran_synced.2d5dd77824", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_account_history\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.948472Z", "completed_at": "2024-08-04T03:35:18.953161Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.953536Z", "completed_at": "2024-08-04T03:35:18.953548Z"}], "thread_id": "Thread-1", "execution_time": 0.005909442901611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_account_history_ad_account_id.426d71d605", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_account_id\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_account_history\nwhere ad_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.955390Z", "completed_at": "2024-08-04T03:35:18.959416Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.959814Z", "completed_at": "2024-08-04T03:35:18.959820Z"}], "thread_id": "Thread-1", "execution_time": 0.0052950382232666016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_history_source_relation__ad_id___fivetran_synced.630e3ffee4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, _fivetran_synced\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_history\n    group by source_relation, ad_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.961627Z", "completed_at": "2024-08-04T03:35:18.965677Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.966056Z", "completed_at": "2024-08-04T03:35:18.966063Z"}], "thread_id": "Thread-1", "execution_time": 0.005261898040771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_history__fivetran_synced.1607c70fda", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_history\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.967913Z", "completed_at": "2024-08-04T03:35:18.971842Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.972221Z", "completed_at": "2024-08-04T03:35:18.972227Z"}], "thread_id": "Thread-1", "execution_time": 0.005189418792724609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_history_ad_id.e9d367fd15", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_history\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.974043Z", "completed_at": "2024-08-04T03:35:18.979129Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.979545Z", "completed_at": "2024-08-04T03:35:18.979552Z"}], "thread_id": "Thread-1", "execution_time": 0.006346464157104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_hourly_report_source_relation__ad_id__date_hour.f2d4b9252f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, date_hour\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report\n    group by source_relation, ad_id, date_hour\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.981356Z", "completed_at": "2024-08-04T03:35:18.985175Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.985550Z", "completed_at": "2024-08-04T03:35:18.985557Z"}], "thread_id": "Thread-1", "execution_time": 0.005022287368774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_hourly_report_ad_id.7e763de19d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.987385Z", "completed_at": "2024-08-04T03:35:18.991189Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.991601Z", "completed_at": "2024-08-04T03:35:18.991607Z"}], "thread_id": "Thread-1", "execution_time": 0.005063772201538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_hourly_report_date_hour.666cda1cd7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_hour\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report\nwhere date_hour is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.993427Z", "completed_at": "2024-08-04T03:35:18.997563Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:18.997955Z", "completed_at": "2024-08-04T03:35:18.997961Z"}], "thread_id": "Thread-1", "execution_time": 0.00537562370300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_history_source_relation__ad_squad_id___fivetran_synced.5d97ae5ee3", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_squad_id, _fivetran_synced\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_history\n    group by source_relation, ad_squad_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:18.999823Z", "completed_at": "2024-08-04T03:35:19.004778Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.005167Z", "completed_at": "2024-08-04T03:35:19.005173Z"}], "thread_id": "Thread-1", "execution_time": 0.006224155426025391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced.7ed7d105ae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_history\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.006999Z", "completed_at": "2024-08-04T03:35:19.010820Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.011198Z", "completed_at": "2024-08-04T03:35:19.011204Z"}], "thread_id": "Thread-1", "execution_time": 0.005047798156738281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id.71c7122278", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_squad_id\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_history\nwhere ad_squad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.013242Z", "completed_at": "2024-08-04T03:35:19.017356Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.017740Z", "completed_at": "2024-08-04T03:35:19.017747Z"}], "thread_id": "Thread-1", "execution_time": 0.005364179611206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_hourly_report_source_relation__ad_squad_id__date_hour.25afb4f9ae", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_squad_id, date_hour\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report\n    group by source_relation, ad_squad_id, date_hour\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.019590Z", "completed_at": "2024-08-04T03:35:19.023484Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.023887Z", "completed_at": "2024-08-04T03:35:19.023893Z"}], "thread_id": "Thread-1", "execution_time": 0.0051686763763427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id.ab16aa72c9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_squad_id\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report\nwhere ad_squad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.025697Z", "completed_at": "2024-08-04T03:35:19.030595Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.031009Z", "completed_at": "2024-08-04T03:35:19.031015Z"}], "thread_id": "Thread-1", "execution_time": 0.006141185760498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour.6f0b63a9cb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_hour\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report\nwhere date_hour is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.032870Z", "completed_at": "2024-08-04T03:35:19.039844Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.040222Z", "completed_at": "2024-08-04T03:35:19.040228Z"}], "thread_id": "Thread-1", "execution_time": 0.008190393447875977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads.snapchat_ads__account_report", "compiled": true, "compiled_code": "\n\nwith ad_hourly as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report\n\n), account as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_account_history\n    where is_most_recent_record = true\n\n), ads as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_history\n    where is_most_recent_record = true\n\n), ad_squads as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_history\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_history\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        ad_hourly.source_relation,\n        cast(ad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        account.currency,\n        sum(ad_hourly.swipes) as swipes,\n        sum(ad_hourly.impressions) as impressions,\n        round(sum(ad_hourly.spend),2) as spend\n\n        \n\n\n\n\n    \n    from ad_hourly\n    left join ads \n        on ad_hourly.ad_id = ads.ad_id\n        and ad_hourly.source_relation = ads.source_relation\n    left join ad_squads\n        on ads.ad_squad_id = ad_squads.ad_squad_id\n        and ads.source_relation = ad_squads.source_relation\n    left join campaigns\n        on ad_squads.campaign_id = campaigns.campaign_id\n        and ad_squads.source_relation = campaigns.source_relation\n    left join account\n        on campaigns.ad_account_id = account.ad_account_id\n        and campaigns.source_relation = account.source_relation\n\n    group by 1,2,3,4,5\n\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_snapchat_ads.snapchat_ads__account_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.042264Z", "completed_at": "2024-08-04T03:35:19.048671Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.049052Z", "completed_at": "2024-08-04T03:35:19.049058Z"}], "thread_id": "Thread-1", "execution_time": 0.007805585861206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads.snapchat_ads__ad_squad_report", "compiled": true, "compiled_code": "\n\nwith ad_squad_hourly as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report\n\n), account as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_account_history\n    where is_most_recent_record = true\n\n), ad_squads as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_history\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_history\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        ad_squad_hourly.source_relation,\n        cast(ad_squad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_squad_hourly.ad_squad_id,\n        ad_squads.ad_squad_name,\n        account.currency,\n        sum(ad_squad_hourly.swipes) as swipes,\n        sum(ad_squad_hourly.impressions) as impressions,\n        round(sum(ad_squad_hourly.spend),2) as spend\n        \n        \n\n\n\n\n    \n    from ad_squad_hourly\n    left join ad_squads\n        on ad_squad_hourly.ad_squad_id = ad_squads.ad_squad_id\n        and ad_squad_hourly.source_relation = ad_squads.source_relation\n    left join campaigns\n        on ad_squads.campaign_id = campaigns.campaign_id\n        and ad_squads.source_relation = campaigns.source_relation\n    left join account\n        on campaigns.ad_account_id = account.ad_account_id\n        and campaigns.source_relation = account.source_relation\n    \n    group by 1,2,3,4,5,6,7,8,9\n\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_snapchat_ads.snapchat_ads__ad_squad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.051073Z", "completed_at": "2024-08-04T03:35:19.056019Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.056402Z", "completed_at": "2024-08-04T03:35:19.056408Z"}], "thread_id": "Thread-1", "execution_time": 0.006321907043457031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_history_source_relation__campaign_id___fivetran_synced.e003c1a660", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, _fivetran_synced\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_history\n    group by source_relation, campaign_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.058234Z", "completed_at": "2024-08-04T03:35:19.062039Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.062412Z", "completed_at": "2024-08-04T03:35:19.062418Z"}], "thread_id": "Thread-1", "execution_time": 0.00501561164855957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_history__fivetran_synced.55bc48b3ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_history\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.064270Z", "completed_at": "2024-08-04T03:35:19.068564Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.069070Z", "completed_at": "2024-08-04T03:35:19.069086Z"}], "thread_id": "Thread-1", "execution_time": 0.0057675838470458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_history_campaign_id.f74a0fb8c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_history\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.071230Z", "completed_at": "2024-08-04T03:35:19.078404Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.078787Z", "completed_at": "2024-08-04T03:35:19.078795Z"}], "thread_id": "Thread-1", "execution_time": 0.008514881134033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads.snapchat_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith campaign_hourly as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report\n\n), account as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_account_history\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_history\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        campaign_hourly.source_relation,\n        cast(campaign_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        campaign_hourly.campaign_id,\n        campaigns.campaign_name,\n        account.currency,\n        sum(campaign_hourly.swipes) as swipes,\n        sum(campaign_hourly.impressions) as impressions,\n        round(sum(campaign_hourly.spend),2) as spend\n        \n        \n\n\n\n\n    \n    from campaign_hourly\n    left join campaigns\n        on campaign_hourly.campaign_id = campaigns.campaign_id\n        and campaign_hourly.source_relation = campaigns.source_relation\n    left join account\n        on campaigns.ad_account_id = account.ad_account_id\n        and campaigns.source_relation = account.source_relation\n    \n    group by 1,2,3,4,5,6,7\n\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_snapchat_ads.snapchat_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.080722Z", "completed_at": "2024-08-04T03:35:19.087214Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.087639Z", "completed_at": "2024-08-04T03:35:19.087647Z"}], "thread_id": "Thread-1", "execution_time": 0.007825851440429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_hourly_report_source_relation__campaign_id__date_hour.3998b6bf9d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, date_hour\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report\n    group by source_relation, campaign_id, date_hour\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.089513Z", "completed_at": "2024-08-04T03:35:19.093753Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.094151Z", "completed_at": "2024-08-04T03:35:19.094157Z"}], "thread_id": "Thread-1", "execution_time": 0.005521535873413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id.f255c38a3e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.096102Z", "completed_at": "2024-08-04T03:35:19.100050Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.100429Z", "completed_at": "2024-08-04T03:35:19.100435Z"}], "thread_id": "Thread-1", "execution_time": 0.005288839340209961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_hourly_report_date_hour.0bc4218ac8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_hour\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report\nwhere date_hour is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.102360Z", "completed_at": "2024-08-04T03:35:19.106517Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.106914Z", "completed_at": "2024-08-04T03:35:19.106920Z"}], "thread_id": "Thread-1", "execution_time": 0.005501747131347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_history_source_relation__creative_id___fivetran_synced.1d4efdd418", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, creative_id, _fivetran_synced\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_history\n    group by source_relation, creative_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.110911Z", "completed_at": "2024-08-04T03:35:19.115227Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.115645Z", "completed_at": "2024-08-04T03:35:19.115654Z"}], "thread_id": "Thread-1", "execution_time": 0.007732868194580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_history__fivetran_synced.b9c95b4380", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_history\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.117540Z", "completed_at": "2024-08-04T03:35:19.121454Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.121846Z", "completed_at": "2024-08-04T03:35:19.121853Z"}], "thread_id": "Thread-1", "execution_time": 0.005155324935913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_history_creative_id.09c83690f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_history\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.134537Z", "completed_at": "2024-08-04T03:35:19.139627Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.140017Z", "completed_at": "2024-08-04T03:35:19.140024Z"}], "thread_id": "Thread-1", "execution_time": 0.006502866744995117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_url_tag_history_source_relation__creative_id__param_key__updated_at.6ed98c175a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, creative_id, param_key, updated_at\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history\n    group by source_relation, creative_id, param_key, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.141933Z", "completed_at": "2024-08-04T03:35:19.145801Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.146181Z", "completed_at": "2024-08-04T03:35:19.146187Z"}], "thread_id": "Thread-1", "execution_time": 0.00518488883972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_url_tag_history_creative_id.7ff6bb9c1b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.148109Z", "completed_at": "2024-08-04T03:35:19.152196Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.152588Z", "completed_at": "2024-08-04T03:35:19.152594Z"}], "thread_id": "Thread-1", "execution_time": 0.005433559417724609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_history_source_relation__ad_group_id__updated_at.94fc2240d4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, updated_at\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_history\n    group by source_relation, ad_group_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.154456Z", "completed_at": "2024-08-04T03:35:19.159162Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.159571Z", "completed_at": "2024-08-04T03:35:19.159577Z"}], "thread_id": "Thread-1", "execution_time": 0.005963325500488281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_history_ad_group_id.04778d7fad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_history\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.161461Z", "completed_at": "2024-08-04T03:35:19.165536Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.165932Z", "completed_at": "2024-08-04T03:35:19.165938Z"}], "thread_id": "Thread-1", "execution_time": 0.005387783050537109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_report_hourly_source_relation__ad_group_id__stat_time_hour.f0681f097c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, stat_time_hour\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_report_hourly\n    group by source_relation, ad_group_id, stat_time_hour\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.167879Z", "completed_at": "2024-08-04T03:35:19.171707Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.172091Z", "completed_at": "2024-08-04T03:35:19.172097Z"}], "thread_id": "Thread-1", "execution_time": 0.005175113677978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id.8da17119f1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_report_hourly\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.174293Z", "completed_at": "2024-08-04T03:35:19.178915Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.179295Z", "completed_at": "2024-08-04T03:35:19.179303Z"}], "thread_id": "Thread-1", "execution_time": 0.005983829498291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour.ca4b495127", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect stat_time_hour\nfrom TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_report_hourly\nwhere stat_time_hour is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.181279Z", "completed_at": "2024-08-04T03:35:19.186703Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.187097Z", "completed_at": "2024-08-04T03:35:19.187104Z"}], "thread_id": "Thread-1", "execution_time": 0.006766319274902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_history_source_relation__ad_id__updated_at.64ebc5aea6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, updated_at\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_history\n    group by source_relation, ad_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.189008Z", "completed_at": "2024-08-04T03:35:19.192964Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.193337Z", "completed_at": "2024-08-04T03:35:19.193343Z"}], "thread_id": "Thread-1", "execution_time": 0.0051882266998291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_history_ad_id.4ffd05b23a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_history\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.195247Z", "completed_at": "2024-08-04T03:35:19.199342Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.199753Z", "completed_at": "2024-08-04T03:35:19.199760Z"}], "thread_id": "Thread-1", "execution_time": 0.005382061004638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_report_hourly_source_relation__ad_id__stat_time_hour.1f7d670427", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, stat_time_hour\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly\n    group by source_relation, ad_id, stat_time_hour\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.201625Z", "completed_at": "2024-08-04T03:35:19.205523Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.205912Z", "completed_at": "2024-08-04T03:35:19.205919Z"}], "thread_id": "Thread-1", "execution_time": 0.005144596099853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_report_hourly_ad_id.ee84d783ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.207853Z", "completed_at": "2024-08-04T03:35:19.212904Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.213290Z", "completed_at": "2024-08-04T03:35:19.213298Z"}], "thread_id": "Thread-1", "execution_time": 0.0064258575439453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour.9e2a2dca81", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect stat_time_hour\nfrom TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly\nwhere stat_time_hour is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.215219Z", "completed_at": "2024-08-04T03:35:19.221852Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.222234Z", "completed_at": "2024-08-04T03:35:19.222240Z"}], "thread_id": "Thread-1", "execution_time": 0.007871389389038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads.tiktok_ads__advertiser_report", "compiled": true, "compiled_code": "\n\nwith hourly as (\n    \n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly\n),\n\nadvertiser as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__advertiser\n), \n\nads as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_history\n    where is_most_recent_record\n), \n\njoined as (\n\n    select\n        hourly.source_relation,\n        cast(hourly.stat_time_hour as date) as date_day,\n        ads.advertiser_id,\n        advertiser.advertiser_name,\n        advertiser.currency,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s, \n        sum(hourly.video_watched_6_s) as video_watched_6_s, \n        sum(hourly.video_views_p_25) as video_views_p_25, \n        sum(hourly.video_views_p_50) as video_views_p_50,\n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        \n\n\n\n\n    \n    from hourly\n    left join ads\n        on hourly.ad_id = ads.ad_id\n        and hourly.source_relation = ads.source_relation\n    left join advertiser\n        on ads.advertiser_id = advertiser.advertiser_id\n        and ads.source_relation = advertiser.source_relation\n    group by 1,2,3,4,5\n\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_tiktok_ads.tiktok_ads__advertiser_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.224386Z", "completed_at": "2024-08-04T03:35:19.228620Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.229002Z", "completed_at": "2024-08-04T03:35:19.229009Z"}], "thread_id": "Thread-1", "execution_time": 0.0056743621826171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__advertiser_source_relation__advertiser_id.4b39eb0db8", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, advertiser_id\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__advertiser\n    group by source_relation, advertiser_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.230887Z", "completed_at": "2024-08-04T03:35:19.234766Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.235147Z", "completed_at": "2024-08-04T03:35:19.235154Z"}], "thread_id": "Thread-1", "execution_time": 0.0051767826080322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.not_null_stg_tiktok_ads__advertiser_advertiser_id.5deab92def", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect advertiser_id\nfrom TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__advertiser\nwhere advertiser_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.237059Z", "completed_at": "2024-08-04T03:35:19.244551Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.244932Z", "completed_at": "2024-08-04T03:35:19.244938Z"}], "thread_id": "Thread-1", "execution_time": 0.008790969848632812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads.tiktok_ads__ad_group_report", "compiled": true, "compiled_code": "\n\nwith hourly as (\n    \n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_report_hourly\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_history\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__advertiser\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_history\n    where is_most_recent_record\n), \n\naggregated as (\n\n    select\n        hourly.source_relation,\n        cast(hourly.stat_time_hour as date) as date_day,\n        ad_groups.advertiser_id,\n        advertiser.advertiser_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        hourly.ad_group_id,\n        ad_groups.ad_group_name,\n        advertiser.currency, \n        ad_groups.category,\n        ad_groups.gender,\n        ad_groups.audience_type,\n        ad_groups.budget,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        \n\n\n\n\n    \n    from hourly\n    left join ad_groups \n        on hourly.ad_group_id = ad_groups.ad_group_id\n        and hourly.source_relation = ad_groups.source_relation\n    left join advertiser\n        on ad_groups.advertiser_id = advertiser.advertiser_id\n        and ad_groups.source_relation = advertiser.source_relation\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n        and ad_groups.source_relation = campaigns.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_tiktok_ads.tiktok_ads__ad_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.246977Z", "completed_at": "2024-08-04T03:35:19.254066Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.254446Z", "completed_at": "2024-08-04T03:35:19.254452Z"}], "thread_id": "Thread-1", "execution_time": 0.008538007736206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads.tiktok_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith hourly as (\n    \n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly\n), \n\nads as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_history\n    where is_most_recent_record\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_history\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__advertiser\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_history\n    where is_most_recent_record\n),\n\naggregated as (\n\n    select\n        hourly.source_relation,\n        cast(hourly.stat_time_hour as date) as date_day,\n        ad_groups.advertiser_id,\n        advertiser.advertiser_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_groups.ad_group_id,\n        ad_groups.ad_group_name,\n        hourly.ad_id,\n        ads.ad_name,\n        advertiser.currency,\n        ad_groups.category,\n        ad_groups.gender,\n        ad_groups.audience_type,\n        ad_groups.budget,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        \n\n\n\n\n    \n    from hourly\n    left join ads\n        on hourly.ad_id = ads.ad_id\n        and hourly.source_relation = ads.source_relation\n    left join ad_groups \n        on ads.ad_group_id = ad_groups.ad_group_id\n        and ads.source_relation = ad_groups.source_relation\n    left join advertiser\n        on ads.advertiser_id = advertiser.advertiser_id\n        and ads.source_relation = advertiser.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_tiktok_ads.tiktok_ads__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.256531Z", "completed_at": "2024-08-04T03:35:19.263979Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.264347Z", "completed_at": "2024-08-04T03:35:19.264353Z"}], "thread_id": "Thread-1", "execution_time": 0.00881648063659668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads.tiktok_ads__url_report", "compiled": true, "compiled_code": "\n\nwith hourly as (\n    \n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly\n), \n\nads as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_history\n    where is_most_recent_record\n), \n\nad_groups as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__ad_group_history\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__advertiser\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_history\n    where is_most_recent_record\n), \n\naggregated as (\n\n    select\n        hourly.source_relation,\n        cast(hourly.stat_time_hour as date) as date_day,\n        ad_groups.advertiser_id,\n        advertiser.advertiser_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_groups.ad_group_id,\n        ad_groups.ad_group_name,\n        hourly.ad_id,\n        ads.ad_name,\n        ads.base_url,\n        ads.url_host,\n        ads.url_path,\n        ads.utm_source,\n        ads.utm_medium,\n        ads.utm_campaign,\n        ads.utm_content,\n        ads.utm_term,\n        advertiser.currency,\n        ad_groups.category,\n        ad_groups.gender,\n        ad_groups.audience_type,\n        ad_groups.budget,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        \n\n\n\n\n    \n    from hourly\n    left join ads\n        on hourly.ad_id = ads.ad_id\n        and hourly.source_relation = ads.source_relation\n    left join ad_groups \n        on ads.ad_group_id = ad_groups.ad_group_id\n        and ads.source_relation = ad_groups.source_relation\n    left join advertiser\n        on ads.advertiser_id = advertiser.advertiser_id\n        and ads.source_relation = advertiser.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n\n    \n        -- We are filtering for only ads where url fields are populated.\n        where ads.landing_page_url is not null\n    \n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\n\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_tiktok_ads.tiktok_ads__url_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.266289Z", "completed_at": "2024-08-04T03:35:19.392761Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.393159Z", "completed_at": "2024-08-04T03:35:19.393169Z"}], "thread_id": "Thread-1", "execution_time": 0.12787318229675293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_history_source_relation__campaign_id__updated_at.52babc6036", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, updated_at\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_history\n    group by source_relation, campaign_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.395132Z", "completed_at": "2024-08-04T03:35:19.399264Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.399674Z", "completed_at": "2024-08-04T03:35:19.399681Z"}], "thread_id": "Thread-1", "execution_time": 0.005414724349975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_history_campaign_id.7f9147d1e1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_history\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.401505Z", "completed_at": "2024-08-04T03:35:19.407241Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.407653Z", "completed_at": "2024-08-04T03:35:19.407659Z"}], "thread_id": "Thread-1", "execution_time": 0.006970405578613281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.tiktok_ads.tiktok_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith hourly as (\n    \n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_report_hourly\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_history\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__advertiser\n), \n\naggregated as (\n\n    select\n        hourly.source_relation,\n        cast(hourly.stat_time_hour as date) as date_day,\n        advertiser.advertiser_id,\n        advertiser.advertiser_name,\n        hourly.campaign_id,\n        campaigns.campaign_name,\n        advertiser.currency,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        \n\n\n\n\n    \n    from hourly\n    left join campaigns\n        on hourly.campaign_id = campaigns.campaign_id\n        and hourly.source_relation = campaigns.source_relation\n    left join advertiser\n        on campaigns.advertiser_id = advertiser.advertiser_id\n        and campaigns.source_relation = advertiser.source_relation\n    group by 1,2,3,4,5,6,7\n\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_tiktok_ads.tiktok_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.409705Z", "completed_at": "2024-08-04T03:35:19.413779Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.414164Z", "completed_at": "2024-08-04T03:35:19.414170Z"}], "thread_id": "Thread-1", "execution_time": 0.005467414855957031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_report_hourly_source_relation__campaign_id__stat_time_hour.91b84f3ede", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, stat_time_hour\n    from TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_report_hourly\n    group by source_relation, campaign_id, stat_time_hour\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.416089Z", "completed_at": "2024-08-04T03:35:19.420919Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.421296Z", "completed_at": "2024-08-04T03:35:19.421303Z"}], "thread_id": "Thread-1", "execution_time": 0.006158351898193359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id.ef898379fb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_report_hourly\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.423196Z", "completed_at": "2024-08-04T03:35:19.427027Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.427426Z", "completed_at": "2024-08-04T03:35:19.427432Z"}], "thread_id": "Thread-1", "execution_time": 0.005158424377441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour.e75e13184c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect stat_time_hour\nfrom TEST.PUBLIC_stg_tiktok_ads.stg_tiktok_ads__campaign_report_hourly\nwhere stat_time_hour is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.429307Z", "completed_at": "2024-08-04T03:35:19.433402Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.433803Z", "completed_at": "2024-08-04T03:35:19.433810Z"}], "thread_id": "Thread-1", "execution_time": 0.00536656379699707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__account_history_source_relation__account_id__updated_timestamp.3492933c38", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, updated_timestamp\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__account_history\n    group by source_relation, account_id, updated_timestamp\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.435738Z", "completed_at": "2024-08-04T03:35:19.439630Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.440011Z", "completed_at": "2024-08-04T03:35:19.440017Z"}], "thread_id": "Thread-1", "execution_time": 0.005218029022216797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__account_history_account_id.66fb3601e2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__account_history\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.441945Z", "completed_at": "2024-08-04T03:35:19.446978Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.447380Z", "completed_at": "2024-08-04T03:35:19.447387Z"}], "thread_id": "Thread-1", "execution_time": 0.006394624710083008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_history_source_relation__campaign_id__updated_timestamp.9b0c16487d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, updated_timestamp\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_history\n    group by source_relation, campaign_id, updated_timestamp\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.449300Z", "completed_at": "2024-08-04T03:35:19.453237Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.453630Z", "completed_at": "2024-08-04T03:35:19.453637Z"}], "thread_id": "Thread-1", "execution_time": 0.005265712738037109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__campaign_history_campaign_id.51218487ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_history\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.455555Z", "completed_at": "2024-08-04T03:35:19.461375Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.461766Z", "completed_at": "2024-08-04T03:35:19.461772Z"}], "thread_id": "Thread-1", "execution_time": 0.007161617279052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads.twitter_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_report\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_history\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__account_history\n    where is_latest_version\n),\n\nfinal as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        report.campaign_id,\n        campaigns.campaign_name,\n        campaigns.is_deleted,\n        campaigns.entity_status as campaign_status,\n        campaigns.currency,\n        campaigns.is_servable,\n        campaigns.is_standard_delivery,\n        campaigns.frequency_cap,\n        campaigns.start_timestamp,\n        campaigns.end_timestamp,\n        campaigns.created_timestamp,\n        campaigns.updated_timestamp,\n        campaigns.funding_instrument_id,\n        campaigns.daily_budget_amount,\n        campaigns.total_budget_amount,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        \n\n\n\n\n\n    from report \n    left join campaigns \n        on report.campaign_id = campaigns.campaign_id\n        and report.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_twitter_ads.twitter_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.463796Z", "completed_at": "2024-08-04T03:35:19.468827Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.469215Z", "completed_at": "2024-08-04T03:35:19.469222Z"}], "thread_id": "Thread-1", "execution_time": 0.006456613540649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_report_source_relation__date_day__campaign_id__placement.9d5717ee54", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, campaign_id, placement\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_report\n    group by source_relation, date_day, campaign_id, placement\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.471076Z", "completed_at": "2024-08-04T03:35:19.475003Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.475399Z", "completed_at": "2024-08-04T03:35:19.475406Z"}], "thread_id": "Thread-1", "execution_time": 0.005168437957763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_campaign_id.a63b62981f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.477265Z", "completed_at": "2024-08-04T03:35:19.481130Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.481504Z", "completed_at": "2024-08-04T03:35:19.481511Z"}], "thread_id": "Thread-1", "execution_time": 0.005108833312988281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_date_day.053c09786c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.483376Z", "completed_at": "2024-08-04T03:35:19.487318Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.487734Z", "completed_at": "2024-08-04T03:35:19.487740Z"}], "thread_id": "Thread-1", "execution_time": 0.0052144527435302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_placement.5067d8c4f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect placement\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_report\nwhere placement is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.489615Z", "completed_at": "2024-08-04T03:35:19.494699Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.495089Z", "completed_at": "2024-08-04T03:35:19.495096Z"}], "thread_id": "Thread-1", "execution_time": 0.00633692741394043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_history_source_relation__line_item_id__updated_timestamp.646fa5270f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, line_item_id, updated_timestamp\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_history\n    group by source_relation, line_item_id, updated_timestamp\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.496970Z", "completed_at": "2024-08-04T03:35:19.500788Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.501170Z", "completed_at": "2024-08-04T03:35:19.501176Z"}], "thread_id": "Thread-1", "execution_time": 0.005051851272583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__line_item_history_line_item_id.2cef040809", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect line_item_id\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_history\nwhere line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.503049Z", "completed_at": "2024-08-04T03:35:19.509585Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.509965Z", "completed_at": "2024-08-04T03:35:19.509971Z"}], "thread_id": "Thread-1", "execution_time": 0.007833480834960938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads.twitter_ads__keyword_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_keywords_report\n),\n\nline_items as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_history\n    where is_latest_version\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_history\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__account_history\n    where is_latest_version\n),\n\nfinal as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        line_items.campaign_id,\n        campaigns.campaign_name,\n        report.line_item_id,\n        line_items.name as line_item_name,\n        report.keyword_id,\n        report.keyword,\n        line_items.currency,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        \n\n\n\n\n\n    from report \n    left join line_items\n        on report.line_item_id = line_items.line_item_id\n        and report.source_relation = line_items.source_relation\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n        and line_items.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_twitter_ads.twitter_ads__keyword_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.512030Z", "completed_at": "2024-08-04T03:35:19.516172Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.516571Z", "completed_at": "2024-08-04T03:35:19.516577Z"}], "thread_id": "Thread-1", "execution_time": 0.0055751800537109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_keywords_report_source_relation__date_day__keyword_id.579bdc1f1c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, keyword_id\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_keywords_report\n    group by source_relation, date_day, keyword_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.518598Z", "completed_at": "2024-08-04T03:35:19.523404Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.523826Z", "completed_at": "2024-08-04T03:35:19.523833Z"}], "thread_id": "Thread-1", "execution_time": 0.006170988082885742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__line_item_keywords_report_date_day.c7e7155b13", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_keywords_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.526428Z", "completed_at": "2024-08-04T03:35:19.531878Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.532277Z", "completed_at": "2024-08-04T03:35:19.532288Z"}], "thread_id": "Thread-1", "execution_time": 0.006979942321777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__line_item_keywords_report_keyword_id.e5f015e9ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_keywords_report\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.534349Z", "completed_at": "2024-08-04T03:35:19.541543Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.541939Z", "completed_at": "2024-08-04T03:35:19.541947Z"}], "thread_id": "Thread-1", "execution_time": 0.00859212875366211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads.twitter_ads__line_item_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_report\n),\n\nline_items as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_history\n    where is_latest_version\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_history\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__account_history\n    where is_latest_version\n),\n\nfinal as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        line_items.campaign_id,\n        campaigns.campaign_name,\n        report.line_item_id,\n        line_items.name as line_item_name,\n        line_items.is_deleted,\n        line_items.entity_status as line_item_status,\n        campaigns.entity_status as campaign_status,\n        line_items.currency,\n        line_items.advertiser_domain,\n        line_items.advertiser_user_id,\n        line_items.bid_type,\n        line_items.bid_unit,\n        line_items.charge_by,\n        line_items.objective,\n        line_items.optimization,\n        line_items.product_type,\n        line_items.primary_web_event_tag,\n        line_items.creative_source,\n        line_items.start_timestamp,\n        line_items.end_timestamp,\n        line_items.created_timestamp,\n        line_items.updated_timestamp,\n        line_items.target_cpa,\n        line_items.total_budget_amount,\n        line_items.bid_amount,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        \n\n\n\n\n\n    from report \n    left join line_items\n        on report.line_item_id = line_items.line_item_id\n        and report.source_relation = line_items.source_relation\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n        and line_items.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_twitter_ads.twitter_ads__line_item_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.544039Z", "completed_at": "2024-08-04T03:35:19.549586Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.549990Z", "completed_at": "2024-08-04T03:35:19.549997Z"}], "thread_id": "Thread-1", "execution_time": 0.00704503059387207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_report_source_relation__date_day__line_item_id__placement.6c8686e61c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, line_item_id, placement\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_report\n    group by source_relation, date_day, line_item_id, placement\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.551922Z", "completed_at": "2024-08-04T03:35:19.555914Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.556292Z", "completed_at": "2024-08-04T03:35:19.556298Z"}], "thread_id": "Thread-1", "execution_time": 0.005253791809082031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_date_day.0f4d8cc8fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.558206Z", "completed_at": "2024-08-04T03:35:19.562107Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.562486Z", "completed_at": "2024-08-04T03:35:19.562493Z"}], "thread_id": "Thread-1", "execution_time": 0.005187034606933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_line_item_id.9f5a4860b7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect line_item_id\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_report\nwhere line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.564451Z", "completed_at": "2024-08-04T03:35:19.568479Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.568875Z", "completed_at": "2024-08-04T03:35:19.568881Z"}], "thread_id": "Thread-1", "execution_time": 0.005354166030883789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_placement.cd7e77e0eb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect placement\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_report\nwhere placement is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.570752Z", "completed_at": "2024-08-04T03:35:19.575904Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.576291Z", "completed_at": "2024-08-04T03:35:19.576297Z"}], "thread_id": "Thread-1", "execution_time": 0.006397247314453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_history_source_relation__promoted_tweet_id__updated_timestamp.7016099e0a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, promoted_tweet_id, updated_timestamp\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_history\n    group by source_relation, promoted_tweet_id, updated_timestamp\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.578236Z", "completed_at": "2024-08-04T03:35:19.582258Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.582646Z", "completed_at": "2024-08-04T03:35:19.582652Z"}], "thread_id": "Thread-1", "execution_time": 0.00537109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id.f447a1cd09", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect promoted_tweet_id\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_history\nwhere promoted_tweet_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.584570Z", "completed_at": "2024-08-04T03:35:19.590265Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.590645Z", "completed_at": "2024-08-04T03:35:19.590651Z"}], "thread_id": "Thread-1", "execution_time": 0.006926536560058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads.twitter_ads__account_report", "compiled": true, "compiled_code": "\n\nwith accounts as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__account_history\n    where is_latest_version\n),\n\npromoted_tweet_report as (\n    \n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_report\n),\n\nrollup_report as (\n\n    select \n        source_relation,\n        date_day,\n        account_id,\n        placement,\n        sum(clicks) as clicks, \n        sum(impressions) as impressions,\n        sum(spend) as spend,\n        sum(spend_micro) as spend_micro,\n        sum(url_clicks) as url_clicks\n\n        \n\n\n\n\n\n    from promoted_tweet_report\n    group by 1,2,3,4\n\n),\n\nfinal as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        accounts.is_deleted,\n        accounts.timezone,\n        accounts.industry_type,\n        accounts.approval_status,\n        accounts.business_name,\n        accounts.business_id,\n        accounts.created_timestamp,\n        accounts.updated_timestamp,\n        accounts.timezone_switched_timestamp,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        \n\n\n\n\n\n    from rollup_report as report\n    left join accounts \n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_twitter_ads.twitter_ads__account_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.592648Z", "completed_at": "2024-08-04T03:35:19.597039Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.597436Z", "completed_at": "2024-08-04T03:35:19.597442Z"}], "thread_id": "Thread-1", "execution_time": 0.0056989192962646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_report_source_relation__date_day__promoted_tweet_id__placement.9d96bf07d3", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, promoted_tweet_id, placement\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_report\n    group by source_relation, date_day, promoted_tweet_id, placement\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.599384Z", "completed_at": "2024-08-04T03:35:19.604303Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.604692Z", "completed_at": "2024-08-04T03:35:19.604699Z"}], "thread_id": "Thread-1", "execution_time": 0.006262779235839844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_date_day.c4c46a5894", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.606590Z", "completed_at": "2024-08-04T03:35:19.610503Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.610900Z", "completed_at": "2024-08-04T03:35:19.610906Z"}], "thread_id": "Thread-1", "execution_time": 0.005167484283447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_placement.c1b1f648b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect placement\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_report\nwhere placement is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.612814Z", "completed_at": "2024-08-04T03:35:19.616859Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.617244Z", "completed_at": "2024-08-04T03:35:19.617250Z"}], "thread_id": "Thread-1", "execution_time": 0.0052852630615234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_promoted_tweet_id.6028694598", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect promoted_tweet_id\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_report\nwhere promoted_tweet_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.619180Z", "completed_at": "2024-08-04T03:35:19.627723Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.628102Z", "completed_at": "2024-08-04T03:35:19.628108Z"}], "thread_id": "Thread-1", "execution_time": 0.009869813919067383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads.twitter_ads__promoted_tweet_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_report\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_history\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__account_history\n    where is_latest_version\n),\n\nline_items as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_history\n    where is_latest_version\n),\n\npromoted_tweets as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_history\n    where is_latest_version\n),\n\ntweets as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet\n),\n\nfinal as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        report.placement, \n        accounts.account_id,\n        accounts.name as account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        line_items.line_item_id,\n        line_items.name as line_item_name,\n        promoted_tweets.promoted_tweet_id,\n        promoted_tweets.tweet_id,\n        tweets.name as tweet_name,\n        tweets.full_text,\n        promoted_tweets.is_deleted,\n        promoted_tweets.entity_status as promoted_tweet_status,\n        campaigns.entity_status as campaign_status,\n        line_items.entity_status as line_item_status,\n        tweets.language,\n        campaigns.currency,\n        promoted_tweets.approval_status,\n        promoted_tweets.created_timestamp,\n        promoted_tweets.updated_timestamp,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        \n\n\n\n\n\n    from report \n    left join promoted_tweets \n        on report.promoted_tweet_id = promoted_tweets.promoted_tweet_id\n        and report.source_relation = promoted_tweets.source_relation\n    left join tweets\n        on promoted_tweets.tweet_id = tweets.tweet_id\n        and promoted_tweets.source_relation = tweets.source_relation\n    left join line_items\n        on promoted_tweets.line_item_id = line_items.line_item_id\n        and promoted_tweets.source_relation = line_items.source_relation\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n        and line_items.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22\n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_twitter_ads.twitter_ads__promoted_tweet_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.630070Z", "completed_at": "2024-08-04T03:35:19.634390Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.634789Z", "completed_at": "2024-08-04T03:35:19.634795Z"}], "thread_id": "Thread-1", "execution_time": 0.0057027339935302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__tweet_source_relation__tweet_id.70de7f05f5", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, tweet_id\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet\n    group by source_relation, tweet_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.636696Z", "completed_at": "2024-08-04T03:35:19.640571Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.640952Z", "completed_at": "2024-08-04T03:35:19.640959Z"}], "thread_id": "Thread-1", "execution_time": 0.00509333610534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__tweet_tweet_id.a0427f37cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tweet_id\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet\nwhere tweet_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.642795Z", "completed_at": "2024-08-04T03:35:19.651672Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.652060Z", "completed_at": "2024-08-04T03:35:19.652066Z"}], "thread_id": "Thread-1", "execution_time": 0.01010274887084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_ads.twitter_ads__url_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_report\n),\n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__campaign_history\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__account_history\n    where is_latest_version\n),\n\nline_items as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__line_item_history\n    where is_latest_version\n),\n\npromoted_tweets as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__promoted_tweet_history\n    where is_latest_version\n),\n\ntweets as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet\n),\n\ntweet_url as (\n\n    select *\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet_url\n    where index = 0\n),\n\nfinal as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        report.placement, \n        accounts.account_id,\n        accounts.name as account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        line_items.line_item_id,\n        line_items.name as line_item_name,\n        promoted_tweets.promoted_tweet_id,\n        promoted_tweets.tweet_id,\n        tweets.name as tweet_name,\n        tweets.full_text as tweet_full_text,\n        tweet_url.base_url,\n        tweet_url.url_host,\n        tweet_url.url_path,\n        tweet_url.utm_source,\n        tweet_url.utm_medium,\n        tweet_url.utm_campaign,\n        tweet_url.utm_content,\n        tweet_url.utm_term,\n        tweet_url.expanded_url,\n        tweet_url.display_url,\n        campaigns.currency,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        \n\n\n\n\n\n    from report \n    left join promoted_tweets \n        on report.promoted_tweet_id = promoted_tweets.promoted_tweet_id\n        and report.source_relation = promoted_tweets.source_relation\n    left join tweet_url \n        on promoted_tweets.tweet_id = tweet_url.tweet_id\n        and promoted_tweets.source_relation = tweet_url.source_relation\n    left join tweets\n        on promoted_tweets.tweet_id = tweets.tweet_id\n        and promoted_tweets.source_relation = tweets.source_relation\n    left join line_items\n        on promoted_tweets.line_item_id = line_items.line_item_id\n        and promoted_tweets.source_relation = line_items.source_relation\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n        and line_items.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    \n    \n        where tweet_url.expanded_url is not null\n    \n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24\n\n    \n)\n\nselect *\nfrom final", "relation_name": "TEST.PUBLIC_twitter_ads.twitter_ads__url_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.654068Z", "completed_at": "2024-08-04T03:35:19.659483Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.659893Z", "completed_at": "2024-08-04T03:35:19.659899Z"}], "thread_id": "Thread-1", "execution_time": 0.006844043731689453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__tweet_url_source_relation__index__tweet_id.ce1a2b4a87", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, index, tweet_id\n    from TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet_url\n    group by source_relation, index, tweet_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.661812Z", "completed_at": "2024-08-04T03:35:19.665706Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.666090Z", "completed_at": "2024-08-04T03:35:19.666096Z"}], "thread_id": "Thread-1", "execution_time": 0.005206108093261719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__tweet_url_index.e998fb67be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect index\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet_url\nwhere index is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.668039Z", "completed_at": "2024-08-04T03:35:19.671926Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.672305Z", "completed_at": "2024-08-04T03:35:19.672312Z"}], "thread_id": "Thread-1", "execution_time": 0.005232334136962891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads_source.not_null_stg_twitter_ads__tweet_url_tweet_id.f7e1670218", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tweet_id\nfrom TEST.PUBLIC_twitter_ads_source.stg_twitter_ads__tweet_url\nwhere tweet_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.674206Z", "completed_at": "2024-08-04T03:35:19.681719Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.682100Z", "completed_at": "2024-08-04T03:35:19.682106Z"}], "thread_id": "Thread-1", "execution_time": 0.008814573287963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads.amazon_ads__ad_group_report", "compiled": true, "compiled_code": "\n\nwith report as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_level_report\n), \n\naccount_info as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__profile\n    where _fivetran_deleted = False\n),\n\nportfolios as (\n    select *\n    from TEST.PUBLIC_amazon_ads.int_amazon_ads__portfolio_history\n), \n\ncampaigns as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nad_groups as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\nfields as (\n    select\n        report.source_relation,\n        report.date_day,\n        account_info.account_name,\n        account_info.account_id,\n        account_info.country_code,\n        account_info.profile_id,\n        portfolios.portfolio_name,\n        portfolios.portfolio_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        report.ad_group_id,\n        ad_groups.serving_status,\n        ad_groups.state,\n        ad_groups.default_bid,\n        report.campaign_bidding_strategy,\n        sum(report.cost) as cost,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions \n\n        \n\n\n\n\n\n    from report\n\n    left join ad_groups\n        on ad_groups.ad_group_id = report.ad_group_id\n        and ad_groups.source_relation = report.source_relation\n    left join campaigns\n        on campaigns.campaign_id = ad_groups.campaign_id\n        and campaigns.source_relation = ad_groups.source_relation\n    left join portfolios\n        on portfolios.portfolio_id = campaigns.portfolio_id\n        and portfolios.source_relation = campaigns.source_relation\n    left join account_info\n        on account_info.profile_id = campaigns.profile_id\n        and account_info.source_relation = campaigns.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_amazon_ads.amazon_ads__ad_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.684223Z", "completed_at": "2024-08-04T03:35:19.691476Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.691867Z", "completed_at": "2024-08-04T03:35:19.691873Z"}], "thread_id": "Thread-1", "execution_time": 0.008723258972167969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads.amazon_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith report as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__advertised_product_report\n), \n\naccount_info as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__profile\n    where _fivetran_deleted = False\n),\n\nportfolios as (\n    select *\n    from TEST.PUBLIC_amazon_ads.int_amazon_ads__portfolio_history\n), \n\ncampaigns as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nad_groups as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\nads as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__product_ad_history\n    where is_most_recent_record = True\n),\n\nfields as (\n    select\n        report.source_relation,\n        report.date_day,\n        account_info.account_name,\n        account_info.account_id,\n        account_info.country_code,\n        account_info.profile_id,\n        portfolios.portfolio_name,\n        portfolios.portfolio_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        ad_groups.ad_group_name,\n        report.ad_group_id,\n        report.ad_id,\n        ads.serving_status,\n        ads.state,\n        report.advertised_asin,\n        report.advertised_sku,\n        report.campaign_budget_amount,\n        report.campaign_budget_currency_code,\n        report.campaign_budget_type,\n        sum(report.cost) as cost,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions \n\n        \n\n\n\n\n\n    from report\n    \n    left join ads\n        on ads.ad_id = report.ad_id\n        and ads.source_relation = report.source_relation\n    left join ad_groups\n        on ad_groups.ad_group_id = report.ad_group_id\n        and ad_groups.source_relation = report.source_relation\n    left join campaigns\n        on campaigns.campaign_id = report.campaign_id\n        and campaigns.source_relation = report.source_relation\n    left join portfolios\n        on portfolios.portfolio_id = campaigns.portfolio_id\n        and portfolios.source_relation = campaigns.source_relation \n    left join account_info\n        on account_info.profile_id = campaigns.profile_id\n        and account_info.source_relation = campaigns.source_relation \n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_amazon_ads.amazon_ads__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.693796Z", "completed_at": "2024-08-04T03:35:19.699993Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.700367Z", "completed_at": "2024-08-04T03:35:19.700373Z"}], "thread_id": "Thread-1", "execution_time": 0.007454395294189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads.amazon_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith report as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_level_report\n), \n\naccount_info as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__profile\n    where _fivetran_deleted = False\n),\n\nportfolios as (\n    select *\n    from TEST.PUBLIC_amazon_ads.int_amazon_ads__portfolio_history\n), \n\ncampaigns as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nfields as (\n    select\n        report.source_relation,\n        report.date_day,\n        account_info.account_name,\n        account_info.account_id,\n        account_info.country_code,\n        account_info.profile_id,\n        portfolios.portfolio_name,\n        portfolios.portfolio_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        report.campaign_bidding_strategy,\n        report.campaign_budget_amount,\n        report.campaign_budget_currency_code,\n        report.campaign_budget_type,\n        sum(report.cost) as cost,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions \n\n        \n\n\n\n\n\n    from report\n\n    left join campaigns\n        on campaigns.campaign_id = report.campaign_id\n        and campaigns.source_relation = report.source_relation\n    left join portfolios\n        on portfolios.portfolio_id = campaigns.portfolio_id\n        and portfolios.source_relation = campaigns.source_relation \n    left join account_info\n        on account_info.profile_id = campaigns.profile_id\n        and account_info.source_relation = campaigns.source_relation \n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_amazon_ads.amazon_ads__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.702280Z", "completed_at": "2024-08-04T03:35:19.709732Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.710117Z", "completed_at": "2024-08-04T03:35:19.710123Z"}], "thread_id": "Thread-1", "execution_time": 0.008788347244262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads.amazon_ads__keyword_report", "compiled": true, "compiled_code": "\n\nwith report as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__targeting_keyword_report\n), \n\naccount_info as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__profile\n    where _fivetran_deleted = False\n),\n\nportfolios as (\n    select *\n    from TEST.PUBLIC_amazon_ads.int_amazon_ads__portfolio_history\n), \n\ncampaigns as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nad_groups as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\nkeywords as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__keyword_history\n    where is_most_recent_record = True\n), \n\nfields as (\n    select\n        report.source_relation,\n        report.date_day,\n        account_info.account_name,\n        account_info.account_id,\n        account_info.country_code,\n        account_info.profile_id,\n        portfolios.portfolio_name,\n        portfolios.portfolio_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        ad_groups.ad_group_name,\n        report.ad_group_id,\n        report.keyword_id,\n        keywords.keyword_text,\n        keywords.serving_status,\n        keywords.state,\n        report.keyword_bid,\n        report.keyword_type,\n        report.match_type,\n        sum(report.cost) as cost,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions \n\n        \n\n\n\n\n\n    from report\n\n    left join keywords\n        on keywords.keyword_id = report.keyword_id\n        and keywords.source_relation = report.source_relation\n    left join ad_groups\n        on ad_groups.ad_group_id = report.ad_group_id\n        and ad_groups.source_relation = report.source_relation\n    left join campaigns\n        on campaigns.campaign_id = report.campaign_id\n        and campaigns.source_relation = report.source_relation\n    left join portfolios\n        on portfolios.portfolio_id = campaigns.portfolio_id\n        and portfolios.source_relation = campaigns.source_relation\n    left join account_info\n        on account_info.profile_id = campaigns.profile_id\n        and account_info.source_relation = campaigns.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_amazon_ads.amazon_ads__keyword_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.712448Z", "completed_at": "2024-08-04T03:35:19.720763Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.721144Z", "completed_at": "2024-08-04T03:35:19.721150Z"}], "thread_id": "Thread-1", "execution_time": 0.00998830795288086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.amazon_ads.amazon_ads__search_report", "compiled": true, "compiled_code": "\n\nwith report as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__search_term_ad_keyword_report\n), \n\naccount_info as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__profile\n    where _fivetran_deleted = False\n),\n\nportfolios as (\n    select *\n    from TEST.PUBLIC_amazon_ads.int_amazon_ads__portfolio_history\n), \n\ncampaigns as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__campaign_history\n    where is_most_recent_record = True\n),\n\nad_groups as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__ad_group_history\n    where is_most_recent_record = True\n), \n\nkeywords as (\n    select *\n    from TEST.PUBLIC_amazon_ads_source.stg_amazon_ads__keyword_history\n    where is_most_recent_record = True\n), \n\nfields as (\n    select\n        report.source_relation,\n        report.date_day,\n        account_info.account_name,\n        account_info.account_id,\n        account_info.country_code,\n        account_info.profile_id,\n        portfolios.portfolio_name,\n        portfolios.portfolio_id,\n        campaigns.campaign_name,\n        report.campaign_id,\n        ad_groups.ad_group_name,\n        report.ad_group_id,\n        report.keyword_id,\n        keywords.keyword_text,\n        keywords.match_type,\n        keywords.serving_status,\n        keywords.state,\n        report.search_term,\n        report.targeting,\n        sum(report.cost) as cost,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions \n\n        \n\n\n\n\n\n    from report\n\n    left join keywords\n        on keywords.keyword_id = report.keyword_id\n        and keywords.source_relation = report.source_relation\n    left join ad_groups\n        on ad_groups.ad_group_id = report.ad_group_id\n        and ad_groups.source_relation = report.source_relation\n    left join campaigns\n        on campaigns.campaign_id = report.campaign_id\n        and campaigns.source_relation = report.source_relation\n    left join portfolios\n        on portfolios.portfolio_id = campaigns.portfolio_id\n        and portfolios.source_relation = campaigns.source_relation\n    left join account_info\n        on account_info.profile_id = campaigns.profile_id\n        and account_info.source_relation = campaigns.source_relation\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_amazon_ads.amazon_ads__search_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.723096Z", "completed_at": "2024-08-04T03:35:19.727460Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.727869Z", "completed_at": "2024-08-04T03:35:19.727876Z"}], "thread_id": "Thread-1", "execution_time": 0.005753993988037109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__account_report_source_relation__date_day__profile_id.5ff488055c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, profile_id\n    from TEST.PUBLIC_amazon_ads.amazon_ads__account_report\n    group by source_relation, date_day, profile_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.729754Z", "completed_at": "2024-08-04T03:35:19.733664Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.734051Z", "completed_at": "2024-08-04T03:35:19.734057Z"}], "thread_id": "Thread-1", "execution_time": 0.005206108093261719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.not_null_amazon_ads__account_report_account_id.83adef7061", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_amazon_ads.amazon_ads__account_report\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.736048Z", "completed_at": "2024-08-04T03:35:19.740815Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.741185Z", "completed_at": "2024-08-04T03:35:19.741192Z"}], "thread_id": "Thread-1", "execution_time": 0.006026506423950195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.not_null_amazon_ads__account_report_profile_id.87fb8dbe66", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect profile_id\nfrom TEST.PUBLIC_amazon_ads.amazon_ads__account_report\nwhere profile_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.743060Z", "completed_at": "2024-08-04T03:35:19.747130Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.747543Z", "completed_at": "2024-08-04T03:35:19.747554Z"}], "thread_id": "Thread-1", "execution_time": 0.005342006683349609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__portfolio_report_source_relation__date_day__portfolio_id.b3bfe4fce4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, portfolio_id\n    from TEST.PUBLIC_amazon_ads.amazon_ads__portfolio_report\n    group by source_relation, date_day, portfolio_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.749457Z", "completed_at": "2024-08-04T03:35:19.753293Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.753676Z", "completed_at": "2024-08-04T03:35:19.753683Z"}], "thread_id": "Thread-1", "execution_time": 0.005154132843017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.not_null_amazon_ads__portfolio_report_profile_id.1a910441c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect profile_id\nfrom TEST.PUBLIC_amazon_ads.amazon_ads__portfolio_report\nwhere profile_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.755584Z", "completed_at": "2024-08-04T03:35:19.759797Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.760192Z", "completed_at": "2024-08-04T03:35:19.760198Z"}], "thread_id": "Thread-1", "execution_time": 0.0055005550384521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__ad_group_report_source_relation__organization_id__campaign_id__ad_group_id__date_day.3c4191e648", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, organization_id, campaign_id, ad_group_id, date_day\n    from TEST.PUBLIC_apple_search_ads.apple_search_ads__ad_group_report\n    group by source_relation, organization_id, campaign_id, ad_group_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.762101Z", "completed_at": "2024-08-04T03:35:19.767087Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.767498Z", "completed_at": "2024-08-04T03:35:19.767505Z"}], "thread_id": "Thread-1", "execution_time": 0.0063381195068359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__ad_group_report_ad_group_id.60febec6b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__ad_group_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.769353Z", "completed_at": "2024-08-04T03:35:19.773238Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.773621Z", "completed_at": "2024-08-04T03:35:19.773628Z"}], "thread_id": "Thread-1", "execution_time": 0.005101442337036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__ad_group_report_date_day.e6ffb30b3c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__ad_group_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.775598Z", "completed_at": "2024-08-04T03:35:19.779692Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.780090Z", "completed_at": "2024-08-04T03:35:19.780097Z"}], "thread_id": "Thread-1", "execution_time": 0.005472898483276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__ad_report_source_relation__organization_id__campaign_id__ad_group_id__ad_id__date_day.6d5d406b55", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, organization_id, campaign_id, ad_group_id, ad_id, date_day\n    from TEST.PUBLIC_apple_search_ads.apple_search_ads__ad_report\n    group by source_relation, organization_id, campaign_id, ad_group_id, ad_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.781972Z", "completed_at": "2024-08-04T03:35:19.785888Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.786262Z", "completed_at": "2024-08-04T03:35:19.786268Z"}], "thread_id": "Thread-1", "execution_time": 0.005148410797119141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__ad_report_ad_id.0ab2c5075c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.788172Z", "completed_at": "2024-08-04T03:35:19.793106Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.793477Z", "completed_at": "2024-08-04T03:35:19.793483Z"}], "thread_id": "Thread-1", "execution_time": 0.0062618255615234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__ad_report_date_day.b86c049e17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__ad_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.795420Z", "completed_at": "2024-08-04T03:35:19.799479Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.799876Z", "completed_at": "2024-08-04T03:35:19.799882Z"}], "thread_id": "Thread-1", "execution_time": 0.005413532257080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__campaign_report_source_relation__organization_id__campaign_id__date_day.0fdb29354b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, organization_id, campaign_id, date_day\n    from TEST.PUBLIC_apple_search_ads.apple_search_ads__campaign_report\n    group by source_relation, organization_id, campaign_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.801828Z", "completed_at": "2024-08-04T03:35:19.805712Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.806116Z", "completed_at": "2024-08-04T03:35:19.806123Z"}], "thread_id": "Thread-1", "execution_time": 0.0052509307861328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__campaign_report_campaign_id.e26ed1e146", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.808088Z", "completed_at": "2024-08-04T03:35:19.812177Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.812560Z", "completed_at": "2024-08-04T03:35:19.812566Z"}], "thread_id": "Thread-1", "execution_time": 0.005364894866943359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__campaign_report_date_day.35652b8d1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__campaign_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.814446Z", "completed_at": "2024-08-04T03:35:19.819768Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.820158Z", "completed_at": "2024-08-04T03:35:19.820165Z"}], "thread_id": "Thread-1", "execution_time": 0.006581544876098633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__keyword_report_source_relation__organization_id__campaign_id__ad_group_id__keyword_id__date_day.974556d271", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, organization_id, campaign_id, ad_group_id, keyword_id, date_day\n    from TEST.PUBLIC_apple_search_ads.apple_search_ads__keyword_report\n    group by source_relation, organization_id, campaign_id, ad_group_id, keyword_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.822012Z", "completed_at": "2024-08-04T03:35:19.825879Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.826253Z", "completed_at": "2024-08-04T03:35:19.826259Z"}], "thread_id": "Thread-1", "execution_time": 0.005086421966552734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__keyword_report_date_day.3dec8d0e82", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__keyword_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.828132Z", "completed_at": "2024-08-04T03:35:19.832032Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.832408Z", "completed_at": "2024-08-04T03:35:19.832415Z"}], "thread_id": "Thread-1", "execution_time": 0.005147695541381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__keyword_report_keyword_id.ea493710db", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__keyword_report\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.834306Z", "completed_at": "2024-08-04T03:35:19.839318Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.839748Z", "completed_at": "2024-08-04T03:35:19.839755Z"}], "thread_id": "Thread-1", "execution_time": 0.006363868713378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__organization_report_source_relation__organization_id__date_day.8a9d834203", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, organization_id, date_day\n    from TEST.PUBLIC_apple_search_ads.apple_search_ads__organization_report\n    group by source_relation, organization_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.841627Z", "completed_at": "2024-08-04T03:35:19.845459Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.845844Z", "completed_at": "2024-08-04T03:35:19.845851Z"}], "thread_id": "Thread-1", "execution_time": 0.005062103271484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__organization_report_date_day.5784fed523", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__organization_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.847748Z", "completed_at": "2024-08-04T03:35:19.851574Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.851960Z", "completed_at": "2024-08-04T03:35:19.851966Z"}], "thread_id": "Thread-1", "execution_time": 0.005149126052856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__organization_report_organization_id.b6cf7d69f8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__organization_report\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.853873Z", "completed_at": "2024-08-04T03:35:19.858028Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.858413Z", "completed_at": "2024-08-04T03:35:19.858419Z"}], "thread_id": "Thread-1", "execution_time": 0.005476474761962891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__search_term_report_source_relation__search_term_text__match_type__date_day__keyword_id__ad_group_id__campaign_id__organization_id.82f7464f67", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, search_term_text, match_type, date_day, keyword_id, ad_group_id, campaign_id, organization_id\n    from TEST.PUBLIC_apple_search_ads.apple_search_ads__search_term_report\n    group by source_relation, search_term_text, match_type, date_day, keyword_id, ad_group_id, campaign_id, organization_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.860410Z", "completed_at": "2024-08-04T03:35:19.865469Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.865861Z", "completed_at": "2024-08-04T03:35:19.865868Z"}], "thread_id": "Thread-1", "execution_time": 0.00631403923034668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__search_term_report_date_day.1bc3b0d57c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__search_term_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.867755Z", "completed_at": "2024-08-04T03:35:19.871599Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.871988Z", "completed_at": "2024-08-04T03:35:19.871994Z"}], "thread_id": "Thread-1", "execution_time": 0.005105018615722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.apple_search_ads.not_null_apple_search_ads__search_term_report_search_term_text.aecc7447f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect search_term_text\nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__search_term_report\nwhere search_term_text is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.873875Z", "completed_at": "2024-08-04T03:35:19.878010Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.878394Z", "completed_at": "2024-08-04T03:35:19.878400Z"}], "thread_id": "Thread-1", "execution_time": 0.005391836166381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__account_report_source_relation__date_day__account_id.bf8a017de1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id\n    from TEST.PUBLIC_facebook_ads.facebook_ads__account_report\n    group by source_relation, date_day, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.880282Z", "completed_at": "2024-08-04T03:35:19.884229Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.884610Z", "completed_at": "2024-08-04T03:35:19.884616Z"}], "thread_id": "Thread-1", "execution_time": 0.005182027816772461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__account_report_account_id.9be02b4024", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__account_report\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.886504Z", "completed_at": "2024-08-04T03:35:19.891843Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.892232Z", "completed_at": "2024-08-04T03:35:19.892238Z"}], "thread_id": "Thread-1", "execution_time": 0.006642341613769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_source_relation__date_day__account_id__campaign_id__ad_set_id__ad_id.c866a344f6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    from TEST.PUBLIC_facebook_ads.facebook_ads__ad_report\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.894102Z", "completed_at": "2024-08-04T03:35:19.897972Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.898347Z", "completed_at": "2024-08-04T03:35:19.898353Z"}], "thread_id": "Thread-1", "execution_time": 0.005097150802612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__ad_report_ad_id.3811d9c238", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.900245Z", "completed_at": "2024-08-04T03:35:19.904307Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.904696Z", "completed_at": "2024-08-04T03:35:19.904702Z"}], "thread_id": "Thread-1", "execution_time": 0.005315303802490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_source_relation__date_day__account_id__campaign_id__ad_set_id.8707f6bd30", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id\n    from TEST.PUBLIC_facebook_ads.facebook_ads__ad_set_report\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.906539Z", "completed_at": "2024-08-04T03:35:19.910540Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.910927Z", "completed_at": "2024-08-04T03:35:19.910933Z"}], "thread_id": "Thread-1", "execution_time": 0.005227804183959961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__ad_set_report_ad_set_id.1ac870f5e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_set_id\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__ad_set_report\nwhere ad_set_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.912853Z", "completed_at": "2024-08-04T03:35:19.917953Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.918335Z", "completed_at": "2024-08-04T03:35:19.918342Z"}], "thread_id": "Thread-1", "execution_time": 0.006411552429199219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_source_relation__date_day__account_id__campaign_id.f97e1afff3", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id\n    from TEST.PUBLIC_facebook_ads.facebook_ads__campaign_report\n    group by source_relation, date_day, account_id, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.920199Z", "completed_at": "2024-08-04T03:35:19.924165Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.924541Z", "completed_at": "2024-08-04T03:35:19.924547Z"}], "thread_id": "Thread-1", "execution_time": 0.005196809768676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__campaign_report_campaign_id.d4f96d8d21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.926382Z", "completed_at": "2024-08-04T03:35:19.935337Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.935756Z", "completed_at": "2024-08-04T03:35:19.935763Z"}], "thread_id": "Thread-1", "execution_time": 0.010207176208496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.int_facebook_ads__creative_history", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__creative_history\n    where is_most_recent_record = true\n\n), \n\nurl_tags as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads.facebook_ads__url_tags\n), \n\nurl_tags_pivoted as (\n\n    select \n        source_relation,\n        _fivetran_id,\n        creative_id,\n        min(case when key = 'utm_source' then value end) as utm_source,\n        min(case when key = 'utm_medium' then value end) as utm_medium,\n        min(case when key = 'utm_campaign' then value end) as utm_campaign,\n        min(case when key = 'utm_content' then value end) as utm_content,\n        min(case when key = 'utm_term' then value end) as utm_term\n    from url_tags\n    group by 1,2,3\n\n), \n\nfields as (\n\n    select\n        base.source_relation,\n        base._fivetran_id,\n        base.creative_id,\n        base.account_id,\n        base.creative_name,\n        coalesce(page_link,template_page_link) as url,\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        '?',\n        1\n        )\n\n as base_url,\n        \n    \n        try_cast(\n\n    split_part(\n        \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_host,\n        '/' || \n    \n        try_cast(\n\n    split_part(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        right(\n            \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n        )\n    end,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_path,\n        coalesce(url_tags_pivoted.utm_source, nullif(\n\n    split_part(\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_source=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_source,\n        coalesce(url_tags_pivoted.utm_medium, nullif(\n\n    split_part(\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_medium=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_medium,\n        coalesce(url_tags_pivoted.utm_campaign, nullif(\n\n    split_part(\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_campaign=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_campaign,\n        coalesce(url_tags_pivoted.utm_content, nullif(\n\n    split_part(\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_content=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_content,\n        coalesce(url_tags_pivoted.utm_term, nullif(\n\n    split_part(\n        \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_term=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_term\n    from base\n    left join url_tags_pivoted\n        on base._fivetran_id = url_tags_pivoted._fivetran_id\n        and base.source_relation = url_tags_pivoted.source_relation\n        and base.creative_id = url_tags_pivoted.creative_id\n)\n\nselect *\nfrom fields", "relation_name": "TEST.PUBLIC_facebook_ads.int_facebook_ads__creative_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.937648Z", "completed_at": "2024-08-04T03:35:19.942799Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.943193Z", "completed_at": "2024-08-04T03:35:19.943199Z"}], "thread_id": "Thread-1", "execution_time": 0.006455183029174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_tags_source_relation___fivetran_id__key__type.c65de59dec", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, _fivetran_id, key, type\n    from TEST.PUBLIC_facebook_ads.facebook_ads__url_tags\n    group by source_relation, _fivetran_id, key, type\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.945137Z", "completed_at": "2024-08-04T03:35:19.949000Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.949372Z", "completed_at": "2024-08-04T03:35:19.949378Z"}], "thread_id": "Thread-1", "execution_time": 0.005089282989501953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__url_tags__fivetran_id.151d9515f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__url_tags\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.951221Z", "completed_at": "2024-08-04T03:35:19.955348Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.955776Z", "completed_at": "2024-08-04T03:35:19.955783Z"}], "thread_id": "Thread-1", "execution_time": 0.00540471076965332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__account_report_source_relation__account_id__date_day.8480aa9317", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, date_day\n    from TEST.PUBLIC_google_ads.google_ads__account_report\n    group by source_relation, account_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.957602Z", "completed_at": "2024-08-04T03:35:19.961509Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.961894Z", "completed_at": "2024-08-04T03:35:19.961900Z"}], "thread_id": "Thread-1", "execution_time": 0.005120754241943359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__account_report_account_id.abb0985422", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_google_ads.google_ads__account_report\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.964935Z", "completed_at": "2024-08-04T03:35:19.968941Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.969327Z", "completed_at": "2024-08-04T03:35:19.969334Z"}], "thread_id": "Thread-1", "execution_time": 0.006435394287109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_group_report_source_relation__ad_group_id__date_day.41d73a32f3", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, date_day\n    from TEST.PUBLIC_google_ads.google_ads__ad_group_report\n    group by source_relation, ad_group_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.971172Z", "completed_at": "2024-08-04T03:35:19.974978Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.975351Z", "completed_at": "2024-08-04T03:35:19.975381Z"}], "thread_id": "Thread-1", "execution_time": 0.005050182342529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__ad_group_report_ad_group_id.c186523c0c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_google_ads.google_ads__ad_group_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.977240Z", "completed_at": "2024-08-04T03:35:19.981265Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.981656Z", "completed_at": "2024-08-04T03:35:19.981663Z"}], "thread_id": "Thread-1", "execution_time": 0.0052683353424072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_report_source_relation__ad_id__ad_group_id__date_day.0e82f7e99a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, ad_group_id, date_day\n    from TEST.PUBLIC_google_ads.google_ads__ad_report\n    group by source_relation, ad_id, ad_group_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.983520Z", "completed_at": "2024-08-04T03:35:19.988389Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.988769Z", "completed_at": "2024-08-04T03:35:19.988776Z"}], "thread_id": "Thread-1", "execution_time": 0.00612187385559082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__ad_report_ad_id.7bd6a287ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_google_ads.google_ads__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.990624Z", "completed_at": "2024-08-04T03:35:19.994719Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:19.995108Z", "completed_at": "2024-08-04T03:35:19.995115Z"}], "thread_id": "Thread-1", "execution_time": 0.0053403377532958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__url_report_source_relation__ad_id__ad_group_id__date_day.e11b928273", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, ad_group_id, date_day\n    from TEST.PUBLIC_google_ads.google_ads__url_report\n    group by source_relation, ad_id, ad_group_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:19.997073Z", "completed_at": "2024-08-04T03:35:20.001035Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.001409Z", "completed_at": "2024-08-04T03:35:20.001415Z"}], "thread_id": "Thread-1", "execution_time": 0.005275726318359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__url_report_base_url.e3578c0f72", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom TEST.PUBLIC_google_ads.google_ads__url_report\nwhere base_url is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.003324Z", "completed_at": "2024-08-04T03:35:20.007418Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.007817Z", "completed_at": "2024-08-04T03:35:20.007823Z"}], "thread_id": "Thread-1", "execution_time": 0.005437374114990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__campaign_report_source_relation__campaign_id__advertising_channel_type__advertising_channel_subtype__date_day.29077cbd5e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, advertising_channel_type, advertising_channel_subtype, date_day\n    from TEST.PUBLIC_google_ads.google_ads__campaign_report\n    group by source_relation, campaign_id, advertising_channel_type, advertising_channel_subtype, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.009870Z", "completed_at": "2024-08-04T03:35:20.014751Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.015135Z", "completed_at": "2024-08-04T03:35:20.015141Z"}], "thread_id": "Thread-1", "execution_time": 0.006184577941894531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__campaign_report_campaign_id.cc6694fa0e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_google_ads.google_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.017022Z", "completed_at": "2024-08-04T03:35:20.021064Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.021444Z", "completed_at": "2024-08-04T03:35:20.021450Z"}], "thread_id": "Thread-1", "execution_time": 0.005272865295410156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__keyword_report_source_relation__ad_group_id__criterion_id__date_day.82605f3acd", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, criterion_id, date_day\n    from TEST.PUBLIC_google_ads.google_ads__keyword_report\n    group by source_relation, ad_group_id, criterion_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.023341Z", "completed_at": "2024-08-04T03:35:20.027255Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.027666Z", "completed_at": "2024-08-04T03:35:20.027673Z"}], "thread_id": "Thread-1", "execution_time": 0.005257606506347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__keyword_report_criterion_id.4cab66a055", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect criterion_id\nfrom TEST.PUBLIC_google_ads.google_ads__keyword_report\nwhere criterion_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.029521Z", "completed_at": "2024-08-04T03:35:20.033672Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.034063Z", "completed_at": "2024-08-04T03:35:20.034069Z"}], "thread_id": "Thread-1", "execution_time": 0.005388021469116211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__account_report_source_relation__date_day__account_id.da7ea6faeb", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id\n    from TEST.PUBLIC_linkedin_ads.linkedin_ads__account_report\n    group by source_relation, date_day, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.035985Z", "completed_at": "2024-08-04T03:35:20.040859Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.041236Z", "completed_at": "2024-08-04T03:35:20.041242Z"}], "thread_id": "Thread-1", "execution_time": 0.006193399429321289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.not_null_linkedin_ads__account_report_account_id.0c34ea1842", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__account_report\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.043108Z", "completed_at": "2024-08-04T03:35:20.046937Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.047308Z", "completed_at": "2024-08-04T03:35:20.047315Z"}], "thread_id": "Thread-1", "execution_time": 0.00513005256652832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.not_null_linkedin_ads__account_report_date_day.c4b33f8f53", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__account_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.049223Z", "completed_at": "2024-08-04T03:35:20.053310Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.053702Z", "completed_at": "2024-08-04T03:35:20.053708Z"}], "thread_id": "Thread-1", "execution_time": 0.0053975582122802734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_group_report_source_relation__date_day__campaign_group_id__account_id.36e7743abc", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, campaign_group_id, account_id\n    from TEST.PUBLIC_linkedin_ads.linkedin_ads__campaign_group_report\n    group by source_relation, date_day, campaign_group_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.055626Z", "completed_at": "2024-08-04T03:35:20.060337Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.060716Z", "completed_at": "2024-08-04T03:35:20.060722Z"}], "thread_id": "Thread-1", "execution_time": 0.006042003631591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.not_null_linkedin_ads__campaign_group_report_campaign_group_id.39b448cdaf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_group_id\nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__campaign_group_report\nwhere campaign_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.062538Z", "completed_at": "2024-08-04T03:35:20.066357Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.066740Z", "completed_at": "2024-08-04T03:35:20.066746Z"}], "thread_id": "Thread-1", "execution_time": 0.005036830902099609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.not_null_linkedin_ads__campaign_group_report_date_day.2676a1f76b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__campaign_group_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.068648Z", "completed_at": "2024-08-04T03:35:20.072684Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.073071Z", "completed_at": "2024-08-04T03:35:20.073078Z"}], "thread_id": "Thread-1", "execution_time": 0.005344867706298828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_report_source_relation__date_day__campaign_id__account_id__campaign_group_id.89a0d4ba0b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, campaign_id, account_id, campaign_group_id\n    from TEST.PUBLIC_linkedin_ads.linkedin_ads__campaign_report\n    group by source_relation, date_day, campaign_id, account_id, campaign_group_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.074947Z", "completed_at": "2024-08-04T03:35:20.078870Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.079246Z", "completed_at": "2024-08-04T03:35:20.079253Z"}], "thread_id": "Thread-1", "execution_time": 0.0052106380462646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.not_null_linkedin_ads__campaign_report_campaign_id.bf43964b15", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.081118Z", "completed_at": "2024-08-04T03:35:20.085960Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.086332Z", "completed_at": "2024-08-04T03:35:20.086338Z"}], "thread_id": "Thread-1", "execution_time": 0.006051540374755859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.not_null_linkedin_ads__campaign_report_date_day.8d320b88b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__campaign_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.088251Z", "completed_at": "2024-08-04T03:35:20.092394Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.092786Z", "completed_at": "2024-08-04T03:35:20.092792Z"}], "thread_id": "Thread-1", "execution_time": 0.005491733551025391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__creative_report_source_relation__date_day__creative_id__campaign_id__campaign_group_id__account_id.f9e5f8f610", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, creative_id, campaign_id, campaign_group_id, account_id\n    from TEST.PUBLIC_linkedin_ads.linkedin_ads__creative_report\n    group by source_relation, date_day, creative_id, campaign_id, campaign_group_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.094654Z", "completed_at": "2024-08-04T03:35:20.098440Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.098825Z", "completed_at": "2024-08-04T03:35:20.098831Z"}], "thread_id": "Thread-1", "execution_time": 0.005011558532714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.not_null_linkedin_ads__creative_report_creative_id.096d93f889", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__creative_report\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.100707Z", "completed_at": "2024-08-04T03:35:20.104568Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.104949Z", "completed_at": "2024-08-04T03:35:20.104955Z"}], "thread_id": "Thread-1", "execution_time": 0.005147695541381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.not_null_linkedin_ads__creative_report_date_day.0c6338b020", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__creative_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.106814Z", "completed_at": "2024-08-04T03:35:20.111983Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.112373Z", "completed_at": "2024-08-04T03:35:20.112379Z"}], "thread_id": "Thread-1", "execution_time": 0.006410360336303711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__url_report_source_relation__date_day__creative_id__campaign_id__campaign_group_id__account_id.0ff865de89", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, creative_id, campaign_id, campaign_group_id, account_id\n    from TEST.PUBLIC_linkedin_ads.linkedin_ads__url_report\n    group by source_relation, date_day, creative_id, campaign_id, campaign_group_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.114282Z", "completed_at": "2024-08-04T03:35:20.118282Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.118663Z", "completed_at": "2024-08-04T03:35:20.118669Z"}], "thread_id": "Thread-1", "execution_time": 0.005316257476806641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.not_null_linkedin_ads__url_report_click_uri.81534087cb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect click_uri\nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__url_report\nwhere click_uri is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.120522Z", "completed_at": "2024-08-04T03:35:20.124433Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.124817Z", "completed_at": "2024-08-04T03:35:20.124823Z"}], "thread_id": "Thread-1", "execution_time": 0.00512385368347168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.not_null_linkedin_ads__url_report_creative_id.83967fe9d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__url_report\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.126641Z", "completed_at": "2024-08-04T03:35:20.130499Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.130883Z", "completed_at": "2024-08-04T03:35:20.130889Z"}], "thread_id": "Thread-1", "execution_time": 0.0050733089447021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin.not_null_linkedin_ads__url_report_date_day.48b540f315", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__url_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.132812Z", "completed_at": "2024-08-04T03:35:20.137915Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.138315Z", "completed_at": "2024-08-04T03:35:20.138321Z"}], "thread_id": "Thread-1", "execution_time": 0.006424427032470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__account_report_source_relation__date_day__account_id__device_os__device_type__network__currency_code.42178a7c9b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, device_os, device_type, network, currency_code\n    from TEST.PUBLIC_microsoft_ads.microsoft_ads__account_report\n    group by source_relation, date_day, account_id, device_os, device_type, network, currency_code\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.140214Z", "completed_at": "2024-08-04T03:35:20.144083Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.144455Z", "completed_at": "2024-08-04T03:35:20.144461Z"}], "thread_id": "Thread-1", "execution_time": 0.005152702331542969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.not_null_microsoft_ads__account_report_account_id.f88e46157e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__account_report\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.146409Z", "completed_at": "2024-08-04T03:35:20.150449Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.150843Z", "completed_at": "2024-08-04T03:35:20.150849Z"}], "thread_id": "Thread-1", "execution_time": 0.005396604537963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_group_report_source_relation__date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__currency_code.da08ee00a5", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_group_id, device_os, device_type, network, currency_code\n    from TEST.PUBLIC_microsoft_ads.microsoft_ads__ad_group_report\n    group by source_relation, date_day, account_id, campaign_id, ad_group_id, device_os, device_type, network, currency_code\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.152858Z", "completed_at": "2024-08-04T03:35:20.157453Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.157839Z", "completed_at": "2024-08-04T03:35:20.157845Z"}], "thread_id": "Thread-1", "execution_time": 0.005912065505981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.not_null_microsoft_ads__ad_group_report_ad_group_id.1974ec5ab9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__ad_group_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.159790Z", "completed_at": "2024-08-04T03:35:20.163856Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.164249Z", "completed_at": "2024-08-04T03:35:20.164255Z"}], "thread_id": "Thread-1", "execution_time": 0.005433797836303711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_report_source_relation__date_day__account_id__campaign_id__ad_group_id__ad_id__ad_type__device_os__device_type__network__currency_code.e13fd60438", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, ad_type, device_os, device_type, network, currency_code\n    from TEST.PUBLIC_microsoft_ads.microsoft_ads__ad_report\n    group by source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, ad_type, device_os, device_type, network, currency_code\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.166136Z", "completed_at": "2024-08-04T03:35:20.169946Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.170318Z", "completed_at": "2024-08-04T03:35:20.170325Z"}], "thread_id": "Thread-1", "execution_time": 0.005040884017944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.not_null_microsoft_ads__ad_report_ad_id.b089709125", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.172234Z", "completed_at": "2024-08-04T03:35:20.176353Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.176748Z", "completed_at": "2024-08-04T03:35:20.176754Z"}], "thread_id": "Thread-1", "execution_time": 0.00545501708984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__campaign_report_source_relation__date_day__account_id__campaign_id__device_os__device_type__network__currency_code.00fc594532", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, device_os, device_type, network, currency_code\n    from TEST.PUBLIC_microsoft_ads.microsoft_ads__campaign_report\n    group by source_relation, date_day, account_id, campaign_id, device_os, device_type, network, currency_code\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.178612Z", "completed_at": "2024-08-04T03:35:20.183316Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.183742Z", "completed_at": "2024-08-04T03:35:20.183748Z"}], "thread_id": "Thread-1", "execution_time": 0.005976200103759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.not_null_microsoft_ads__campaign_report_campaign_id.67aa50e1f8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.185674Z", "completed_at": "2024-08-04T03:35:20.189859Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.190254Z", "completed_at": "2024-08-04T03:35:20.190260Z"}], "thread_id": "Thread-1", "execution_time": 0.005526065826416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__url_report_source_relation__date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__currency_code.0ea4732dff", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, device_os, device_type, network, currency_code\n    from TEST.PUBLIC_microsoft_ads.microsoft_ads__url_report\n    group by source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, device_os, device_type, network, currency_code\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.192136Z", "completed_at": "2024-08-04T03:35:20.196121Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.196491Z", "completed_at": "2024-08-04T03:35:20.196497Z"}], "thread_id": "Thread-1", "execution_time": 0.0052127838134765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.not_null_microsoft_ads__url_report_base_url.c1af50307a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__url_report\nwhere base_url is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.198425Z", "completed_at": "2024-08-04T03:35:20.202487Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.202892Z", "completed_at": "2024-08-04T03:35:20.202899Z"}], "thread_id": "Thread-1", "execution_time": 0.005422115325927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__keyword_report_source_relation__date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__currency_code.e4af52a80b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, keyword_id, device_os, device_type, network, currency_code\n    from TEST.PUBLIC_microsoft_ads.microsoft_ads__keyword_report\n    group by source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, keyword_id, device_os, device_type, network, currency_code\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.204834Z", "completed_at": "2024-08-04T03:35:20.209593Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.209970Z", "completed_at": "2024-08-04T03:35:20.209977Z"}], "thread_id": "Thread-1", "execution_time": 0.006060361862182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.not_null_microsoft_ads__keyword_report_keyword_id.da1d648d3b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__keyword_report\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.211913Z", "completed_at": "2024-08-04T03:35:20.215973Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.216363Z", "completed_at": "2024-08-04T03:35:20.216370Z"}], "thread_id": "Thread-1", "execution_time": 0.0054132938385009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__search_report_source_relation__date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__match_type.6753357660", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, keyword_id, search_query, device_os, device_type, network, match_type\n    from TEST.PUBLIC_microsoft_ads.microsoft_ads__search_report\n    group by source_relation, date_day, account_id, campaign_id, ad_group_id, ad_id, keyword_id, search_query, device_os, device_type, network, match_type\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.218391Z", "completed_at": "2024-08-04T03:35:20.222186Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.222566Z", "completed_at": "2024-08-04T03:35:20.222573Z"}], "thread_id": "Thread-1", "execution_time": 0.005217313766479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.microsoft_ads.not_null_microsoft_ads__search_report_search_query.fa3625d66d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect search_query\nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__search_report\nwhere search_query is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.224474Z", "completed_at": "2024-08-04T03:35:20.228590Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.228983Z", "completed_at": "2024-08-04T03:35:20.228989Z"}], "thread_id": "Thread-1", "execution_time": 0.005359649658203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__advertiser_report_source_relation__advertiser_id__date_day.f9cd6d6ce2", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, advertiser_id, date_day\n    from TEST.PUBLIC_pinterest.pinterest_ads__advertiser_report\n    group by source_relation, advertiser_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.230885Z", "completed_at": "2024-08-04T03:35:20.235628Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.236011Z", "completed_at": "2024-08-04T03:35:20.236018Z"}], "thread_id": "Thread-1", "execution_time": 0.006047964096069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__advertiser_report_advertiser_id.13380f0672", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect advertiser_id\nfrom TEST.PUBLIC_pinterest.pinterest_ads__advertiser_report\nwhere advertiser_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.237899Z", "completed_at": "2024-08-04T03:35:20.241761Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.242149Z", "completed_at": "2024-08-04T03:35:20.242155Z"}], "thread_id": "Thread-1", "execution_time": 0.005161285400390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__advertiser_report_date_day.aedeceeeca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_pinterest.pinterest_ads__advertiser_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.244071Z", "completed_at": "2024-08-04T03:35:20.248185Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.248577Z", "completed_at": "2024-08-04T03:35:20.248583Z"}], "thread_id": "Thread-1", "execution_time": 0.0054187774658203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__ad_group_report_source_relation__ad_group_id__advertiser_id__campaign_id__date_day.1fb5fb3f2f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, advertiser_id, campaign_id, date_day\n    from TEST.PUBLIC_pinterest.pinterest_ads__ad_group_report\n    group by source_relation, ad_group_id, advertiser_id, campaign_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.250471Z", "completed_at": "2024-08-04T03:35:20.255016Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.255413Z", "completed_at": "2024-08-04T03:35:20.255420Z"}], "thread_id": "Thread-1", "execution_time": 0.005864143371582031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__ad_group_report_ad_group_id.134f9ac6c2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_pinterest.pinterest_ads__ad_group_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.257246Z", "completed_at": "2024-08-04T03:35:20.383200Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.383655Z", "completed_at": "2024-08-04T03:35:20.383666Z"}], "thread_id": "Thread-1", "execution_time": 0.1272754669189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__ad_group_report_date_day.ed7c27b8a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_pinterest.pinterest_ads__ad_group_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.385649Z", "completed_at": "2024-08-04T03:35:20.389929Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.390315Z", "completed_at": "2024-08-04T03:35:20.390321Z"}], "thread_id": "Thread-1", "execution_time": 0.005556344985961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__campaign_report_source_relation__campaign_id__advertiser_id__date_day.4da70e098b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, advertiser_id, date_day\n    from TEST.PUBLIC_pinterest.pinterest_ads__campaign_report\n    group by source_relation, campaign_id, advertiser_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.392224Z", "completed_at": "2024-08-04T03:35:20.396170Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.396563Z", "completed_at": "2024-08-04T03:35:20.396569Z"}], "thread_id": "Thread-1", "execution_time": 0.0052547454833984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__campaign_report_campaign_id.8001ea60f2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_pinterest.pinterest_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.398480Z", "completed_at": "2024-08-04T03:35:20.402968Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.403346Z", "completed_at": "2024-08-04T03:35:20.403353Z"}], "thread_id": "Thread-1", "execution_time": 0.0058286190032958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__campaign_report_date_day.10ac8272bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_pinterest.pinterest_ads__campaign_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.405279Z", "completed_at": "2024-08-04T03:35:20.409333Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.409723Z", "completed_at": "2024-08-04T03:35:20.409729Z"}], "thread_id": "Thread-1", "execution_time": 0.005306720733642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__keyword_report_source_relation__keyword_id__ad_group_id__campaign_id__advertiser_id__date_day.a9ce89d1db", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, keyword_id, ad_group_id, campaign_id, advertiser_id, date_day\n    from TEST.PUBLIC_pinterest.pinterest_ads__keyword_report\n    group by source_relation, keyword_id, ad_group_id, campaign_id, advertiser_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.411624Z", "completed_at": "2024-08-04T03:35:20.415545Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.415936Z", "completed_at": "2024-08-04T03:35:20.415943Z"}], "thread_id": "Thread-1", "execution_time": 0.005181550979614258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__keyword_report_date_day.23130e9fba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_pinterest.pinterest_ads__keyword_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.417811Z", "completed_at": "2024-08-04T03:35:20.421774Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.422165Z", "completed_at": "2024-08-04T03:35:20.422170Z"}], "thread_id": "Thread-1", "execution_time": 0.005255937576293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__keyword_report_keyword_id.0d73460198", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_pinterest.pinterest_ads__keyword_report\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.424089Z", "completed_at": "2024-08-04T03:35:20.429099Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.429484Z", "completed_at": "2024-08-04T03:35:20.429490Z"}], "thread_id": "Thread-1", "execution_time": 0.0063130855560302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__pin_promotion_report_source_relation__pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.9d2f1ea810", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, pin_promotion_id, ad_group_id, campaign_id, advertiser_id, date_day\n    from TEST.PUBLIC_pinterest.pinterest_ads__pin_promotion_report\n    group by source_relation, pin_promotion_id, ad_group_id, campaign_id, advertiser_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.431380Z", "completed_at": "2024-08-04T03:35:20.435149Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.435553Z", "completed_at": "2024-08-04T03:35:20.435560Z"}], "thread_id": "Thread-1", "execution_time": 0.005048274993896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__pin_promotion_report_date_day.3128d28cfd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_pinterest.pinterest_ads__pin_promotion_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.437422Z", "completed_at": "2024-08-04T03:35:20.441245Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.441634Z", "completed_at": "2024-08-04T03:35:20.441640Z"}], "thread_id": "Thread-1", "execution_time": 0.005059719085693359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__pin_promotion_report_pin_promotion_id.2540e0a561", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pin_promotion_id\nfrom TEST.PUBLIC_pinterest.pinterest_ads__pin_promotion_report\nwhere pin_promotion_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.443569Z", "completed_at": "2024-08-04T03:35:20.447843Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.448232Z", "completed_at": "2024-08-04T03:35:20.448239Z"}], "thread_id": "Thread-1", "execution_time": 0.005571126937866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__url_report_source_relation__pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.688d8bd291", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, pin_promotion_id, ad_group_id, campaign_id, advertiser_id, date_day\n    from TEST.PUBLIC_pinterest.pinterest_ads__url_report\n    group by source_relation, pin_promotion_id, ad_group_id, campaign_id, advertiser_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.450123Z", "completed_at": "2024-08-04T03:35:20.454940Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.455320Z", "completed_at": "2024-08-04T03:35:20.455327Z"}], "thread_id": "Thread-1", "execution_time": 0.0060882568359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__url_report_date_day.b09048037e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_pinterest.pinterest_ads__url_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.457201Z", "completed_at": "2024-08-04T03:35:20.461205Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.461587Z", "completed_at": "2024-08-04T03:35:20.461594Z"}], "thread_id": "Thread-1", "execution_time": 0.005230426788330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__url_report_destination_url.0bb7f30502", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect destination_url\nfrom TEST.PUBLIC_pinterest.pinterest_ads__url_report\nwhere destination_url is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.463550Z", "completed_at": "2024-08-04T03:35:20.467343Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.467762Z", "completed_at": "2024-08-04T03:35:20.467768Z"}], "thread_id": "Thread-1", "execution_time": 0.00519561767578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pinterest.not_null_pinterest_ads__url_report_pin_promotion_id.0da711ad6a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pin_promotion_id\nfrom TEST.PUBLIC_pinterest.pinterest_ads__url_report\nwhere pin_promotion_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.469626Z", "completed_at": "2024-08-04T03:35:20.473831Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.474230Z", "completed_at": "2024-08-04T03:35:20.474236Z"}], "thread_id": "Thread-1", "execution_time": 0.005456209182739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__account_report_source_relation__date_day__account_id__attribution_type__currency__status__time_zone_id.7260e1923b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, attribution_type, currency, status, time_zone_id\n    from TEST.PUBLIC_reddit_ads.reddit_ads__account_report\n    group by source_relation, date_day, account_id, attribution_type, currency, status, time_zone_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.476169Z", "completed_at": "2024-08-04T03:35:20.481104Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.481484Z", "completed_at": "2024-08-04T03:35:20.481490Z"}], "thread_id": "Thread-1", "execution_time": 0.00627446174621582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.not_null_reddit_ads__account_report_account_id.16f11188c5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_reddit_ads.reddit_ads__account_report\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.484121Z", "completed_at": "2024-08-04T03:35:20.488113Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.488528Z", "completed_at": "2024-08-04T03:35:20.488535Z"}], "thread_id": "Thread-1", "execution_time": 0.006064176559448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.not_null_reddit_ads__account_report_date_day.7b43e6cb90", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_reddit_ads.reddit_ads__account_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.490426Z", "completed_at": "2024-08-04T03:35:20.494701Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.495104Z", "completed_at": "2024-08-04T03:35:20.495111Z"}], "thread_id": "Thread-1", "execution_time": 0.005604982376098633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_group_report_source_relation__date_day__account_id__ad_group_id__campaign_id__currency.bd33f1f46d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, ad_group_id, campaign_id, currency\n    from TEST.PUBLIC_reddit_ads.reddit_ads__ad_group_report\n    group by source_relation, date_day, account_id, ad_group_id, campaign_id, currency\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.497094Z", "completed_at": "2024-08-04T03:35:20.501860Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.502284Z", "completed_at": "2024-08-04T03:35:20.502291Z"}], "thread_id": "Thread-1", "execution_time": 0.006140232086181641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.not_null_reddit_ads__ad_group_report_ad_group_id.057bd60604", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_reddit_ads.reddit_ads__ad_group_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.504214Z", "completed_at": "2024-08-04T03:35:20.508178Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.508591Z", "completed_at": "2024-08-04T03:35:20.508597Z"}], "thread_id": "Thread-1", "execution_time": 0.0052814483642578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.not_null_reddit_ads__ad_group_report_date_day.6463e6f6f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_reddit_ads.reddit_ads__ad_group_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.510544Z", "completed_at": "2024-08-04T03:35:20.514847Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.515245Z", "completed_at": "2024-08-04T03:35:20.515252Z"}], "thread_id": "Thread-1", "execution_time": 0.005641460418701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_report_source_relation__date_day__ad_id__post_id__account_id__ad_group_id__campaign_id__currency.8735416c38", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, ad_id, post_id, account_id, ad_group_id, campaign_id, currency\n    from TEST.PUBLIC_reddit_ads.reddit_ads__ad_report\n    group by source_relation, date_day, ad_id, post_id, account_id, ad_group_id, campaign_id, currency\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.517163Z", "completed_at": "2024-08-04T03:35:20.521229Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.521621Z", "completed_at": "2024-08-04T03:35:20.521628Z"}], "thread_id": "Thread-1", "execution_time": 0.005345582962036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.not_null_reddit_ads__ad_report_ad_id.1da054a14e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_reddit_ads.reddit_ads__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.523532Z", "completed_at": "2024-08-04T03:35:20.528501Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.528894Z", "completed_at": "2024-08-04T03:35:20.528900Z"}], "thread_id": "Thread-1", "execution_time": 0.006305694580078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.not_null_reddit_ads__ad_report_date_day.608b21c69a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_reddit_ads.reddit_ads__ad_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.530748Z", "completed_at": "2024-08-04T03:35:20.534958Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.535384Z", "completed_at": "2024-08-04T03:35:20.535393Z"}], "thread_id": "Thread-1", "execution_time": 0.005532741546630859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__campaign_report_source_relation__date_day__account_id__campaign_id__currency.6e74c22669", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, currency\n    from TEST.PUBLIC_reddit_ads.reddit_ads__campaign_report\n    group by source_relation, date_day, account_id, campaign_id, currency\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.537241Z", "completed_at": "2024-08-04T03:35:20.541274Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.541665Z", "completed_at": "2024-08-04T03:35:20.541672Z"}], "thread_id": "Thread-1", "execution_time": 0.005307912826538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.not_null_reddit_ads__campaign_report_campaign_id.f5491a0b49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_reddit_ads.reddit_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.543632Z", "completed_at": "2024-08-04T03:35:20.547603Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.547997Z", "completed_at": "2024-08-04T03:35:20.548003Z"}], "thread_id": "Thread-1", "execution_time": 0.005357027053833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.not_null_reddit_ads__campaign_report_date_day.f79cca4131", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_reddit_ads.reddit_ads__campaign_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.550490Z", "completed_at": "2024-08-04T03:35:20.557646Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.558048Z", "completed_at": "2024-08-04T03:35:20.558058Z"}], "thread_id": "Thread-1", "execution_time": 0.008601188659667969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__url_report_source_relation__date_day__click_url__ad_id__account_id__ad_group_id__campaign_id__post_id__currency.a85ab9beee", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, click_url, ad_id, account_id, ad_group_id, campaign_id, post_id, currency\n    from TEST.PUBLIC_reddit_ads.reddit_ads__url_report\n    group by source_relation, date_day, click_url, ad_id, account_id, ad_group_id, campaign_id, post_id, currency\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.559984Z", "completed_at": "2024-08-04T03:35:20.564177Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.564557Z", "completed_at": "2024-08-04T03:35:20.564565Z"}], "thread_id": "Thread-1", "execution_time": 0.005469083786010742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.not_null_reddit_ads__url_report_ad_id.8ff83da2b0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_reddit_ads.reddit_ads__url_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.566376Z", "completed_at": "2024-08-04T03:35:20.570423Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.570806Z", "completed_at": "2024-08-04T03:35:20.570813Z"}], "thread_id": "Thread-1", "execution_time": 0.005252838134765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.not_null_reddit_ads__url_report_base_url.2f585bebcb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom TEST.PUBLIC_reddit_ads.reddit_ads__url_report\nwhere base_url is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.572646Z", "completed_at": "2024-08-04T03:35:20.577396Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.577787Z", "completed_at": "2024-08-04T03:35:20.577795Z"}], "thread_id": "Thread-1", "execution_time": 0.005970478057861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.reddit_ads.not_null_reddit_ads__url_report_date_day.4b0f6363da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_reddit_ads.reddit_ads__url_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.579651Z", "completed_at": "2024-08-04T03:35:20.583776Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.584171Z", "completed_at": "2024-08-04T03:35:20.584177Z"}], "thread_id": "Thread-1", "execution_time": 0.005400896072387695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__account_report_source_relation__ad_account_id__date_day.654a687cf1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_account_id, date_day\n    from TEST.PUBLIC_snapchat_ads.snapchat_ads__account_report\n    group by source_relation, ad_account_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.586016Z", "completed_at": "2024-08-04T03:35:20.590019Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.590395Z", "completed_at": "2024-08-04T03:35:20.590401Z"}], "thread_id": "Thread-1", "execution_time": 0.0052263736724853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.not_null_snapchat_ads__account_report_ad_account_id.589c81966b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_account_id\nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__account_report\nwhere ad_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.592255Z", "completed_at": "2024-08-04T03:35:20.596224Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.596610Z", "completed_at": "2024-08-04T03:35:20.596617Z"}], "thread_id": "Thread-1", "execution_time": 0.005196571350097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.not_null_snapchat_ads__account_report_date_day.688d7ed260", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__account_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.598439Z", "completed_at": "2024-08-04T03:35:20.603569Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.603965Z", "completed_at": "2024-08-04T03:35:20.603971Z"}], "thread_id": "Thread-1", "execution_time": 0.006373882293701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__ad_squad_report_source_relation__ad_squad_id__date_day.b1a26a5bb4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_squad_id, date_day\n    from TEST.PUBLIC_snapchat_ads.snapchat_ads__ad_squad_report\n    group by source_relation, ad_squad_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.605775Z", "completed_at": "2024-08-04T03:35:20.609692Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.610075Z", "completed_at": "2024-08-04T03:35:20.610082Z"}], "thread_id": "Thread-1", "execution_time": 0.005128622055053711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.not_null_snapchat_ads__ad_squad_report_ad_squad_id.424c0bbffe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_squad_id\nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__ad_squad_report\nwhere ad_squad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.611941Z", "completed_at": "2024-08-04T03:35:20.615759Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.616137Z", "completed_at": "2024-08-04T03:35:20.616144Z"}], "thread_id": "Thread-1", "execution_time": 0.005081653594970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.not_null_snapchat_ads__ad_squad_report_date_day.39118ca639", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__ad_squad_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.617986Z", "completed_at": "2024-08-04T03:35:20.622061Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.622439Z", "completed_at": "2024-08-04T03:35:20.622445Z"}], "thread_id": "Thread-1", "execution_time": 0.0052967071533203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__campaign_report_source_relation__campaign_id__date_day.557487ad6a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, date_day\n    from TEST.PUBLIC_snapchat_ads.snapchat_ads__campaign_report\n    group by source_relation, campaign_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.624337Z", "completed_at": "2024-08-04T03:35:20.629199Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.629579Z", "completed_at": "2024-08-04T03:35:20.629586Z"}], "thread_id": "Thread-1", "execution_time": 0.006093025207519531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.not_null_snapchat_ads__campaign_report_campaign_id.19fd7135ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.631439Z", "completed_at": "2024-08-04T03:35:20.635240Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.635658Z", "completed_at": "2024-08-04T03:35:20.635665Z"}], "thread_id": "Thread-1", "execution_time": 0.0050923824310302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.not_null_snapchat_ads__campaign_report_date_day.4e4e31223b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__campaign_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.637575Z", "completed_at": "2024-08-04T03:35:20.652879Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.653253Z", "completed_at": "2024-08-04T03:35:20.653259Z"}], "thread_id": "Thread-1", "execution_time": 0.016611814498901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads.snapchat_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__snapchat_ads__creative_history_prep as (\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_history\n    where is_most_recent_record = true\n\n), url_tags as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history\n    where is_most_recent_record = true\n\n), url_tags_pivoted as (\n\n    select \n        source_relation,\n        creative_id,\n        min(case when param_key = 'utm_source' then param_value end) as utm_source,\n        min(case when param_key = 'utm_medium' then param_value end) as utm_medium,\n        min(case when param_key = 'utm_campaign' then param_value end) as utm_campaign,\n        min(case when param_key = 'utm_content' then param_value end) as utm_content,\n        min(case when param_key = 'utm_term' then param_value end) as utm_term\n    from url_tags\n    group by 1,2\n\n), fields as (\n\n    select\n        base.source_relation,\n        base.creative_id,\n        base.ad_account_id,\n        base.creative_name,\n        base.url,\n        \n\n    split_part(\n        base.url,\n        '?',\n        1\n        )\n\n as base_url,\n        \n    \n        try_cast(\n\n    split_part(\n        \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_host,\n        '/' || \n    \n        try_cast(\n\n    split_part(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        right(\n            \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n        )\n    end,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_path,\n        coalesce(url_tags_pivoted.utm_source, nullif(\n\n    split_part(\n        \n\n    split_part(\n        base.url,\n        'utm_source=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_source,\n        coalesce(url_tags_pivoted.utm_medium, nullif(\n\n    split_part(\n        \n\n    split_part(\n        base.url,\n        'utm_medium=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_medium,\n        coalesce(url_tags_pivoted.utm_campaign, nullif(\n\n    split_part(\n        \n\n    split_part(\n        base.url,\n        'utm_campaign=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_campaign,\n        coalesce(url_tags_pivoted.utm_content, nullif(\n\n    split_part(\n        \n\n    split_part(\n        base.url,\n        'utm_content=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_content,\n        coalesce(url_tags_pivoted.utm_term, nullif(\n\n    split_part(\n        \n\n    split_part(\n        base.url,\n        'utm_term=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_term\n    from base\n    left join url_tags_pivoted\n        on base.creative_id = url_tags_pivoted.creative_id\n        and base.source_relation = url_tags_pivoted.source_relation\n\n)\n\nselect *\nfrom fields\n), ad_hourly as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report\n\n), creatives as (\n\n    select *\n    from __dbt__cte__snapchat_ads__creative_history_prep\n\n), account as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_account_history\n    where is_most_recent_record = true\n\n), ads as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_history\n    where is_most_recent_record = true\n\n), aggregated as (\n\n    select\n        ad_hourly.source_relation,\n        cast(ad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        ad_hourly.ad_id,\n        ads.ad_name,\n        account.currency,\n        sum(ad_hourly.swipes) as swipes,\n        sum(ad_hourly.impressions) as impressions,\n        round(sum(ad_hourly.spend),2) as spend\n        \n        \n\n\n\n\n    \n    from ad_hourly\n    left join ads \n        on ad_hourly.ad_id = ads.ad_id\n        and ad_hourly.source_relation = ads.source_relation\n    left join creatives\n        on ads.creative_id = creatives.creative_id\n        and ads.source_relation = creatives.source_relation\n    left join account\n        on creatives.ad_account_id = account.ad_account_id\n        and creatives.source_relation = account.source_relation\n    \n    group by 1,2,3,4,5,6,7\n\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_snapchat_ads.snapchat_ads__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.655327Z", "completed_at": "2024-08-04T03:35:20.679421Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.679817Z", "completed_at": "2024-08-04T03:35:20.679824Z"}], "thread_id": "Thread-1", "execution_time": 0.025513410568237305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snapchat_ads.snapchat_ads__url_report", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__snapchat_ads__creative_history_prep as (\n\nwith base as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_history\n    where is_most_recent_record = true\n\n), url_tags as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history\n    where is_most_recent_record = true\n\n), url_tags_pivoted as (\n\n    select \n        source_relation,\n        creative_id,\n        min(case when param_key = 'utm_source' then param_value end) as utm_source,\n        min(case when param_key = 'utm_medium' then param_value end) as utm_medium,\n        min(case when param_key = 'utm_campaign' then param_value end) as utm_campaign,\n        min(case when param_key = 'utm_content' then param_value end) as utm_content,\n        min(case when param_key = 'utm_term' then param_value end) as utm_term\n    from url_tags\n    group by 1,2\n\n), fields as (\n\n    select\n        base.source_relation,\n        base.creative_id,\n        base.ad_account_id,\n        base.creative_name,\n        base.url,\n        \n\n    split_part(\n        base.url,\n        '?',\n        1\n        )\n\n as base_url,\n        \n    \n        try_cast(\n\n    split_part(\n        \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_host,\n        '/' || \n    \n        try_cast(\n\n    split_part(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        right(\n            \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        base.url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n        )\n    end,\n        '?',\n        1\n        )\n\n as TEXT)\n     as url_path,\n        coalesce(url_tags_pivoted.utm_source, nullif(\n\n    split_part(\n        \n\n    split_part(\n        base.url,\n        'utm_source=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_source,\n        coalesce(url_tags_pivoted.utm_medium, nullif(\n\n    split_part(\n        \n\n    split_part(\n        base.url,\n        'utm_medium=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_medium,\n        coalesce(url_tags_pivoted.utm_campaign, nullif(\n\n    split_part(\n        \n\n    split_part(\n        base.url,\n        'utm_campaign=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_campaign,\n        coalesce(url_tags_pivoted.utm_content, nullif(\n\n    split_part(\n        \n\n    split_part(\n        base.url,\n        'utm_content=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_content,\n        coalesce(url_tags_pivoted.utm_term, nullif(\n\n    split_part(\n        \n\n    split_part(\n        base.url,\n        'utm_term=',\n        2\n        )\n\n,\n        '&',\n        1\n        )\n\n,'')) as utm_term\n    from base\n    left join url_tags_pivoted\n        on base.creative_id = url_tags_pivoted.creative_id\n        and base.source_relation = url_tags_pivoted.source_relation\n\n)\n\nselect *\nfrom fields\n), ad_hourly as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report\n\n), creatives as (\n\n    select *\n    from __dbt__cte__snapchat_ads__creative_history_prep\n\n), account as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_account_history\n    where is_most_recent_record = true\n\n), ads as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_history\n    where is_most_recent_record = true\n\n), ad_squads as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__ad_squad_history\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from TEST.PUBLIC_snapchat_ads_source.stg_snapchat_ads__campaign_history\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        ad_hourly.source_relation,\n        cast(ad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        ad_hourly.ad_id,\n        ads.ad_name,\n        ad_squads.ad_squad_id,\n        ad_squads.ad_squad_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        account.currency,\n        creatives.base_url,\n        creatives.url_host,\n        creatives.url_path,\n        creatives.utm_source,\n        creatives.utm_medium,\n        creatives.utm_campaign,\n        creatives.utm_content,\n        creatives.utm_term,\n        sum(ad_hourly.swipes) as swipes,\n        sum(ad_hourly.impressions) as impressions,\n        round(sum(ad_hourly.spend),2) as spend\n        \n        \n\n\n\n\n    \n    from ad_hourly\n    left join ads \n        on ad_hourly.ad_id = ads.ad_id\n        and ad_hourly.source_relation = ads.source_relation\n    left join creatives\n        on ads.creative_id = creatives.creative_id\n        and ads.source_relation = creatives.source_relation\n    left join ad_squads\n        on ads.ad_squad_id = ad_squads.ad_squad_id\n        and ads.source_relation = ad_squads.source_relation\n    left join campaigns\n        on ad_squads.campaign_id = campaigns.campaign_id\n        and ad_squads.source_relation = campaigns.source_relation\n    left join account\n        on creatives.ad_account_id = account.ad_account_id\n        and creatives.source_relation = account.source_relation\n\n    \n        -- We only want utm ads to populate this report. Therefore, we filter where url ads are populated.\n        where creatives.url is not null\n    \n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19\n\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_snapchat_ads.snapchat_ads__url_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.681868Z", "completed_at": "2024-08-04T03:35:20.686045Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.686434Z", "completed_at": "2024-08-04T03:35:20.686440Z"}], "thread_id": "Thread-1", "execution_time": 0.005572080612182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__advertiser_report_source_relation__advertiser_id__date_day.1797053b3d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, advertiser_id, date_day\n    from TEST.PUBLIC_tiktok_ads.tiktok_ads__advertiser_report\n    group by source_relation, advertiser_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.688295Z", "completed_at": "2024-08-04T03:35:20.692157Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.692531Z", "completed_at": "2024-08-04T03:35:20.692537Z"}], "thread_id": "Thread-1", "execution_time": 0.005084514617919922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.not_null_tiktok_ads__advertiser_report_advertiser_id.f956c568ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect advertiser_id\nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__advertiser_report\nwhere advertiser_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.694353Z", "completed_at": "2024-08-04T03:35:20.699251Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.699653Z", "completed_at": "2024-08-04T03:35:20.699659Z"}], "thread_id": "Thread-1", "execution_time": 0.0061337947845458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.not_null_tiktok_ads__advertiser_report_date_day.1276998c99", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__advertiser_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.701462Z", "completed_at": "2024-08-04T03:35:20.705461Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.705855Z", "completed_at": "2024-08-04T03:35:20.705861Z"}], "thread_id": "Thread-1", "execution_time": 0.0052258968353271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__ad_group_report_source_relation__ad_group_id__campaign_id__advertiser_id__date_day.e3850c1634", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, campaign_id, advertiser_id, date_day\n    from TEST.PUBLIC_tiktok_ads.tiktok_ads__ad_group_report\n    group by source_relation, ad_group_id, campaign_id, advertiser_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.707726Z", "completed_at": "2024-08-04T03:35:20.711521Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.711902Z", "completed_at": "2024-08-04T03:35:20.711908Z"}], "thread_id": "Thread-1", "execution_time": 0.005044698715209961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.not_null_tiktok_ads__ad_group_report_ad_group_id.17fb8710f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__ad_group_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.713702Z", "completed_at": "2024-08-04T03:35:20.717686Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.718062Z", "completed_at": "2024-08-04T03:35:20.718068Z"}], "thread_id": "Thread-1", "execution_time": 0.005182981491088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.not_null_tiktok_ads__ad_group_report_date_day.e39164964e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__ad_group_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.719920Z", "completed_at": "2024-08-04T03:35:20.725052Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.725432Z", "completed_at": "2024-08-04T03:35:20.725438Z"}], "thread_id": "Thread-1", "execution_time": 0.006386518478393555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__ad_report_source_relation__ad_id__ad_group_id__campaign_id__advertiser_id__date_day.c260f4392a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, ad_group_id, campaign_id, advertiser_id, date_day\n    from TEST.PUBLIC_tiktok_ads.tiktok_ads__ad_report\n    group by source_relation, ad_id, ad_group_id, campaign_id, advertiser_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.727240Z", "completed_at": "2024-08-04T03:35:20.731016Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.731418Z", "completed_at": "2024-08-04T03:35:20.731425Z"}], "thread_id": "Thread-1", "execution_time": 0.005017995834350586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.not_null_tiktok_ads__ad_report_ad_id.2d8166e707", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.733216Z", "completed_at": "2024-08-04T03:35:20.736994Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.737362Z", "completed_at": "2024-08-04T03:35:20.737368Z"}], "thread_id": "Thread-1", "execution_time": 0.004972696304321289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.not_null_tiktok_ads__ad_report_date_day.d61ee4a5ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__ad_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.739189Z", "completed_at": "2024-08-04T03:35:20.743390Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.743805Z", "completed_at": "2024-08-04T03:35:20.743813Z"}], "thread_id": "Thread-1", "execution_time": 0.005472898483276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__url_report_source_relation__ad_id__ad_group_id__campaign_id__advertiser_id__date_day.98153764a3", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, ad_group_id, campaign_id, advertiser_id, date_day\n    from TEST.PUBLIC_tiktok_ads.tiktok_ads__url_report\n    group by source_relation, ad_id, ad_group_id, campaign_id, advertiser_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.745750Z", "completed_at": "2024-08-04T03:35:20.750749Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.751130Z", "completed_at": "2024-08-04T03:35:20.751137Z"}], "thread_id": "Thread-1", "execution_time": 0.006359577178955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.not_null_tiktok_ads__url_report_ad_id.6c41067bd0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__url_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.753052Z", "completed_at": "2024-08-04T03:35:20.757132Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.757505Z", "completed_at": "2024-08-04T03:35:20.757511Z"}], "thread_id": "Thread-1", "execution_time": 0.005390644073486328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.not_null_tiktok_ads__url_report_base_url.37afef2e1b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__url_report\nwhere base_url is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.759321Z", "completed_at": "2024-08-04T03:35:20.763215Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.763659Z", "completed_at": "2024-08-04T03:35:20.763666Z"}], "thread_id": "Thread-1", "execution_time": 0.005205631256103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.not_null_tiktok_ads__url_report_date_day.d593573eff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__url_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.765503Z", "completed_at": "2024-08-04T03:35:20.769719Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.770116Z", "completed_at": "2024-08-04T03:35:20.770123Z"}], "thread_id": "Thread-1", "execution_time": 0.0054929256439208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__campaign_report_source_relation__campaign_id__advertiser_id__date_day.98200e9b0f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, advertiser_id, date_day\n    from TEST.PUBLIC_tiktok_ads.tiktok_ads__campaign_report\n    group by source_relation, campaign_id, advertiser_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.772027Z", "completed_at": "2024-08-04T03:35:20.776926Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.777300Z", "completed_at": "2024-08-04T03:35:20.777306Z"}], "thread_id": "Thread-1", "execution_time": 0.006227254867553711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.not_null_tiktok_ads__campaign_report_campaign_id.8a2b0c8ef8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.779230Z", "completed_at": "2024-08-04T03:35:20.783010Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.783410Z", "completed_at": "2024-08-04T03:35:20.783417Z"}], "thread_id": "Thread-1", "execution_time": 0.00511479377746582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.tiktok_ads.not_null_tiktok_ads__campaign_report_date_day.3807b0e836", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__campaign_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.785270Z", "completed_at": "2024-08-04T03:35:20.789412Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.789817Z", "completed_at": "2024-08-04T03:35:20.789824Z"}], "thread_id": "Thread-1", "execution_time": 0.005432605743408203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__campaign_report_source_relation__date_day__campaign_id__placement__account_id.f449ef6d6e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, campaign_id, placement, account_id\n    from TEST.PUBLIC_twitter_ads.twitter_ads__campaign_report\n    group by source_relation, date_day, campaign_id, placement, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.791743Z", "completed_at": "2024-08-04T03:35:20.796435Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.796818Z", "completed_at": "2024-08-04T03:35:20.796825Z"}], "thread_id": "Thread-1", "execution_time": 0.00603032112121582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__campaign_report_campaign_id.03b1c451b8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.798760Z", "completed_at": "2024-08-04T03:35:20.802586Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.802966Z", "completed_at": "2024-08-04T03:35:20.802972Z"}], "thread_id": "Thread-1", "execution_time": 0.005116462707519531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__campaign_report_date_day.2b30b279b0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__campaign_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.804832Z", "completed_at": "2024-08-04T03:35:20.808941Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.809326Z", "completed_at": "2024-08-04T03:35:20.809332Z"}], "thread_id": "Thread-1", "execution_time": 0.005362033843994141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__campaign_report_placement.c66d252e82", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect placement\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__campaign_report\nwhere placement is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.811190Z", "completed_at": "2024-08-04T03:35:20.815453Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.815857Z", "completed_at": "2024-08-04T03:35:20.815864Z"}], "thread_id": "Thread-1", "execution_time": 0.005562305450439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__keyword_report_source_relation__date_day__keyword_id__campaign_id.c51ddef475", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, keyword_id, campaign_id\n    from TEST.PUBLIC_twitter_ads.twitter_ads__keyword_report\n    group by source_relation, date_day, keyword_id, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.817671Z", "completed_at": "2024-08-04T03:35:20.822656Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.823047Z", "completed_at": "2024-08-04T03:35:20.823054Z"}], "thread_id": "Thread-1", "execution_time": 0.006246328353881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__keyword_report_date_day.e0ce90c1ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__keyword_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.824978Z", "completed_at": "2024-08-04T03:35:20.828787Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.829166Z", "completed_at": "2024-08-04T03:35:20.829172Z"}], "thread_id": "Thread-1", "execution_time": 0.00510406494140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__keyword_report_keyword_id.91efa0a538", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__keyword_report\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.831020Z", "completed_at": "2024-08-04T03:35:20.835143Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.835586Z", "completed_at": "2024-08-04T03:35:20.835593Z"}], "thread_id": "Thread-1", "execution_time": 0.0054624080657958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__line_item_report_source_relation__date_day__line_item_id__placement__campaign_id__account_id.f8d7069cba", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, line_item_id, placement, campaign_id, account_id\n    from TEST.PUBLIC_twitter_ads.twitter_ads__line_item_report\n    group by source_relation, date_day, line_item_id, placement, campaign_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.837416Z", "completed_at": "2024-08-04T03:35:20.841469Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.841869Z", "completed_at": "2024-08-04T03:35:20.841876Z"}], "thread_id": "Thread-1", "execution_time": 0.005324602127075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__line_item_report_date_day.86c934e8ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__line_item_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.843792Z", "completed_at": "2024-08-04T03:35:20.848709Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.849087Z", "completed_at": "2024-08-04T03:35:20.849093Z"}], "thread_id": "Thread-1", "execution_time": 0.006264925003051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__line_item_report_line_item_id.0462d58211", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect line_item_id\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__line_item_report\nwhere line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.850946Z", "completed_at": "2024-08-04T03:35:20.854749Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.855130Z", "completed_at": "2024-08-04T03:35:20.855137Z"}], "thread_id": "Thread-1", "execution_time": 0.0050165653228759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__line_item_report_placement.f103369312", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect placement\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__line_item_report\nwhere placement is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.877473Z", "completed_at": "2024-08-04T03:35:20.881496Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.881889Z", "completed_at": "2024-08-04T03:35:20.881895Z"}], "thread_id": "Thread-1", "execution_time": 0.005398988723754883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__account_report_source_relation__date_day__account_id__placement.e6a884489c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, placement\n    from TEST.PUBLIC_twitter_ads.twitter_ads__account_report\n    group by source_relation, date_day, account_id, placement\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.883749Z", "completed_at": "2024-08-04T03:35:20.887603Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.887984Z", "completed_at": "2024-08-04T03:35:20.887991Z"}], "thread_id": "Thread-1", "execution_time": 0.005112886428833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__account_report_account_id.90d5808908", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__account_report\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.889894Z", "completed_at": "2024-08-04T03:35:20.893776Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.894155Z", "completed_at": "2024-08-04T03:35:20.894161Z"}], "thread_id": "Thread-1", "execution_time": 0.0051996707916259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__account_report_date_day.84896c5846", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__account_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.895997Z", "completed_at": "2024-08-04T03:35:20.900822Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.901196Z", "completed_at": "2024-08-04T03:35:20.901202Z"}], "thread_id": "Thread-1", "execution_time": 0.006071805953979492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__account_report_placement.157dcb6194", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect placement\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__account_report\nwhere placement is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.903016Z", "completed_at": "2024-08-04T03:35:20.907087Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.907509Z", "completed_at": "2024-08-04T03:35:20.907516Z"}], "thread_id": "Thread-1", "execution_time": 0.005342721939086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__promoted_tweet_report_source_relation__date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id.f6814a1cc6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, promoted_tweet_id, placement, line_item_id, campaign_id, account_id\n    from TEST.PUBLIC_twitter_ads.twitter_ads__promoted_tweet_report\n    group by source_relation, date_day, promoted_tweet_id, placement, line_item_id, campaign_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.909382Z", "completed_at": "2024-08-04T03:35:20.913241Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.913620Z", "completed_at": "2024-08-04T03:35:20.913626Z"}], "thread_id": "Thread-1", "execution_time": 0.005089998245239258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__promoted_tweet_report_placement.d89c9b27e5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect placement\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__promoted_tweet_report\nwhere placement is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.915475Z", "completed_at": "2024-08-04T03:35:20.920272Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.920655Z", "completed_at": "2024-08-04T03:35:20.920662Z"}], "thread_id": "Thread-1", "execution_time": 0.006051778793334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id.5df08e154e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect promoted_tweet_id\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__promoted_tweet_report\nwhere promoted_tweet_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.922504Z", "completed_at": "2024-08-04T03:35:20.926652Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.927042Z", "completed_at": "2024-08-04T03:35:20.927048Z"}], "thread_id": "Thread-1", "execution_time": 0.005392551422119141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__url_report_source_relation__date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id.f44851c31f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, promoted_tweet_id, placement, line_item_id, campaign_id, account_id\n    from TEST.PUBLIC_twitter_ads.twitter_ads__url_report\n    group by source_relation, date_day, promoted_tweet_id, placement, line_item_id, campaign_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.928896Z", "completed_at": "2024-08-04T03:35:20.933010Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.933583Z", "completed_at": "2024-08-04T03:35:20.933590Z"}], "thread_id": "Thread-1", "execution_time": 0.005525112152099609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__url_report_base_url.dfd7ab549e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__url_report\nwhere base_url is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.935519Z", "completed_at": "2024-08-04T03:35:20.939428Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.939820Z", "completed_at": "2024-08-04T03:35:20.939827Z"}], "thread_id": "Thread-1", "execution_time": 0.005159854888916016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__url_report_date_day.33fcb7e04b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__url_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.941610Z", "completed_at": "2024-08-04T03:35:20.946513Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.946896Z", "completed_at": "2024-08-04T03:35:20.946902Z"}], "thread_id": "Thread-1", "execution_time": 0.0061070919036865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__url_report_placement.92ca3b192e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect placement\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__url_report\nwhere placement is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.948737Z", "completed_at": "2024-08-04T03:35:20.952639Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.953021Z", "completed_at": "2024-08-04T03:35:20.953027Z"}], "thread_id": "Thread-1", "execution_time": 0.005113363265991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_ads.not_null_twitter_ads__url_report_promoted_tweet_id.d690f99143", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect promoted_tweet_id\nfrom TEST.PUBLIC_twitter_ads.twitter_ads__url_report\nwhere promoted_tweet_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.980805Z", "completed_at": "2024-08-04T03:35:20.985090Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.985472Z", "completed_at": "2024-08-04T03:35:20.985479Z"}], "thread_id": "Thread-1", "execution_time": 0.005667686462402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_group_report_source_relation__date_day__ad_group_id.9f5387d4e0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, ad_group_id\n    from TEST.PUBLIC_amazon_ads.amazon_ads__ad_group_report\n    group by source_relation, date_day, ad_group_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.987284Z", "completed_at": "2024-08-04T03:35:20.991106Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.991518Z", "completed_at": "2024-08-04T03:35:20.991525Z"}], "thread_id": "Thread-1", "execution_time": 0.0050694942474365234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.not_null_amazon_ads__ad_group_report_ad_group_id.8a23dc123a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_amazon_ads.amazon_ads__ad_group_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:20.993507Z", "completed_at": "2024-08-04T03:35:20.998273Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:20.998661Z", "completed_at": "2024-08-04T03:35:20.998667Z"}], "thread_id": "Thread-1", "execution_time": 0.005988121032714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_report_source_relation__date_day__ad_id.5c0ccedb91", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, ad_id\n    from TEST.PUBLIC_amazon_ads.amazon_ads__ad_report\n    group by source_relation, date_day, ad_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.000506Z", "completed_at": "2024-08-04T03:35:21.004333Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.004711Z", "completed_at": "2024-08-04T03:35:21.004717Z"}], "thread_id": "Thread-1", "execution_time": 0.00503230094909668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.not_null_amazon_ads__ad_report_ad_id.93728159b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_amazon_ads.amazon_ads__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.028701Z", "completed_at": "2024-08-04T03:35:21.032824Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.033210Z", "completed_at": "2024-08-04T03:35:21.033217Z"}], "thread_id": "Thread-1", "execution_time": 0.005492448806762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__campaign_report_source_relation__date_day__campaign_id.0fcead4f41", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, campaign_id\n    from TEST.PUBLIC_amazon_ads.amazon_ads__campaign_report\n    group by source_relation, date_day, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.035057Z", "completed_at": "2024-08-04T03:35:21.039038Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.039442Z", "completed_at": "2024-08-04T03:35:21.039449Z"}], "thread_id": "Thread-1", "execution_time": 0.0052318572998046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.not_null_amazon_ads__campaign_report_campaign_id.a9cabadd7c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_amazon_ads.amazon_ads__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.062081Z", "completed_at": "2024-08-04T03:35:21.066448Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.066852Z", "completed_at": "2024-08-04T03:35:21.066860Z"}], "thread_id": "Thread-1", "execution_time": 0.0057981014251708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__keyword_report_source_relation__date_day__keyword_id.34f042afc1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, keyword_id\n    from TEST.PUBLIC_amazon_ads.amazon_ads__keyword_report\n    group by source_relation, date_day, keyword_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.068728Z", "completed_at": "2024-08-04T03:35:21.072607Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.072991Z", "completed_at": "2024-08-04T03:35:21.072998Z"}], "thread_id": "Thread-1", "execution_time": 0.005104780197143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.not_null_amazon_ads__keyword_report_keyword_id.303f680e4a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_amazon_ads.amazon_ads__keyword_report\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.088734Z", "completed_at": "2024-08-04T03:35:21.092854Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.093236Z", "completed_at": "2024-08-04T03:35:21.093243Z"}], "thread_id": "Thread-1", "execution_time": 0.005495786666870117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__search_report_source_relation__date_day__search_term__keyword_id.21a027f105", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, search_term, keyword_id\n    from TEST.PUBLIC_amazon_ads.amazon_ads__search_report\n    group by source_relation, date_day, search_term, keyword_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.095079Z", "completed_at": "2024-08-04T03:35:21.098913Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.099289Z", "completed_at": "2024-08-04T03:35:21.099296Z"}], "thread_id": "Thread-1", "execution_time": 0.005087137222290039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.amazon_ads.not_null_amazon_ads__search_report_search_term.3c23d4658a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect search_term\nfrom TEST.PUBLIC_amazon_ads.amazon_ads__search_report\nwhere search_term is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.101140Z", "completed_at": "2024-08-04T03:35:21.109291Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.109670Z", "completed_at": "2024-08-04T03:35:21.109676Z"}], "thread_id": "Thread-1", "execution_time": 0.009361982345581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__url_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__basic_ad\n\n), \n\ncreatives as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads.int_facebook_ads__creative_history\n\n), \n\naccounts as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__account_history\n    where is_most_recent_record = true\n\n), \n\nads as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_history\n    where is_most_recent_record = true\n\n), \n\nad_sets as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__ad_set_history\n    where is_most_recent_record = true\n\n), \n\ncampaigns as (\n\n    select *\n    from TEST.PUBLIC_facebook_ads_source.stg_facebook_ads__campaign_history\n    where is_most_recent_record = true\n\n), \n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ads.ad_id,\n        ads.ad_name,\n        creatives.creative_id,\n        creatives.creative_name,\n        creatives.base_url,\n        creatives.url_host,\n        creatives.url_path,\n        creatives.utm_source,\n        creatives.utm_medium,\n        creatives.utm_campaign,\n        creatives.utm_content,\n        creatives.utm_term,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join creatives\n        on ads.creative_id = creatives.creative_id\n        and ads.source_relation = creatives.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation  \n\n    \n        where creatives.url is not null\n    \n    \n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\n)\n\nselect *\nfrom joined", "relation_name": "TEST.PUBLIC_facebook_ads.facebook_ads__url_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.139337Z", "completed_at": "2024-08-04T03:35:21.143454Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.143867Z", "completed_at": "2024-08-04T03:35:21.143873Z"}], "thread_id": "Thread-1", "execution_time": 0.0055179595947265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__ad_report_source_relation__ad_id__date_day.9116e93fba", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, date_day\n    from TEST.PUBLIC_snapchat_ads.snapchat_ads__ad_report\n    group by source_relation, ad_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.145697Z", "completed_at": "2024-08-04T03:35:21.149561Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.149944Z", "completed_at": "2024-08-04T03:35:21.149950Z"}], "thread_id": "Thread-1", "execution_time": 0.005082368850708008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.not_null_snapchat_ads__ad_report_ad_id.9000850744", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.151789Z", "completed_at": "2024-08-04T03:35:21.155640Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.156020Z", "completed_at": "2024-08-04T03:35:21.156026Z"}], "thread_id": "Thread-1", "execution_time": 0.005100250244140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.not_null_snapchat_ads__ad_report_date_day.7c5350c8fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__ad_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.157834Z", "completed_at": "2024-08-04T03:35:21.162770Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.163157Z", "completed_at": "2024-08-04T03:35:21.163163Z"}], "thread_id": "Thread-1", "execution_time": 0.006158113479614258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__url_report_source_relation__ad_id__date_day.86e3504c07", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, date_day\n    from TEST.PUBLIC_snapchat_ads.snapchat_ads__url_report\n    group by source_relation, ad_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.165031Z", "completed_at": "2024-08-04T03:35:21.168921Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.169296Z", "completed_at": "2024-08-04T03:35:21.169303Z"}], "thread_id": "Thread-1", "execution_time": 0.005104780197143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.not_null_snapchat_ads__url_report_ad_id.ecbdfc0d78", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__url_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.171120Z", "completed_at": "2024-08-04T03:35:21.175102Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.175506Z", "completed_at": "2024-08-04T03:35:21.175512Z"}], "thread_id": "Thread-1", "execution_time": 0.005232810974121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.not_null_snapchat_ads__url_report_base_url.15676dc1de", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__url_report\nwhere base_url is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.177325Z", "completed_at": "2024-08-04T03:35:21.181173Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.181554Z", "completed_at": "2024-08-04T03:35:21.181561Z"}], "thread_id": "Thread-1", "execution_time": 0.005068063735961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snapchat_ads.not_null_snapchat_ads__url_report_date_day.bcbe87a7f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__url_report\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.183352Z", "completed_at": "2024-08-04T03:35:21.192218Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.192602Z", "completed_at": "2024-08-04T03:35:21.192609Z"}], "thread_id": "Thread-1", "execution_time": 0.010083675384521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ad_reporting.ad_reporting__account_report", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__int_ad_reporting__account_report as (\n\n\n\nwith\n\n\ntwitter_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'twitter_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_twitter_ads.twitter_ads__account_report\n\n),\n\n\n\nfacebook_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'facebook_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_facebook_ads.facebook_ads__account_report\n\n),\n\n\n\ngoogle_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'google_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_google_ads.google_ads__account_report\n\n),\n\n\n\nmicrosoft_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'microsoft_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__account_report\n\n),\n\n\n\n\napple_search_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'apple_search_ads' as TEXT) as platform,\n\n    cast(organization_id as TEXT) as account_id\n\n    \n    ,cast(organization_name as TEXT) as account_name\n\n    \n    ,cast(taps as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__organization_report\n\n),\n\n\n\nlinkedin_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'linkedin_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(cost as float) as spend\n\n    \nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__account_report\n\n),\n\n\n\npinterest_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'pinterest_ads' as TEXT) as platform,\n\n    cast(advertiser_id as TEXT) as account_id\n\n    \n    ,cast(advertiser_name as TEXT) as account_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_pinterest.pinterest_ads__advertiser_report\n\n),\n\n\n\nsnapchat_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'snapchat_ads' as TEXT) as platform,\n\n    cast(ad_account_id as TEXT) as account_id\n\n    \n    ,cast(ad_account_name as TEXT) as account_name\n\n    \n    ,cast(swipes as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__account_report\n\n), \n\n\n\ntiktok_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'tiktok_ads' as TEXT) as platform,\n\n    cast(advertiser_id as TEXT) as account_id\n\n    \n    ,cast(advertiser_name as TEXT) as account_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__advertiser_report\n\n), \n\n\n\namazon_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'amazon_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(cost as float) as spend\n\n    \nfrom TEST.PUBLIC_amazon_ads.amazon_ads__account_report\n\n), \n\n\n\nreddit_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'reddit_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(null as TEXT) as account_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_reddit_ads.reddit_ads__account_report\n\n),\n\n\nunioned as (\n\n    \n\n\nselect * from amazon_ads\n\nunion all\n\nselect * from apple_search_ads\n\nunion all\n\nselect * from facebook_ads\n\nunion all\n\nselect * from google_ads\n\nunion all\n\nselect * from linkedin_ads\n\nunion all\n\nselect * from microsoft_ads\n\nunion all\n\nselect * from pinterest_ads\n\nunion all\n\nselect * from snapchat_ads\n\nunion all\n\nselect * from tiktok_ads\n\nunion all\n\nselect * from twitter_ads\n\nunion all\n\nselect * from reddit_ads\n\n\n\n\n)\n\nselect *\nfrom unioned\n), base as (\n\n    select *\n    from __dbt__cte__int_ad_reporting__account_report\n),\n\naggregated as (\n    \n    select\n        source_relation,\n        date_day,\n        platform,\n        account_id,\n        account_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend \n\n        \n\n\n\n\n\n    from base\n    group by 1,2,3,4,5\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_ad_reporting.ad_reporting__account_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.194591Z", "completed_at": "2024-08-04T03:35:21.203111Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.203515Z", "completed_at": "2024-08-04T03:35:21.203521Z"}], "thread_id": "Thread-1", "execution_time": 0.009919404983520508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ad_reporting.ad_reporting__ad_group_report", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__int_ad_reporting__ad_group_report as (\n\n\n\nwith\n\n\ngoogle_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'google_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_google_ads.google_ads__ad_group_report\n\n),\n\n\n\nmicrosoft_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'microsoft_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__ad_group_report\n\n),\n\n\n\n\napple_search_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'apple_search_ads' as TEXT) as platform,\n\n    cast(organization_id as TEXT) as account_id\n\n    \n    ,cast(organization_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(taps as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__ad_group_report\n\n),\n\n\n\nlinkedin_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'linkedin_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as ad_group_id\n\n    \n    ,cast(campaign_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_group_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_group_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(cost as float) as spend\n\n    \nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__campaign_report\n\n),\n\n\n\nfacebook_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'facebook_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_set_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_set_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_facebook_ads.facebook_ads__ad_set_report\n\n),\n\n\n\npinterest_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'pinterest_ads' as TEXT) as platform,\n\n    cast(advertiser_id as TEXT) as account_id\n\n    \n    ,cast(advertiser_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_pinterest.pinterest_ads__ad_group_report\n\n),\n\n\n\nsnapchat_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'snapchat_ads' as TEXT) as platform,\n\n    cast(ad_account_id as TEXT) as account_id\n\n    \n    ,cast(ad_account_name as TEXT) as account_name\n\n    \n    ,cast(ad_squad_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_squad_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(swipes as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__ad_squad_report\n\n), \n\n\n\ntiktok_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'tiktok_ads' as TEXT) as platform,\n\n    cast(advertiser_id as TEXT) as account_id\n\n    \n    ,cast(advertiser_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__ad_group_report\n\n), \n\n\n\ntwitter_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'twitter_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(line_item_id as TEXT) as ad_group_id\n\n    \n    ,cast(line_item_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_twitter_ads.twitter_ads__line_item_report\n\n), \n\n\n\namazon_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'amazon_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(cost as float) as spend\n\n    \nfrom TEST.PUBLIC_amazon_ads.amazon_ads__ad_group_report\n\n), \n\n\n\nreddit_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'reddit_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(null as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_reddit_ads.reddit_ads__ad_group_report\n\n),\n\n\nunioned as (\n\n    \n\n\nselect * from amazon_ads\n\nunion all\n\nselect * from apple_search_ads\n\nunion all\n\nselect * from facebook_ads\n\nunion all\n\nselect * from google_ads\n\nunion all\n\nselect * from linkedin_ads\n\nunion all\n\nselect * from microsoft_ads\n\nunion all\n\nselect * from pinterest_ads\n\nunion all\n\nselect * from snapchat_ads\n\nunion all\n\nselect * from tiktok_ads\n\nunion all\n\nselect * from twitter_ads\n\nunion all\n\nselect * from reddit_ads\n\n\n\n\n)\n\nselect *\nfrom unioned\n), base as (\n\n    select *\n    from __dbt__cte__int_ad_reporting__ad_group_report\n),\n\naggregated as (\n    \n    select\n        source_relation,\n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend \n\n        \n\n\n\n\n\n    from base\n    group by 1,2,3,4,5,6,7,8,9\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_ad_reporting.ad_reporting__ad_group_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.205613Z", "completed_at": "2024-08-04T03:35:21.213676Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.214059Z", "completed_at": "2024-08-04T03:35:21.214065Z"}], "thread_id": "Thread-1", "execution_time": 0.009511947631835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ad_reporting.ad_reporting__campaign_report", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__int_ad_reporting__campaign_report as (\n\n\n\nwith\n\n\ntwitter_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'twitter_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_twitter_ads.twitter_ads__campaign_report\n\n),\n\n\n\nfacebook_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'facebook_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_facebook_ads.facebook_ads__campaign_report\n\n),\n\n\n\ngoogle_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'google_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_google_ads.google_ads__campaign_report\n\n),\n\n\n\nmicrosoft_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'microsoft_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__campaign_report\n\n),\n\n\n\n\napple_search_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'apple_search_ads' as TEXT) as platform,\n\n    cast(organization_id as TEXT) as account_id\n\n    \n    ,cast(organization_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(taps as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__campaign_report\n\n),\n\n\n\nlinkedin_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'linkedin_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(campaign_group_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_group_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(cost as float) as spend\n\n    \nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__campaign_group_report\n\n),\n\n\n\npinterest_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'pinterest_ads' as TEXT) as platform,\n\n    cast(advertiser_id as TEXT) as account_id\n\n    \n    ,cast(advertiser_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_pinterest.pinterest_ads__campaign_report\n\n),\n\n\n\nsnapchat_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'snapchat_ads' as TEXT) as platform,\n\n    cast(ad_account_id as TEXT) as account_id\n\n    \n    ,cast(ad_account_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(swipes as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__campaign_report\n\n), \n\n\n\ntiktok_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'tiktok_ads' as TEXT) as platform,\n\n    cast(advertiser_id as TEXT) as account_id\n\n    \n    ,cast(advertiser_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__campaign_report\n\n), \n\n\n\namazon_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'amazon_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(cost as float) as spend\n\n    \nfrom TEST.PUBLIC_amazon_ads.amazon_ads__campaign_report\n\n), \n\n\n\nreddit_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'reddit_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(null as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_reddit_ads.reddit_ads__campaign_report\n\n),\n\n\nunioned as (\n\n    \n\n\nselect * from amazon_ads\n\nunion all\n\nselect * from apple_search_ads\n\nunion all\n\nselect * from facebook_ads\n\nunion all\n\nselect * from google_ads\n\nunion all\n\nselect * from linkedin_ads\n\nunion all\n\nselect * from microsoft_ads\n\nunion all\n\nselect * from pinterest_ads\n\nunion all\n\nselect * from snapchat_ads\n\nunion all\n\nselect * from tiktok_ads\n\nunion all\n\nselect * from twitter_ads\n\nunion all\n\nselect * from reddit_ads\n\n\n\n\n)\n\nselect *\nfrom unioned\n), base as (\n\n    select *\n    from __dbt__cte__int_ad_reporting__campaign_report\n),\n\naggregated as (\n    \n    select\n        source_relation,\n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend \n\n        \n\n\n\n\n\n    from base\n    group by 1,2,3,4,5,6,7\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_ad_reporting.ad_reporting__campaign_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.216041Z", "completed_at": "2024-08-04T03:35:21.343569Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.343967Z", "completed_at": "2024-08-04T03:35:21.343977Z"}], "thread_id": "Thread-1", "execution_time": 0.1289384365081787, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ad_reporting.ad_reporting__keyword_report", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith  __dbt__cte__int_ad_reporting__keyword_report as (\n\n\n\n\n\n\n\nwith\n\napple_search_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'apple_search_ads' as TEXT) as platform,\n\n    cast(organization_id as TEXT) as account_id\n\n    \n    ,cast(organization_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(taps as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(keyword_id as TEXT) as keyword_id\n\n    \n    ,cast(match_type as TEXT) as keyword_match_type\n\n    \n    ,cast(keyword_text as TEXT) as keyword_text\n\n    \n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__keyword_report\n\n),\n\n\n\ngoogle_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'google_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(criterion_id as TEXT) as keyword_id\n\n    \n    ,cast(keyword_match_type as TEXT) as keyword_match_type\n\n    \n    ,cast(keyword_text as TEXT) as keyword_text\n\n    \n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_google_ads.google_ads__keyword_report\n\n),\n\n\n\nmicrosoft_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'microsoft_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(keyword_id as TEXT) as keyword_id\n\n    \n    ,cast(match_type as TEXT) as keyword_match_type\n\n    \n    ,cast(keyword_name as TEXT) as keyword_text\n\n    \n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__keyword_report\n\n),\n\n\n\npinterest_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'pinterest_ads' as TEXT) as platform,\n\n    cast(advertiser_id as TEXT) as account_id\n\n    \n    ,cast(advertiser_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(keyword_id as TEXT) as keyword_id\n\n    \n    ,cast(match_type as TEXT) as keyword_match_type\n\n    \n    ,cast(keyword_value as TEXT) as keyword_text\n\n    \n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_pinterest.pinterest_ads__keyword_report\n\n),\n\n\n\ntwitter_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'twitter_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(line_item_id as TEXT) as ad_group_id\n\n    \n    ,cast(line_item_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(keyword_id as TEXT) as keyword_id\n\n    \n    ,cast(null as TEXT) as keyword_match_type\n\n    \n    ,cast(keyword as TEXT) as keyword_text\n\n    \n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_twitter_ads.twitter_ads__keyword_report\n\n), \n\n\n\namazon_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'amazon_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(keyword_id as TEXT) as keyword_id\n\n    \n    ,cast(match_type as TEXT) as keyword_match_type\n\n    \n    ,cast(keyword_text as TEXT) as keyword_text\n\n    \n    ,cast(cost as float) as spend\n\n    \nfrom TEST.PUBLIC_amazon_ads.amazon_ads__keyword_report\n\n), \n\n\nunioned as (\n\n    \n\n\nselect * from amazon_ads\n\nunion all\n\nselect * from apple_search_ads\n\nunion all\n\nselect * from google_ads\n\nunion all\n\nselect * from microsoft_ads\n\nunion all\n\nselect * from pinterest_ads\n\nunion all\n\nselect * from twitter_ads\n\n\n\n\n)\n\nselect *\nfrom unioned\n), base as (\n\n    select *\n    from __dbt__cte__int_ad_reporting__keyword_report\n),\n\naggregated as (\n    \n    select\n        source_relation,\n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        keyword_id,\n        keyword_text,\n        keyword_match_type,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend \n\n        \n\n\n\n\n\n    from base\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_ad_reporting.ad_reporting__keyword_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.346098Z", "completed_at": "2024-08-04T03:35:21.356503Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.356891Z", "completed_at": "2024-08-04T03:35:21.356898Z"}], "thread_id": "Thread-1", "execution_time": 0.011797189712524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ad_reporting.ad_reporting__search_report", "compiled": true, "compiled_code": "\n    \n\n\n\n\n\nwith  __dbt__cte__int_ad_reporting__search_report as (\n\n    \n\n\n\n\n\nwith \n\nmicrosoft_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'microsoft_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(keyword_id as TEXT) as keyword_id\n\n    \n    ,cast(keyword_name as TEXT) as keyword_text\n\n    \n    ,cast(match_type as TEXT) as search_match_type\n\n    \n    ,cast(search_query as TEXT) as search_query\n\n    \n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__search_report\n\n), \n\n\n\napple_search_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'apple_search_ads' as TEXT) as platform,\n\n    cast(organization_id as TEXT) as account_id\n\n    \n    ,cast(organization_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(taps as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(keyword_id as TEXT) as keyword_id\n\n    \n    ,cast(keyword_text as TEXT) as keyword_text\n\n    \n    ,cast(match_type as TEXT) as search_match_type\n\n    \n    ,cast(search_term_text as TEXT) as search_query\n\n    \n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__search_term_report\n\n), \n\n\n\namazon_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'amazon_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(keyword_id as TEXT) as keyword_id\n\n    \n    ,cast(keyword_text as TEXT) as keyword_text\n\n    \n    ,cast(match_type as TEXT) as search_match_type\n\n    \n    ,cast(search_term as TEXT) as search_query\n\n    \n    ,cast(cost as float) as spend\n\n    \nfrom TEST.PUBLIC_amazon_ads.amazon_ads__search_report\n\n), \n\n\nunioned as (\n\n    \n\n\nselect * from amazon_ads\n\nunion all\n\nselect * from apple_search_ads\n\nunion all\n\nselect * from microsoft_ads\n\n\n\n\n)\n\nselect *\nfrom unioned\n), base as (\n\n    select *\n    from __dbt__cte__int_ad_reporting__search_report\n),\n\naggregated as (\n    \n    select\n        source_relation,\n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        keyword_id,\n        keyword_text,\n        search_query,\n        search_match_type,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend \n\n        \n\n\n\n\n\n    from base\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_ad_reporting.ad_reporting__search_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.386502Z", "completed_at": "2024-08-04T03:35:21.390735Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.391129Z", "completed_at": "2024-08-04T03:35:21.391136Z"}], "thread_id": "Thread-1", "execution_time": 0.005591154098510742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_report_source_relation__date_day__account_id__campaign_id__ad_set_id__ad_id.ef8d3469d4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    from TEST.PUBLIC_facebook_ads.facebook_ads__url_report\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.393001Z", "completed_at": "2024-08-04T03:35:21.397338Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.397722Z", "completed_at": "2024-08-04T03:35:21.397729Z"}], "thread_id": "Thread-1", "execution_time": 0.005570173263549805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__url_report_base_url.b7757e50be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom TEST.PUBLIC_facebook_ads.facebook_ads__url_report\nwhere base_url is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.399639Z", "completed_at": "2024-08-04T03:35:21.408562Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.408947Z", "completed_at": "2024-08-04T03:35:21.408953Z"}], "thread_id": "Thread-1", "execution_time": 0.010258674621582031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ad_reporting.ad_reporting__ad_report", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__int_ad_reporting__ad_report as (\n\n\n\nwith\n\n\ngoogle_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'google_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(ad_id as TEXT) as ad_id\n\n    \n    ,cast(ad_name as TEXT) as ad_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_google_ads.google_ads__ad_report\n\n),\n\n\n\nmicrosoft_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'microsoft_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(ad_id as TEXT) as ad_id\n\n    \n    ,cast(ad_name as TEXT) as ad_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__ad_report\n\n),\n\n\n\n\napple_search_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'apple_search_ads' as TEXT) as platform,\n\n    cast(organization_id as TEXT) as account_id\n\n    \n    ,cast(organization_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(ad_id as TEXT) as ad_id\n\n    \n    ,cast(ad_name as TEXT) as ad_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(taps as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_apple_search_ads.apple_search_ads__ad_report\n\n),\n\n\n\nfacebook_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'facebook_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_set_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_set_name as TEXT) as ad_group_name\n\n    \n    ,cast(ad_id as TEXT) as ad_id\n\n    \n    ,cast(ad_name as TEXT) as ad_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_facebook_ads.facebook_ads__ad_report\n\n),\n\n\n\nlinkedin_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'linkedin_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as ad_group_id\n\n    \n    ,cast(campaign_name as TEXT) as ad_group_name\n\n    \n    ,cast(creative_id as TEXT) as ad_id\n\n    \n    ,cast(null as TEXT) as ad_name\n\n    \n    ,cast(campaign_group_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_group_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(cost as float) as spend\n\n    \nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__creative_report\n\n),\n\n\n\npinterest_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'pinterest_ads' as TEXT) as platform,\n\n    cast(advertiser_id as TEXT) as account_id\n\n    \n    ,cast(advertiser_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(pin_promotion_id as TEXT) as ad_id\n\n    \n    ,cast(pin_name as TEXT) as ad_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_pinterest.pinterest_ads__pin_promotion_report\n\n),\n\n\n\nsnapchat_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'snapchat_ads' as TEXT) as platform,\n\n    cast(ad_account_id as TEXT) as account_id\n\n    \n    ,cast(ad_account_name as TEXT) as account_name\n\n    \n    ,cast(null as TEXT) as ad_group_id\n\n    \n    ,cast(null as TEXT) as ad_group_name\n\n    \n    ,cast(ad_id as TEXT) as ad_id\n\n    \n    ,cast(ad_name as TEXT) as ad_name\n\n    \n    ,cast(null as TEXT) as campaign_id\n\n    \n    ,cast(null as TEXT) as campaign_name\n\n    \n    ,cast(swipes as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__ad_report\n\n), \n\n\n\ntiktok_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'tiktok_ads' as TEXT) as platform,\n\n    cast(advertiser_id as TEXT) as account_id\n\n    \n    ,cast(advertiser_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(ad_id as TEXT) as ad_id\n\n    \n    ,cast(ad_name as TEXT) as ad_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__ad_report\n\n), \n\n\n\ntwitter_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'twitter_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(line_item_id as TEXT) as ad_group_id\n\n    \n    ,cast(line_item_name as TEXT) as ad_group_name\n\n    \n    ,cast(promoted_tweet_id as TEXT) as ad_id\n\n    \n    ,cast(tweet_name as TEXT) as ad_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_twitter_ads.twitter_ads__promoted_tweet_report\n\n), \n\n\n\namazon_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'amazon_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(ad_id as TEXT) as ad_id\n\n    \n    ,cast(advertised_asin as TEXT) as ad_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(cost as float) as spend\n\n    \nfrom TEST.PUBLIC_amazon_ads.amazon_ads__ad_report\n\n), \n\n\n\nreddit_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'reddit_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(null as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(ad_id as TEXT) as ad_id\n\n    \n    ,cast(ad_name as TEXT) as ad_name\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    \nfrom TEST.PUBLIC_reddit_ads.reddit_ads__ad_report\n\n),\n\n\nunioned as (\n\n    \n\n\nselect * from amazon_ads\n\nunion all\n\nselect * from apple_search_ads\n\nunion all\n\nselect * from facebook_ads\n\nunion all\n\nselect * from google_ads\n\nunion all\n\nselect * from linkedin_ads\n\nunion all\n\nselect * from microsoft_ads\n\nunion all\n\nselect * from pinterest_ads\n\nunion all\n\nselect * from snapchat_ads\n\nunion all\n\nselect * from tiktok_ads\n\nunion all\n\nselect * from twitter_ads\n\nunion all\n\nselect * from reddit_ads\n\n\n\n\n)\n\nselect *\nfrom unioned\n), base as (\n\n    select *\n    from __dbt__cte__int_ad_reporting__ad_report\n),\n\naggregated as (\n    \n    select\n        source_relation,\n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        ad_id,\n        ad_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend \n        \n        \n\n\n\n\n\n    from base\n    group by 1,2,3,4,5,6,7,8,9,10,11\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_ad_reporting.ad_reporting__ad_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.410924Z", "completed_at": "2024-08-04T03:35:21.415167Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.415581Z", "completed_at": "2024-08-04T03:35:21.415588Z"}], "thread_id": "Thread-1", "execution_time": 0.005625247955322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__account_report_source_relation__platform__date_day__account_id.4cb64b5631", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, platform, date_day, account_id\n    from TEST.PUBLIC_ad_reporting.ad_reporting__account_report\n    group by source_relation, platform, date_day, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.417404Z", "completed_at": "2024-08-04T03:35:21.421444Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.421826Z", "completed_at": "2024-08-04T03:35:21.421832Z"}], "thread_id": "Thread-1", "execution_time": 0.0052568912506103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.not_null_ad_reporting__account_report_account_id.316a64c022", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom TEST.PUBLIC_ad_reporting.ad_reporting__account_report\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.423719Z", "completed_at": "2024-08-04T03:35:21.428703Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.429095Z", "completed_at": "2024-08-04T03:35:21.429101Z"}], "thread_id": "Thread-1", "execution_time": 0.00627446174621582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__ad_group_report_source_relation__platform__date_day__ad_group_id__campaign_id__account_id.629300a679", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, platform, date_day, ad_group_id, campaign_id, account_id\n    from TEST.PUBLIC_ad_reporting.ad_reporting__ad_group_report\n    group by source_relation, platform, date_day, ad_group_id, campaign_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.430902Z", "completed_at": "2024-08-04T03:35:21.434672Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.435061Z", "completed_at": "2024-08-04T03:35:21.435068Z"}], "thread_id": "Thread-1", "execution_time": 0.004991769790649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.not_null_ad_reporting__ad_group_report_ad_group_id.963e17e842", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom TEST.PUBLIC_ad_reporting.ad_reporting__ad_group_report\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.436933Z", "completed_at": "2024-08-04T03:35:21.441021Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.441404Z", "completed_at": "2024-08-04T03:35:21.441410Z"}], "thread_id": "Thread-1", "execution_time": 0.005323886871337891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__campaign_report_source_relation__platform__date_day__campaign_id__account_id.0cad44418b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, platform, date_day, campaign_id, account_id\n    from TEST.PUBLIC_ad_reporting.ad_reporting__campaign_report\n    group by source_relation, platform, date_day, campaign_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.443252Z", "completed_at": "2024-08-04T03:35:21.447919Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.448300Z", "completed_at": "2024-08-04T03:35:21.448306Z"}], "thread_id": "Thread-1", "execution_time": 0.0059051513671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.not_null_ad_reporting__campaign_report_campaign_id.1cfaa7698b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom TEST.PUBLIC_ad_reporting.ad_reporting__campaign_report\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.450149Z", "completed_at": "2024-08-04T03:35:21.454170Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.454566Z", "completed_at": "2024-08-04T03:35:21.454572Z"}], "thread_id": "Thread-1", "execution_time": 0.005269527435302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__keyword_report_source_relation__platform__date_day__keyword_id__keyword_match_type__ad_group_id__campaign_id__account_id.62e073f236", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, platform, date_day, keyword_id, keyword_match_type, ad_group_id, campaign_id, account_id\n    from TEST.PUBLIC_ad_reporting.ad_reporting__keyword_report\n    group by source_relation, platform, date_day, keyword_id, keyword_match_type, ad_group_id, campaign_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.456417Z", "completed_at": "2024-08-04T03:35:21.460209Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.460592Z", "completed_at": "2024-08-04T03:35:21.460599Z"}], "thread_id": "Thread-1", "execution_time": 0.005007743835449219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.not_null_ad_reporting__keyword_report_keyword_id.51a45fb334", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom TEST.PUBLIC_ad_reporting.ad_reporting__keyword_report\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.462444Z", "completed_at": "2024-08-04T03:35:21.466609Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.467003Z", "completed_at": "2024-08-04T03:35:21.467010Z"}], "thread_id": "Thread-1", "execution_time": 0.0054168701171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__search_report_source_relation__platform__date_day__search_query__search_match_type__keyword_id__ad_group_id__campaign_id__account_id.ee233ddb9e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, platform, date_day, search_query, search_match_type, keyword_id, ad_group_id, campaign_id, account_id\n    from TEST.PUBLIC_ad_reporting.ad_reporting__search_report\n    group by source_relation, platform, date_day, search_query, search_match_type, keyword_id, ad_group_id, campaign_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.468870Z", "completed_at": "2024-08-04T03:35:21.473708Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.474096Z", "completed_at": "2024-08-04T03:35:21.474102Z"}], "thread_id": "Thread-1", "execution_time": 0.006070613861083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.not_null_ad_reporting__search_report_search_query.ee2f0fcafb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect search_query\nfrom TEST.PUBLIC_ad_reporting.ad_reporting__search_report\nwhere search_query is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.475949Z", "completed_at": "2024-08-04T03:35:21.486566Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.486946Z", "completed_at": "2024-08-04T03:35:21.486953Z"}], "thread_id": "Thread-1", "execution_time": 0.011868000030517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ad_reporting.ad_reporting__url_report", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__int_ad_reporting__url_report as (\n\n\n\nwith\n\n\ngoogle_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'google_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(base_url as TEXT) as base_url\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    ,cast(url_host as TEXT) as url_host\n\n    \n    ,cast(url_path as TEXT) as url_path\n\n    \n    ,cast(utm_campaign as TEXT) as utm_campaign\n\n    \n    ,cast(utm_content as TEXT) as utm_content\n\n    \n    ,cast(utm_medium as TEXT) as utm_medium\n\n    \n    ,cast(utm_source as TEXT) as utm_source\n\n    \n    ,cast(utm_term as TEXT) as utm_term\n\n    \n    \nfrom TEST.PUBLIC_google_ads.google_ads__url_report\n\n),\n\n\n\nmicrosoft_ads as (\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'microsoft_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(base_url as TEXT) as base_url\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    ,cast(url_host as TEXT) as url_host\n\n    \n    ,cast(url_path as TEXT) as url_path\n\n    \n    ,cast(utm_campaign as TEXT) as utm_campaign\n\n    \n    ,cast(utm_content as TEXT) as utm_content\n\n    \n    ,cast(utm_medium as TEXT) as utm_medium\n\n    \n    ,cast(utm_source as TEXT) as utm_source\n\n    \n    ,cast(utm_term as TEXT) as utm_term\n\n    \n    \nfrom TEST.PUBLIC_microsoft_ads.microsoft_ads__url_report\n\n),\n\n\n\n\nfacebook_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'facebook_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(ad_set_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_set_name as TEXT) as ad_group_name\n\n    \n    ,cast(base_url as TEXT) as base_url\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    ,cast(url_host as TEXT) as url_host\n\n    \n    ,cast(url_path as TEXT) as url_path\n\n    \n    ,cast(utm_campaign as TEXT) as utm_campaign\n\n    \n    ,cast(utm_content as TEXT) as utm_content\n\n    \n    ,cast(utm_medium as TEXT) as utm_medium\n\n    \n    ,cast(utm_source as TEXT) as utm_source\n\n    \n    ,cast(utm_term as TEXT) as utm_term\n\n    \n    \nfrom TEST.PUBLIC_facebook_ads.facebook_ads__url_report\n\n),\n\n\n\nlinkedin_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'linkedin_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(campaign_id as TEXT) as ad_group_id\n\n    \n    ,cast(campaign_name as TEXT) as ad_group_name\n\n    \n    ,cast(base_url as TEXT) as base_url\n\n    \n    ,cast(campaign_group_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_group_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(cost as float) as spend\n\n    ,cast(url_host as TEXT) as url_host\n\n    \n    ,cast(url_path as TEXT) as url_path\n\n    \n    ,cast(utm_campaign as TEXT) as utm_campaign\n\n    \n    ,cast(utm_content as TEXT) as utm_content\n\n    \n    ,cast(utm_medium as TEXT) as utm_medium\n\n    \n    ,cast(utm_source as TEXT) as utm_source\n\n    \n    ,cast(utm_term as TEXT) as utm_term\n\n    \n    \nfrom TEST.PUBLIC_linkedin_ads.linkedin_ads__url_report\n\n),\n\n\n\npinterest_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'pinterest_ads' as TEXT) as platform,\n\n    cast(advertiser_id as TEXT) as account_id\n\n    \n    ,cast(advertiser_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(base_url as TEXT) as base_url\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    ,cast(url_host as TEXT) as url_host\n\n    \n    ,cast(url_path as TEXT) as url_path\n\n    \n    ,cast(utm_campaign as TEXT) as utm_campaign\n\n    \n    ,cast(utm_content as TEXT) as utm_content\n\n    \n    ,cast(utm_medium as TEXT) as utm_medium\n\n    \n    ,cast(utm_source as TEXT) as utm_source\n\n    \n    ,cast(utm_term as TEXT) as utm_term\n\n    \n    \nfrom TEST.PUBLIC_pinterest.pinterest_ads__url_report\n\n),\n\n\n\nsnapchat_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'snapchat_ads' as TEXT) as platform,\n\n    cast(ad_account_id as TEXT) as account_id\n\n    \n    ,cast(ad_account_name as TEXT) as account_name\n\n    \n    ,cast(ad_squad_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_squad_name as TEXT) as ad_group_name\n\n    \n    ,cast(base_url as TEXT) as base_url\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(swipes as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    ,cast(url_host as TEXT) as url_host\n\n    \n    ,cast(url_path as TEXT) as url_path\n\n    \n    ,cast(utm_campaign as TEXT) as utm_campaign\n\n    \n    ,cast(utm_content as TEXT) as utm_content\n\n    \n    ,cast(utm_medium as TEXT) as utm_medium\n\n    \n    ,cast(utm_source as TEXT) as utm_source\n\n    \n    ,cast(utm_term as TEXT) as utm_term\n\n    \n    \nfrom TEST.PUBLIC_snapchat_ads.snapchat_ads__url_report\n\n), \n\n\n\ntiktok_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'tiktok_ads' as TEXT) as platform,\n\n    cast(advertiser_id as TEXT) as account_id\n\n    \n    ,cast(advertiser_name as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(base_url as TEXT) as base_url\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    ,cast(url_host as TEXT) as url_host\n\n    \n    ,cast(url_path as TEXT) as url_path\n\n    \n    ,cast(utm_campaign as TEXT) as utm_campaign\n\n    \n    ,cast(utm_content as TEXT) as utm_content\n\n    \n    ,cast(utm_medium as TEXT) as utm_medium\n\n    \n    ,cast(utm_source as TEXT) as utm_source\n\n    \n    ,cast(utm_term as TEXT) as utm_term\n\n    \n    \nfrom TEST.PUBLIC_tiktok_ads.tiktok_ads__url_report\n\n), \n\n\n\ntwitter_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'twitter_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(account_name as TEXT) as account_name\n\n    \n    ,cast(line_item_id as TEXT) as ad_group_id\n\n    \n    ,cast(line_item_name as TEXT) as ad_group_name\n\n    \n    ,cast(base_url as TEXT) as base_url\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    ,cast(url_host as TEXT) as url_host\n\n    \n    ,cast(url_path as TEXT) as url_path\n\n    \n    ,cast(utm_campaign as TEXT) as utm_campaign\n\n    \n    ,cast(utm_content as TEXT) as utm_content\n\n    \n    ,cast(utm_medium as TEXT) as utm_medium\n\n    \n    ,cast(utm_source as TEXT) as utm_source\n\n    \n    ,cast(utm_term as TEXT) as utm_term\n\n    \n    \nfrom TEST.PUBLIC_twitter_ads.twitter_ads__url_report\n\n), \n\n\n\nreddit_ads as (\n\n    select \n    source_relation,\n    \n\n    to_date(to_timestamp(date_day))\n\n as date_day,\n    cast( 'reddit_ads' as TEXT) as platform,\n\n    cast(account_id as TEXT) as account_id\n\n    \n    ,cast(null as TEXT) as account_name\n\n    \n    ,cast(ad_group_id as TEXT) as ad_group_id\n\n    \n    ,cast(ad_group_name as TEXT) as ad_group_name\n\n    \n    ,cast(base_url as TEXT) as base_url\n\n    \n    ,cast(campaign_id as TEXT) as campaign_id\n\n    \n    ,cast(campaign_name as TEXT) as campaign_name\n\n    \n    ,cast(clicks as integer) as clicks\n\n    ,cast(impressions as integer) as impressions\n\n    ,cast(spend as float) as spend\n\n    ,cast(url_host as TEXT) as url_host\n\n    \n    ,cast(url_path as TEXT) as url_path\n\n    \n    ,cast(utm_campaign as TEXT) as utm_campaign\n\n    \n    ,cast(utm_content as TEXT) as utm_content\n\n    \n    ,cast(utm_medium as TEXT) as utm_medium\n\n    \n    ,cast(utm_source as TEXT) as utm_source\n\n    \n    ,cast(utm_term as TEXT) as utm_term\n\n    \n    \nfrom TEST.PUBLIC_reddit_ads.reddit_ads__url_report\n\n),\n\n\nunioned as (\n\n    \n\n\nselect * from facebook_ads\n\nunion all\n\nselect * from google_ads\n\nunion all\n\nselect * from linkedin_ads\n\nunion all\n\nselect * from microsoft_ads\n\nunion all\n\nselect * from pinterest_ads\n\nunion all\n\nselect * from snapchat_ads\n\nunion all\n\nselect * from tiktok_ads\n\nunion all\n\nselect * from twitter_ads\n\nunion all\n\nselect * from reddit_ads\n\n\n\n\n)\n\nselect *\nfrom unioned\n), base as (\n\n    select *\n    from __dbt__cte__int_ad_reporting__url_report\n),\n\naggregated as (\n    \n    select\n        source_relation,\n        date_day, \n        platform,\n        account_id, \n        account_name, \n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        base_url,\n        url_host,\n        url_path,\n        utm_source,\n        utm_medium,\n        utm_campaign,\n        utm_content,\n        utm_term,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend \n\n        \n\n\n\n\n\n    from base\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17\n)\n\nselect *\nfrom aggregated", "relation_name": "TEST.PUBLIC_ad_reporting.ad_reporting__url_report"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.488998Z", "completed_at": "2024-08-04T03:35:21.493166Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.493553Z", "completed_at": "2024-08-04T03:35:21.493559Z"}], "thread_id": "Thread-1", "execution_time": 0.005545139312744141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__ad_report_source_relation__platform__date_day__ad_id__ad_group_id__campaign_id__account_id.2e26485f58", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, platform, date_day, ad_id, ad_group_id, campaign_id, account_id\n    from TEST.PUBLIC_ad_reporting.ad_reporting__ad_report\n    group by source_relation, platform, date_day, ad_id, ad_group_id, campaign_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.495414Z", "completed_at": "2024-08-04T03:35:21.499237Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.499658Z", "completed_at": "2024-08-04T03:35:21.499665Z"}], "thread_id": "Thread-1", "execution_time": 0.005105733871459961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.not_null_ad_reporting__ad_report_ad_id.f3eb210152", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom TEST.PUBLIC_ad_reporting.ad_reporting__ad_report\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.501509Z", "completed_at": "2024-08-04T03:35:21.506685Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.507085Z", "completed_at": "2024-08-04T03:35:21.507091Z"}], "thread_id": "Thread-1", "execution_time": 0.0064318180084228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__url_report_source_relation__platform__date_day__ad_group_id__campaign_id__account_id__base_url__url_host__url_path__utm_campaign__utm_content__utm_medium__utm_source__utm_term.2e59004ca0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, platform, date_day, ad_group_id, campaign_id, account_id, base_url, url_host, url_path, utm_campaign, utm_content, utm_medium, utm_source, utm_term\n    from TEST.PUBLIC_ad_reporting.ad_reporting__url_report\n    group by source_relation, platform, date_day, ad_group_id, campaign_id, account_id, base_url, url_host, url_path, utm_campaign, utm_content, utm_medium, utm_source, utm_term\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-04T03:35:21.508986Z", "completed_at": "2024-08-04T03:35:21.512970Z"}, {"name": "execute", "started_at": "2024-08-04T03:35:21.513348Z", "completed_at": "2024-08-04T03:35:21.513355Z"}], "thread_id": "Thread-1", "execution_time": 0.005214214324951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ad_reporting.not_null_ad_reporting__url_report_base_url.a29864e5b6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom TEST.PUBLIC_ad_reporting.ad_reporting__url_report\nwhere base_url is null\n\n\n", "relation_name": null}], "elapsed_time": 109.58211898803711, "args": {"log_format": "default", "output": "text", "use_colors_file": true, "project_dir": "/home/zh2408/dbt_projects/dbt_ad_reporting", "indirect_selection": "eager", "print": true, "require_explicit_package_overrides_for_builtin_materializations": true, "vars": {}, "source_freshness_run_project_hooks": false, "introspect": true, "invocation_command": "dbt compile", "strict_mode": false, "warn_error_options": {"include": [], "exclude": []}, "populate_cache": true, "enable_legacy_logger": false, "favor_state": false, "log_path": "/home/zh2408/dbt_projects/dbt_ad_reporting/logs", "partial_parse_file_diff": true, "defer": false, "empty": false, "partial_parse": true, "use_colors": true, "exclude": [], "inject_ephemeral_ctes": true, "profiles_dir": "/home/zh2408/.dbt", "macro_debugging": false, "show_resource_report": false, "static_parser": true, "log_file_max_bytes": 10485760, "log_level_file": "debug", "write_json": true, "version_check": true, "cache_selected_only": false, "select": [], "log_format_file": "debug", "log_level": "info", "quiet": false, "printer_width": 80, "send_anonymous_usage_stats": true, "which": "compile", "require_resource_names_without_spaces": false}}