version: 2
models:
- name: stg_LuxuryLoanPortfolio
  description: The table is about luxury loans. It contains details of each loan including
    amount, interest rate, duration, and payments. It also has borrower information
    like name and social security number. Property details such as address, value,
    and purpose are included. The table covers financial aspects of loans and personal
    information of borrowers for luxury items like boats.
  columns:
  - name: loan_id
    description: Unique identifier for the loan
    tests:
    - not_null
    - unique
    cocoon_meta:
      uniqueness: This column represents a unique identifier for each loan. For this
        table, each row is for a specific luxury loan. loan_id is unique across rows
        as it's designed to be a primary identifier.
      patterns:
      - regex: LL\d{7}
        summary: Loan IDs starting with 'LL' followed by 7 digits
  - name: loan_amount
    description: Amount of loan funded
    tests:
    - not_null
  - name: loan_duration_years
    description: Loan duration in years
    tests:
    - not_null
  - name: loan_duration_months
    description: Loan duration in months
    tests:
    - not_null
  - name: treasury_index_rate
    description: 10-year Treasury index rate at funding date
    tests:
    - not_null
  - name: interest_rate_percent
    description: Interest rate of the loan as percentage
    tests:
    - not_null
  - name: interest_rate_decimal
    description: Interest rate of the loan as decimal
    tests:
    - not_null
  - name: monthly_payment
    description: Monthly payment amount for the loan
    tests:
    - not_null
  - name: total_payments_made
    description: Total number of past payments made
    tests:
    - not_null
  - name: current_loan_balance
    description: Current balance of the loan
    tests:
    - not_null
  - name: property_value
    description: Estimated value of the property
    tests:
    - not_null
  - name: loan_purpose
    description: Purpose of the loan
    tests:
    - not_null
    - accepted_values:
        values:
        - home
        - investment property
        - commercial property
        - boat
        - car
        - personal
        - education
        - debt consolidation
        - home improvement
        - business
        - medical
        - vacation
        - wedding
        - other
  - name: first_name
    description: Borrower's first name
    tests:
    - not_null
    cocoon_meta:
      patterns:
      - regex: '[A-Z][a-z]+'
        summary: Capitalized words representing first names
  - name: middle_name
    description: Borrower's middle name
    tests:
    - not_null
  - name: last_name
    description: Borrower's last name
    tests:
    - not_null
    cocoon_meta:
      patterns:
      - regex: '[A-Z][a-z]+'
        summary: Last names starting with a capital letter followed by lowercase letters
  - name: ssn
    description: Borrower's social security number
    tests:
    - not_null
    cocoon_meta:
      patterns:
      - regex: \d{3}-\d{2}-\d{4}
        summary: Social Security Numbers in the format XXX-XX-XXXX, where X represents
          a digit
  - name: phone_number
    description: Borrower's phone number
    tests:
    - not_null
    cocoon_meta:
      patterns:
      - regex: \d{3}-\d{3,4}-\d{4}
        summary: Phone numbers in the format of XXX-XXX-XXXX or XXX-XXXX-XXXX
  - name: employment_length_years
    description: Borrower's employment length in years
    tests:
    - not_null
  - name: building_class_category
    description: Description of the building class category
    tests:
    - not_null
  - name: current_tax_class
    description: Current tax classification of the property
    tests:
    - not_null
    - accepted_values:
        values:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
        - '6'
        - '7'
        - '8'
        - '9'
  - name: current_building_class
    description: Current building classification code
    tests:
    - not_null
  - name: address_1
    description: Primary street address of the property
    tests:
    - not_null
    cocoon_meta:
      patterns:
      - regex: \d+\s+[A-Z\s]+
        summary: Street addresses with number and name, without type
      - regex: \d+\s+(EAST|WEST|NORTH|SOUTH)\s+.+
        summary: Addresses with cardinal directions
      - regex: \d+-\d+\s+.+
        summary: Addresses with hyphenated house numbers
      - regex: '[\d-]+\s+[A-Z0-9\s]+(\s+STREET|AVENUE|PLACE|ROAD)?'
        summary: Loose pattern to catch most variations
      - regex: ^.+\s(STREET|AVENUE|PLACE)$
        summary: Street addresses ending with 'STREET', 'AVENUE', or 'PLACE
      - regex: ^\d+-\d+A\s.+$
        summary: Addresses with hyphenated numbers and 'A' suffix (e.g., '143-25A
          ROOSEVELT AVENUE')
      - regex: ^[\w\s\.-]+$
        summary: General pattern for all street addresses (loose match)
  - name: address_2
    description: Secondary address information or unit number
    tests:
    - not_null
  - name: city
    description: City where the property is located
    tests:
    - not_null
  - name: state
    description: State where the property is located
    tests:
    - not_null
  - name: items_financed
    description: Number of luxury items financed in the loan
    tests:
    - not_null
  - name: land_square_feet
    description: Square footage of the land
    tests:
    - not_null
  - name: gross_square_feet
    description: Gross square footage of the property
    tests:
    - not_null
  - name: job_title
    description: Job title of the borrower
    cocoon_meta:
      missing_acceptable: Unemployed or retired individuals may not have a job title.
      patterns:
      - regex: (Senior\s+)?(Executive\s+)?(Regional\s+)?(VP|Vice\s+President)(\s+of\s+\w+)?
        summary: Titles with "VP" or "Vice President" variations
      - regex: C[A-Z]O
        summary: C-suite titles
      - regex: (\w+\s+)+Manager
        summary: Titles ending with "Manager"
      - regex: ((\w+\s+)+Director(\s+of\s+\w+)?|Director(\s+of\s+\w+)?)
        summary: Titles containing "Director"
      - regex: ((\w+\s+)*(Sales|Account)\s+(\w+\s*)*)
        summary: Titles related to sales
      - regex: (Physician|Doctor|MD|RN|Nurse|Dentist|Anesthesiologist|Radiologist)
        summary: Medical professions
      - regex: Chief\s[A-Z][a-z]+(\s[A-Z][a-z]+)*\sOfficer
        summary: Titles with "Chief" prefix
      - regex: VP\s[A-Z][a-z]+
        summary: Titles with "VP" prefix
      - regex: (Owner|President)(/[A-Z][a-z]+)?
        summary: Titles with "Owner" or "President"
      - regex: '[A-Z][a-z]+(\s[A-Z][a-z]+)*'
        summary: Generic job title pattern (captures most entries)
      - regex: Director(\s+of|\,)\s+[A-Za-z\s&]+
        summary: Titles with "Director" followed by a specific area
      - regex: Head\s+of\s+[A-Za-z\s]+
        summary: Titles with "Head of" followed by a department or area
      - regex: Chief\s+[A-Za-z\s]+(\s+Officer)?
        summary: Titles with "Chief" followed by a specific role
      - regex: '[SAEV]VP(\s+&|\,)?(\s+[A-Za-z]+)?'
        summary: Titles with hierarchical levels (e.g., SVP, EVP, AVP)
      - regex: '[A-Z]+\s+[A-Za-z\s/]+'
        summary: Titles with professional designations followed by role (e.g., CPA
          Owner)
      - regex: '[A-Za-z\s\-\,/&]+'
        summary: General free text pattern for job titles
      - regex: ^(Sr\.|VP|V\. P\.|Director|Executive).*
        summary: Titles starting with seniority levels
      - regex: .*(Sales|Analytics|Planning|Business Dev(''t)?|Talent|Mortgage|Retirement).*
        summary: Titles containing specific job areas
      - regex: .*(Captain|Pilot|Physician|Lawyer|Partner|Owner).*
        summary: Titles with industry-specific terms
      - regex: ^[A-Z][a-zA-Z\.\s\-\(\)/''+]+$
        summary: Loose pattern to capture most titles
  - name: funding_date
    description: Date when the loan was funded
    tests:
    - not_null
  - name: sale_tax_class
    description: Tax classification at time of property sale
    tests:
    - not_null
    - accepted_values:
        values:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
        - '6'
        - '7'
        - '8'
  - name: zip_code
    description: Postal code of the borrower's address
    tests:
    - not_null
